{"date":"Wed, 13 Dec 2017 17:00:40 GMT","content-length":"2271766","server":"AmazonS3","x-amz-server-side-encryption":"AES256","x-amz-meta-file_path":"BUDev%2Fprojects%2FSean+Delano%2Fenterprise.wsdl","x-amz-meta-create_time":"2017-07-27 17:32:09.155469","content":"<?xml version="1.0" encoding="UTF-8"?>
<!--
Salesforce.com Enterprise Web Services API Version 40.0
Generated on 2017-07-27 17:29:49 +0000.

Package Versions:
Conga Composer (Version: 8.9, Namespace: apxtconga4)
TargetX Email (Version: 17.10021, Namespace: targetx_email)
Conga Merge QuickMerge (Version: 1.6, Namespace: apxt_cmqm)
SMS Magic Interact (Version: 1.46, Namespace: smagicinteract)
HEDA (Version: 1.37, Namespace: hed)
TargetX Payment Connector (Version: 17.10012, Namespace: targetx_payment)
SMS Magic Workflow (Version: 1.24, Namespace: smagicworkflow)
Salesforce Connected Apps (Version: 1.7, Namespace: sf_com_apps)
SMS Magic Scheduler (Version: 1.8, Namespace: smagicschedule)
TargetX HEDA Toolkit (Version: 1.0, Namespace: targetx_heda)
FormAssembly for AppExchange (Version: 2.2, Namespace: tfa)
TargetX Recruitment Manager (Version: 17.10001, Namespace: targetx_srmb)
Conga Mail Merge (Version: 8.0, Namespace: apxt_cmm)
TargetX Dynamic Portal (Version: 17.10001, Namespace: tgtx_dyn_portal)
TargetX Events (Version: 17.10004, Namespace: targetx_eventsb)
TargetX Base (Version: 17.10002, Namespace: targetx_base)
Survey Tool (Version: 1.1, Namespace: targetx_survey)
Data Management (Version: 1.1, Namespace: targetx_datab)
Salesforce1 and Chatter Apps (Version: 1.14, Namespace: sf_chttr_apps)
Geopointe (Version: 16.13, Namespace: geopointe)
SalesforceA Connected Apps (Version: 1.1, Namespace: sfadminapps)
Informatica Cloud (Version: 4.3, Namespace: informatica)

Copyright 1999-2017 salesforce.com, inc.
All Rights Reserved
-->
<definitions targetNamespace="urn:enterprise.soap.sforce.com" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:enterprise.soap.sforce.com" xmlns:fns="urn:fault.enterprise.soap.sforce.com" xmlns:ens="urn:sobject.enterprise.soap.sforce.com">
    <types>

        <schema elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:sobject.enterprise.soap.sforce.com">

            <import namespace="urn:enterprise.soap.sforce.com"/>


            <!-- Base sObject (abstract) -->
            <complexType name="sObject">
                <sequence>
                    <element name="fieldsToNull" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="Id" type="tns:ID" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="AggregateResult">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                            <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Composer_QuickMerge__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Conga_Solution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Solution__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Solution__c"/>
                        <element name="APXTConga4__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Launch_CM8__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Weblink_ID_Formula__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Weblink_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Weblink_Name_Formula__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Weblink_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Composer_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Disable_C7_Triggers__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXTConga4__Production_Org_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Server_Override__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Email_Staging__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Email_Staging__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Email_Staging__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__HTMLBody__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__TextBody__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__WhatId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__WhoId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Email_Template__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Email_Template__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Email_Template__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Conga_Solution_Email_Templates__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__HTMLBody__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Is_Body_Attachment__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXTConga4__Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Template_Group__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__TextBody__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Merge_Query__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Merge_Query__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Merge_Query__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Conga_Solution_Queries__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Query__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solution_Email_Template__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Email_Template_Group__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Email_Template_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Email_Template__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Email_Template__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Email_Template__c"/>
                        <element name="APXTConga4__Conga_Solution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Solution__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Solution__c"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solution_Parameter__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Solution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Solution__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Solution__c"/>
                        <element name="APXTConga4__Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solution_Query__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Alias__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Query_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Query__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Query__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Merge_Query__c"/>
                        <element name="APXTConga4__Conga_Solution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Solution__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Solution__c"/>
                        <element name="APXTConga4__pv0__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__pv1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__pv2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solution_Report__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Alias__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Solution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Solution__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Solution__c"/>
                        <element name="APXTConga4__Report_Id_Link__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Report_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Report_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__pv0__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__pv1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__pv2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solution_Template__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Conga_Solution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Solution__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Solution__c"/>
                        <element name="APXTConga4__Conga_Template__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="APXTConga4__Conga_Template__r" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Template__c"/>
                        <element name="APXTConga4__Output_File_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Sort_Order__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="APXTConga4__Template_Group__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Template_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solution__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Button_Link_API_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Button_body_field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Composer_Parameters__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Composer_QuickMerge_Records__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__CongaEmailTemplateCount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="APXTConga4__Conga_Solution_Email_Templates__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Conga_Solution_Parameters__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Conga_Solution_Queries__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Conga_Solution_Reports__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Conga_Solution_Templates__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Custom_Object_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Formula_Field_API_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Formula_body_field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Launch_C8_Formula_Button__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Master_Object_Type_Validator__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Master_Object_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Sample_Record_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Solution_Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Solution_Weblink_Syntax__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Weblink_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Solutions_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Enable_Button_To_Solution__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXTConga4__Server_Override__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Template__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:APXTConga4__Conga_Template__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXTConga4__Conga_Template__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXTConga4__Conga_Solution_Templates__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="APXTConga4__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Label_Template_Use_Detail_Data__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXTConga4__Master_Field_to_Set_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Master_Field_to_Set_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Master_Field_to_Set_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Template_Group__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXTConga4__Template_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXT_CMQM__QuickMerge_Link__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:APXT_CMQM__QuickMerge_Link__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="APXT_CMQM__QuickMerge_Link__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="APXT_CMQM__Activity_Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Automatic_Logging__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXT_CMQM__Bypass_Wizard__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXT_CMQM__Campaign_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Default_to_PDF__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXT_CMQM__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Document_Template_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Envelope_Template_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Follow_up_Interval__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="APXT_CMQM__Force_Output_as_PDF__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXT_CMQM__Label_Template_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Launch__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Link_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__LogWordBody__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="APXT_CMQM__Other_Parameters__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Query_Id_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Query_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Report_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="APXT_CMQM__Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AcceptedEventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Account">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Academic_Program_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountPartnersFrom" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountPartnersTo" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AnnualRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Assets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BillingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="BillingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ChildAccounts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contacts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contacts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contracts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Department_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Industry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Institution_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsCustomerPortal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Jigsaw" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JigsawCompanyId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MasterRecord" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="MasterRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NumberOfEmployees" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ObjectTerritory2Associations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityPartnersTo" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Orders" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PartnersFrom" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PartnersTo" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Personas" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Posts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProvidedAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ServicedAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ShippingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="ShippingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SicDesc" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Sport_Organization_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__RelationshipsA__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__RelationshipsB__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Account_Consortiums__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Active__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Next_Event_Date_Time__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Next_Event_Date__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Next_Event_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Next_Event_Time__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Organization_Events__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__BillingCounty__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Current_GPA_Scale__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__EPS_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Education_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Faculty__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Family_Relationship1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Family_Relationship__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__NCES_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__NCES_School_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Protect_from_Deletion__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Sub_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__ceeb_code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__school_level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Website" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="hed__Addresses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Affl_Contacts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Course_Enrollments__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Courses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Current_Address__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Current_Address__r" nillable="true" minOccurs="0" type="ens:hed__Address__c"/>
                        <element name="hed__Household_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Organization_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Primary_Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Primary_Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Program_Enrollments__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Terms__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMS_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="zBU_School_Name_LookUp__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountPartner">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountFrom" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountFromId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AccountTo" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReversePartnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CaseAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OpportunityAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActionLinkGroupTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActionLinkTemplates" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Category" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionsAllowed" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HoursUntilExpiration" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActionLinkTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActionLinkGroupTemplate" nillable="true" minOccurs="0" type="ens:ActionLinkGroupTemplate"/>
                        <element name="ActionLinkGroupTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActionUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Headers" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsConfirmationRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsGroupDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LabelKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Method" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RequestBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserAlias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserVisibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActivityHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivitySubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AlternateDetail" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="AlternateDetailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Cancelled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Copy_to_Org_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Org_Event_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__contactId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__oldWhatId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__testType_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AdditionalNumber">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CallCenterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AddressPlus__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:AddressPlus__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AddressPlus__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="County__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EPS_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Zip_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Announcement">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItem" nillable="true" minOccurs="0" type="ens:FeedItem"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SendEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexClass">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BodyCrc" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsValid" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LengthWithoutComments" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexComponent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ControllerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ControllerType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Markup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexEmailNotification">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexLog">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Application" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationMilliseconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LogUser" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="LogUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Request" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexPage">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ControllerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ControllerType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAvailableInTouch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsConfirmationTokenRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Markup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexPageInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexPageId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAvailableInTouch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsShowHeader" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NameSpacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestQueueItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExtendedStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestRunResultId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestResult">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ApexLog" nillable="true" minOccurs="0" type="ens:ApexLog"/>
                        <element name="ApexLogId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ApexTestResults" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ApexTestRunResult" nillable="true" minOccurs="0" type="ens:ApexTestRunResult"/>
                        <element name="ApexTestRunResultId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AsyncApexJob" nillable="true" minOccurs="0" type="ens:AsyncApexJob"/>
                        <element name="AsyncApexJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Message" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MethodName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Outcome" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QueueItem" nillable="true" minOccurs="0" type="ens:ApexTestQueueItem"/>
                        <element name="QueueItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RunTime" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StackTrace" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestTimestamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestResultLimits">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexTestResult" nillable="true" minOccurs="0" type="ens:ApexTestResult"/>
                        <element name="ApexTestResultId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AsyncCalls" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Callouts" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Cpu" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Dml" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DmlRows" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LimitContext" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LimitExceptions" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePush" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="QueryRows" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Soql" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Sosl" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestRunResult">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AsyncApexJob" nillable="true" minOccurs="0" type="ens:AsyncApexJob"/>
                        <element name="AsyncApexJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ClassesCompleted" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ClassesEnqueued" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EndTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllTests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="JobName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MethodsCompleted" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MethodsEnqueued" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MethodsFailed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Source" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestTime" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestSuite">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClassIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ApexClassJunctions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestSuiteName" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTrigger">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BodyCrc" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsValid" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LengthWithoutComments" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TableEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UsageAfterDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageAfterInsert" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageAfterUndelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageAfterUpdate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageBeforeDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageBeforeInsert" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageBeforeUpdate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageIsBulk" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AppMenuItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CanvasAccessMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CanvasOptions" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasReferenceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasSelectedLocations" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InfoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAccessible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRegisteredDeviceOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUsingAdminAuthorization" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LogoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppBinaryId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppInstallUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppInstalledDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MobileAppInstalledVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppVer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileDeviceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileMinOsVer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePlatform" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileStartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserSortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Asset">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ChildAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InstallDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="IsCompetitorProduct" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Price" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="PrimaryAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PurchaseDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Quantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RelatedAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RootAsset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="RootAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SerialNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UsageEndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetRelationship">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AssetRelationshipNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FromDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelatedAsset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="RelatedAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ToDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetRelationshipFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:AssetRelationship"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetRelationshipHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssetRelationship" nillable="true" minOccurs="0" type="ens:AssetRelationship"/>
                        <element name="AssetRelationshipId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetTokenEvent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActorTokenPayload" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AssetName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AssetSerialNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConnectedApp" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedAppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeviceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeviceKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Expiration" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReplayId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssignmentRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Active" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AsyncApexJob">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AsyncApex" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CompletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExtendedStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JobItemsProcessed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="JobType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastProcessed" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastProcessedOffset" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MethodName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumberOfErrors" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TotalJobItems" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AttachedContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSourceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkedEntity" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="LinkedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Attachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuraDefinitionBundle" nillable="true" minOccurs="0" type="ens:AuraDefinitionBundle"/>
                        <element name="AuraDefinitionBundleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Format" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Source" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinitionBundle">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinitionBundleInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AuraDefinitionBundleId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Bundle" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinitionInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuraDefinitionBundleInfo" nillable="true" minOccurs="0" type="ens:AuraDefinitionBundleInfo"/>
                        <element name="AuraDefinitionBundleInfoId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuraDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Format" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Source" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthConfig">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthOptionsAuthProvider" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AuthOptionsSaml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AuthOptionsUsernamePassword" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AuthProvidersForConfig" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Url" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthConfigProviders">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthConfig" nillable="true" minOccurs="0" type="ens:AuthConfig"/>
                        <element name="AuthConfigId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthProvider">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthorizeUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConsumerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConsumerSecret" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomMetadataTypeRecord" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultScopes" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ErrorUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FriendlyName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IdTokenIssuer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsIncludeOrgIdInId" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSendAccessTokenInHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSendClientCredentialsInHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PluginId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProviderType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RegistrationHandlerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TokenUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserInfoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthSession">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsCurrent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginGeo" nillable="true" minOccurs="0" type="ens:LoginGeo"/>
                        <element name="LoginGeoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginHistory" nillable="true" minOccurs="0" type="ens:LoginHistory"/>
                        <element name="LoginHistoryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumSecondsValid" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SessionPermSetActivations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SessionSecurityLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SessionType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UsersId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BackgroundOperation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Error" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionGroup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExpiresAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FinishedAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="GroupLeader" nillable="true" minOccurs="0" type="ens:BackgroundOperation"/>
                        <element name="GroupLeaderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MergedOperations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumFollowers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessAfter" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RetryBackoff" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RetryCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RetryLimit" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SequenceGroup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SequenceNumber" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartedAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SubmittedAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Timeout" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="WorkerUri" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BrandTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BusinessHours">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FridayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="FridayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MondayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="MondayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SaturdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SaturdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SundayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SundayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ThursdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="ThursdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="TimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TuesdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="TuesdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="WednesdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="WednesdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BusinessProcess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TableEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CallCenter">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AdapterUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomSettings" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InternalName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Version" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Campaign">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ActualCost" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AmountAllOpportunities" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AmountWonOpportunities" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BudgetedCost" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Callbacks__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallerTimeout__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CampaignMemberRecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="CampaignMemberRecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CampaignMemberStatuses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CampaignMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ChildCampaigns" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ExpectedResponse" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ExpectedRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Leads" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumberOfContacts" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfConvertedLeads" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfLeads" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfOpportunities" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfResponses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfWonOpportunities" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberSent" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__Change_End_Date__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__EmailTemplateFollowupOpen__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__EmailTemplateFollowupUnOpen__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__EmailTemplate__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__FromEmail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__FromVanity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__IncludeF2FLink__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__Query__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__R00N50000001d3HoEAI__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__ReplyEmail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__ReplyVanity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__XBounced__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XF2F_By__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XF2F_To__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XInteracted__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XOpted_Out__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XReceived__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XSent__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XViewed_HTML__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__allowMultiReceipts__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__altEmail__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__deDupe__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__de_select_members__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__emailGroups__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_BroadcastMembers__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__fromOwnerEmail__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__includeProfileUpdateLink__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__includeTrackableURL__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__max_email__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__original_recipient_count__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__query_category__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__query_type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__replyOwnerEmail__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__reportID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Invited_Events__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Incoming_SMS__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMS_Batch_Execution_Tracker__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__smsMagic__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignColumns__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ADDRESS__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="COMPANY__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EMAIL__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GENDER__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HOMEPHONE__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MOBILEPHONE__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OWNER__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PHONE__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SALUTATION__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssignedDate__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="AssignedTo__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AssignedTo__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CompanyOrAccount" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DoNotCall" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Failed_Calls__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstRespondedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="HasOptedOutOfEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasOptedOutOfFax" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasResponded" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Lead" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="LeadId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LeadOrContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LeadOrContactOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="LeadOrContactOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Salutation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignMemberStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="HasResponded" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Case">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CaseSolutions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ClosedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactFax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContactMobile" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessages" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEscalated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Origin" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Posts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Reason" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Solutions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedCompany" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TeamMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TeamTemplateRecords" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="smagicinteract__Incoming_SMS__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMS_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseComment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Cases" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CasesId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Case" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Case" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CaseAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseSolution">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Case" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Solution" nillable="true" minOccurs="0" type="ens:Solution"/>
                        <element name="SolutionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TeamRole" nillable="true" minOccurs="0" type="ens:CaseTeamRole"/>
                        <element name="TeamRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TeamTemplateMember" nillable="true" minOccurs="0" type="ens:CaseTeamTemplateMember"/>
                        <element name="TeamTemplateMemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PreferencesVisibleInCSP" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamTemplateMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TeamRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TeamTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamTemplateRecord">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TeamTemplate" nillable="true" minOccurs="0" type="ens:CaseTeamTemplate"/>
                        <element name="TeamTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CategoryData">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CategoryNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RelatedSobjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CategoryNode">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SortStyle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ChatterActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CommentReceivedCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="InfluenceRawRank" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LikeReceivedCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PostCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ClientBrowser">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FullUserAgent" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastUpdate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ProxyInfo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UsersId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroup">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Announcement" nillable="true" minOccurs="0" type="ens:Announcement"/>
                        <element name="AnnouncementId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanHaveGuests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CollaborationGroupRecords" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CollaborationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupMemberRequests" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasPrivateFieldsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="InformationBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InformationTitle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAutoArchiveDisabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsBroadcast" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastFeedModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MediumPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MemberCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CollaborationGroup" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="CollaborationGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CollaborationRole" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastFeedAccessDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NotificationFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupMemberRequest">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CollaborationGroup" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="CollaborationGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Requester" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="RequesterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ResponseMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupRecord">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CollaborationGroup" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="CollaborationGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Record" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationInvitation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="InvitedUserEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InvitedUserEmailNormalized" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InviterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OptionalMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SharedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CombinedAttachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSourceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Community">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ConnectedApplication">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="InstalledMobileApps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MobileSessionTimeout" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileStartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsAllowAdminApprovedUsersOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsHasSessionLevelPolicy" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsIsInternal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsRefreshTokenValidityMetric" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PinLength" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RefreshTokenValidityPeriod" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Contact">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Assets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AssistantName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AssistantPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Birthdate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CampaignMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractsSigned" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Department" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DoNotCall" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailBouncedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailBouncedReason" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailStatuses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Group_Assignment_Override__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Group_Assignment__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasOptedOutOfEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HomePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEmailBounced" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Jigsaw" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JigsawContactId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastCURequestDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastCUUpdateDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MailingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="MailingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="MailingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="MailingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterRecord" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="MasterRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OtherAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="OtherCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OtherLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OtherPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Personas" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Posts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Primary_Academic_Program__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Primary_Academic_Program__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="Primary_Department__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Primary_Department__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="Primary_Educational_Institution__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Primary_Educational_Institution__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="Primary_Sports_Organization__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Primary_Sports_Organization__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="Primary_Student_Organization__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Primary_Student_Organization__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Prospect_Activity_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Application_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Broadcast_Email_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Contact_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Event_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Qualitative_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Relationship_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Score_Last_Updated_Days__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Prospect_Score_Last_Updated__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Prospect_Total_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReportsTo" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ReportsToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Salutation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Access_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Action_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Action_Plans__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Activities_And_Interests__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Community_User__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Contact_Relationships1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Contact_Relationships__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Main_Department__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Merged_Record_Ids__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Office_Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Related_User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Related_User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="TargetX_Base__RelationshipsA__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__RelationshipsB__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__RoleText__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Role__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Datab__Ready_To_Export_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__AltEmail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__BounceCount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__HasAltEmailBounced__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__HasEmailBounced__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__TestEmailContent__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__contactLocationContent__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__emailGroups__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_BroadcastMembers__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__locContentId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__mergedRecordIds__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Contact_Schedule__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Contacts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Guest_Of__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Guest_Of__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Eventsb__Scheduled_Guests__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__mergedRecordIds__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__AIM_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__AIM_Presence__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alien_Registration_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_Address_End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Alternate_Address_Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Alternate_Address__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_Home_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_Mobile_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Alternate_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__AnticipatedFYDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Anticipated_Enrollment_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Housing__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Major_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Major_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Major__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Start_Term_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Start_Term__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Anticipated_Start_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Athletic_Prospect__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Average_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__BannerID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Birth_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Birth_Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Birth_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Campus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Citizenship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Colleague_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__College__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Concentration__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Country_of_Permanent_Residence__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Current_County_or_Parish__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Degree__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Divorce_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Dual_Citizenship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Duplicate_Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__EPS_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Enrollment_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Essays__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Estimated_Family_Contribution__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Ethnicity_Other__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Ethnicity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Extra_Curricular_Activity__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Family_Relationship__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Financial_Aid__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__FirstNameCon__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Former_Last_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Gender_Identity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Gender__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Graduation_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Highest_Degree__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Highly_Desirable__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Home_Language__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__How_Did_You_Find_Out_About_Other__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__How_Did_You_Find_Out_About_Us_Other__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__How_Did_You_Find_Out_About_Us__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__IM_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__IPEDS_Ethnicities__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__IPEDS_Hispanic__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__ISIR_Reveived__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Inquiries__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Inquiry_Letter_Sent__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__IsDuplicate__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Language__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__MailingCounty__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Mailing_Address_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Marital_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Middle_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Military_Branch2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Military_Branch3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Military_Branch__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Military_Service_End_Date2__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Military_Service_End_Date3__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Military_Service_End__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Military_Service_Start_Date2__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Military_Service_Start_Date3__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Military_Service_Start__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Nickname__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Other_Address_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Parents_Divorce_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Parents_Divorce_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Parents_Marital_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Percentile_Rank__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Perm_County_or_Parish__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Permanent_Home_Other__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Permanent_Home__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Preferred_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Primary_Other_Citizenship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Program__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Recalculated_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Recommendation__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Religion__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Reported_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SSN__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Secondary_Other_Citizenship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Stage_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__StreetNum__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Student_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Suffix__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Test__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__US_Veteran__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Visa_Date_Issued__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Visa_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Visa_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__ceeb_code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__refContactId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__refContactName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__school_level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Survey_Responses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="hed__Addresses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Affl_Accounts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__AlternateEmail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Citizenship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Country_of_Origin__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Courses_Taught__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Current_Address__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Current_Address__r" nillable="true" minOccurs="0" type="ens:hed__Address__c"/>
                        <element name="hed__Deceased__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Do_Not_Contact__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Ethnicity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Exclude_from_Household_Formal_Greeting__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Exclude_from_Household_Informal_Greeting__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Exclude_from_Household_Name__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__FERPA__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Financial_Aid_Applicant__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Gender__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__HIPAA_Detail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__HIPAA__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Military_Background__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Military_Service__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Naming_Exclusions__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Organizations__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__PreferredPhone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Preferred_Email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Primary_Address_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Primary_Household__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Primary_Household__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Primary_Organization__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Primary_Organization__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Program_Enrollments__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Relationships1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Relationships__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Religion__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Secondary_Address_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Social_Security_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Student_Course_Enrollments__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__UniversityEmail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__WorkEmail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__WorkPhone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Work_Address__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__is_Address_Override__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Incoming_SMS__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMSOptOut__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__smsMagic__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="targetx_payment__Payment_Details__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="zBU_BUID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_CELOP__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_ENSA__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_Home_School_Indicator__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_MET_Graduate__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_MET_Summer__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_MET_Undergraduate__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_Search_Population__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_Study_Abroad__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_TOEFL_Total_Superscore__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="zBU_Vendor_School_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_active_student__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_exec_office_interest__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="zBU_faculty_or_staff__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_first_gen__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_foreign_languages__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_legal_name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_low_nhrp_indicator__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_low_ses__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_preferred_first_name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_project_lead_the_way__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContactFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContactHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContactShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentAsset">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentBody">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDistribution">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDistributionViews" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDownloadUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentVersion" nillable="true" minOccurs="0" type="ens:ContentVersion"/>
                        <element name="ContentVersionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DistributionPublicUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExpiryDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FirstViewDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Password" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PdfDownloadUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PreferencesAllowOriginalDownload" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesAllowPDFDownload" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesAllowViewInBrowser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesLinkLatestVersion" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesNotifyOnVisit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesNotifyRndtnComplete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesPasswordRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="RelatedRecord" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ViewCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDistributionView">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Distribution" nillable="true" minOccurs="0" type="ens:ContentDistribution"/>
                        <element name="DistributionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDownload" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsInternal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ParentViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ArchivedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ArchivedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="AuditableEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentAsset" nillable="true" minOccurs="0" type="ens:ContentAsset"/>
                        <element name="ContentAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDistributions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentVersions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LatestPublishedVersion" nillable="true" minOccurs="0" type="ens:ContentVersion"/>
                        <element name="LatestPublishedVersionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PublishStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocumentFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocumentHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocumentLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LinkedEntity" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="LinkedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ShareType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolder">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentFolderLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolderItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFolder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolderLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EnableFolderStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ParentEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolderMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildRecord" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ChildRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentVersion">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuditableEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Checksum" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentBody" nillable="true" minOccurs="0" type="ens:ContentBody"/>
                        <element name="ContentBodyId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentLocation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ContentModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSource" nillable="true" minOccurs="0" type="ens:ExternalDataSource"/>
                        <element name="ExternalDataSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ExternalDocumentInfo1" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDocumentInfo2" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeaturedContentBoost" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="FeaturedContentDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstPublishLocation" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="FirstPublishLocationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsAssetEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLatest" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMajorVersion" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NegativeRatingCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Origin" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PathOnClient" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PositiveRatingCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="PublishStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RatingCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ReasonForChange" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TagCsv" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TextPreview" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="VersionData" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="VersionNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentVersionHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentVersion" nillable="true" minOccurs="0" type="ens:ContentVersion"/>
                        <element name="ContentVersionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspace">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentFolderLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentWorkspaceMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefaultRecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsRestrictContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRestrictLinkedContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastWorkspaceActivityDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RootContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ShouldAddCreatorMembership" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TagModel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="WorkspaceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspaceDoc">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentWorkspace" nillable="true" minOccurs="0" type="ens:ContentWorkspace"/>
                        <element name="ContentWorkspaceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsOwner" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspaceMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentWorkspace" nillable="true" minOccurs="0" type="ens:ContentWorkspace"/>
                        <element name="ContentWorkspaceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentWorkspacePermission" nillable="true" minOccurs="0" type="ens:ContentWorkspacePermission"/>
                        <element name="ContentWorkspacePermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MemberType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspacePermission">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PermissionsAddComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddContentOBO" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsArchiveContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeliverContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFeatureContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageWorkspace" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsOrganizeFileAndFolder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTagContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Contract">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ActivatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BillingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="BillingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CompanySigned" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CompanySignedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CompanySignedId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContractTerm" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomerSigned" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="CustomerSignedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CustomerSignedId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CustomerSignedTitle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastApprovedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Orders" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerExpirationNotice" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ShippingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="ShippingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SpecialTerms" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Contract" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ContractId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contract" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ContractId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CorsWhitelistEntry">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UrlPattern" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CronJobDetail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="JobType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CronTrigger">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CronExpression" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CronJobDetail" nillable="true" minOccurs="0" type="ens:CronJobDetail"/>
                        <element name="CronJobDetailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EndTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NextFireTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PreviousFireTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TimesTriggered" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CspTrustedSite">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndpointUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomBrand">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrandAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomBrandAsset">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssetCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrand" nillable="true" minOccurs="0" type="ens:CustomBrand"/>
                        <element name="CustomBrandId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ForeignKeyAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextAsset" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomObjectUserLicenseMetrics">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CustomObjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CustomObjectName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CustomObjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MetricsDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ObjectCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserLicense" nillable="true" minOccurs="0" type="ens:UserLicense"/>
                        <element name="UserLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomPermission">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomPermissionDependencyItem" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CustomPermissionItem" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GrantedByLicenses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProtected" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomPermissionDependency">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomPermission" nillable="true" minOccurs="0" type="ens:CustomPermission"/>
                        <element name="CustomPermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RequiredCustomPermission" nillable="true" minOccurs="0" type="ens:CustomPermission"/>
                        <element name="RequiredCustomPermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Dashboard">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BackgroundDirection" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BackgroundEnd" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="BackgroundStart" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DashboardComponents" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DashboardResultRefreshedDate" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DashboardResultRunningUser" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Folder" nillable="true" minOccurs="0" type="ens:Folder"/>
                        <element name="FolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FolderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LeftSize" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MiddleSize" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RightSize" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RunningUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="RunningUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextColor" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TitleColor" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="TitleSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DashboardComponent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CustomReportId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Dashboard" nillable="true" minOccurs="0" type="ens:Dashboard"/>
                        <element name="DashboardId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DashboardComponentFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:DashboardComponent"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DashboardFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Dashboard"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataAssessmentFieldMetric">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataAssessmentMetric" nillable="true" minOccurs="0" type="ens:DataAssessmentMetric"/>
                        <element name="DataAssessmentMetricId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DataAssessmentValueMetrics" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FieldName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumMatchedBlanks" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatchedDifferent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatchedInSync" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumUnmatchedBlanks" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataAssessmentMetric">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataAssessmentMetrics" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumDuplicates" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatched" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatchedDifferent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumProcessed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumTotal" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumUnmatched" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataAssessmentValueMetric">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataAssessmentFieldMetric" nillable="true" minOccurs="0" type="ens:DataAssessmentFieldMetric"/>
                        <element name="DataAssessmentFieldMetricId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FieldValue" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="ValueCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataStatistics">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatValue" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataType">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContextServiceDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContextWsdlDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsComplex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DeclinedEventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Document">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Author" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AuthorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Folder" nillable="true" minOccurs="0" type="ens:Folder"/>
                        <element name="FolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsBodySearchable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsInternalUseOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublic" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Keywords" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Url" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DocumentAttachmentMap">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DocumentSequence" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Domain">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Domain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DomainSites" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DomainType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OptionsExternalHttps" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DomainSite">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Domain" nillable="true" minOccurs="0" type="ens:Domain"/>
                        <element name="DomainId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PathPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Site" nillable="true" minOccurs="0" type="ens:Site"/>
                        <element name="SiteId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DuplicateRecordItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordSet" nillable="true" minOccurs="0" type="ens:DuplicateRecordSet"/>
                        <element name="DuplicateRecordSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Record" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DuplicateRecordSet">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DuplicateRule" nillable="true" minOccurs="0" type="ens:DuplicateRule"/>
                        <element name="DuplicateRuleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DuplicateRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordSets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailCapture">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CaptureDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FromPattern" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RawMessage" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="RawMessageLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Recipient" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Sender" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ToPattern" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailDomainKey">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Domain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DomainMatch" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PrivateKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PublicKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Selector" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailMessage">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BccAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BccIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="CcAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CcIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FromAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FromName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasAttachment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Headers" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HtmlBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Incoming" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClientManaged" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsExternallyVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MessageDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MessageIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelatedTo" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelatedToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReplyToEmailMessage" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="ReplyToEmailMessageId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ThreadIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ToAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ToIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ValidatedFromAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailMessageRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailMessage" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="EmailMessageId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelationAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelationObjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailServicesAddress">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthorizedSenders" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailDomainName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Function" nillable="true" minOccurs="0" type="ens:EmailServicesFunction"/>
                        <element name="FunctionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LocalPart" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RunAsUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailServicesFunction">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AddressInactiveAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Addresses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachmentOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthenticationFailureAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthorizationFailureAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthorizedSenders" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ErrorRoutingAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FunctionInactiveAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FunctionName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAuthenticationRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsErrorRoutingEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTextAttachmentsAsBinary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTlsRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OverLimitAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailTemplateName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstOpenDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastOpenDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Task" nillable="true" minOccurs="0" type="ens:Task"/>
                        <element name="TaskId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TimesOpened" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BrandTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Encoding" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Folder" nillable="true" minOccurs="0" type="ens:Folder"/>
                        <element name="FolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="HtmlValue" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastUsedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Markup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedEntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TemplateStyle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TemplateType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TimesUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UiType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmbeddedServiceDetail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContrastPrimaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Font" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsPrechatEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NavBarColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PrimaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SecondaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Site" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EntityDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildRelationships" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DefaultCompactLayoutId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DetailUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EditDefinitionUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EditUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalSharingModel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Fields" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasSubtypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HelpSettingPageName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HelpSettingPageUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InternalSharingModel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsApexTriggerable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompactLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCustomSetting" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCustomizable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEverCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEverDeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEverUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFeedEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsIdEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMruEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProcessEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsQueryable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReplicateable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRetrieveable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSearchLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSearchable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSubtype" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTriggerable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWorkflowEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="KeyPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NewUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OwnerChangeOptions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Particles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PluralLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Publisher" nillable="true" minOccurs="0" type="ens:Publisher"/>
                        <element name="PublisherId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QualifiedApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordTypesSupported" nillable="true" minOccurs="0" type="tns:RecordTypesSupported"/>
                        <element name="RelationshipDomains" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RunningUserEntityAccess" nillable="true" minOccurs="0" type="ens:UserEntityAccess"/>
                        <element name="RunningUserEntityAccessId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SearchLayouts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EntityParticle">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ByteLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DataType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultValueFormula" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Digits" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExtraTypeInfo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldDefinition" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InlineHelpText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsApiFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiGroupable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiSortable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAutonumber" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCalculated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCaseSensitive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompactLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsComponent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompound" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefaultedOnCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDependentPicklist" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDisplayLocationInDecimal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEncrypted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFieldHistoryTracked" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighScaleNumber" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtmlFormatted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsIdLookup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNameField" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNamePointing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNillable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPermissionable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUnique" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWorkflowFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWriteRequiresMasterRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Length" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Mask" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MaskType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PicklistValues" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Precision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="QualifiedApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTargetField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTo" nillable="true" minOccurs="0" type="tns:RelationshipReferenceTo"/>
                        <element name="RelationshipName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationshipOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Scale" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ServiceDataType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ServiceDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValueType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ValueTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EntitySubscription">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Subscriber" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SubscriberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Event">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AcceptedEventInviteeIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivityDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ClientGuid" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventInviteeIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupEventType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsChild" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClientManaged" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsException" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsGroupEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRecurrence" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OriginalInstanceDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecurrenceActivityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecurrenceDayOfMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceDayOfWeekMask" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceEndDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceInterval" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceMonthOfYear" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceStartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RecurrenceTimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurringEvents" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ShowAs" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Cancelled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Copy_to_Org_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Org_Event_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__contactId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__oldWhatId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__testType_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UndecidedEventInviteeIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventBusSubscriber">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tip" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Topic" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventLogFile">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LogDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LogFile" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="LogFileContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogFileFieldNames" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogFileFieldTypes" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogFileLength" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventRecurrenceException">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityDateOriginal" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ActivityDateTimeOriginal" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsAllDayEventOriginal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeletion" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RecurrenceEventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ExternalDataSource">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomConfiguration" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Endpoint" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWritable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LargeIcon" nillable="true" minOccurs="0" type="ens:StaticResource"/>
                        <element name="LargeIconId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PrincipalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Protocol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Repository" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SmallIcon" nillable="true" minOccurs="0" type="ens:StaticResource"/>
                        <element name="SmallIconId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserAuths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ExternalDataUserAuth">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSource" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ExternalDataSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Password" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Protocol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ExternalSocialAccount">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthorizedBy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataSourceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultResponseAccount" nillable="true" minOccurs="0" type="ens:ExternalSocialAccount"/>
                        <element name="DefaultResponseAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalAccountId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalPictureURL" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAuthenticated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCaseCreationEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDataSourceActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProfileUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Provider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProviderUserId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RuleId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SocialPropertyId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UniqueName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedAttachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedComment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuditableEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CommentBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedRevisions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastEditById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastEditDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Revision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuditableEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BestComment" nillable="true" minOccurs="0" type="ens:FeedComment"/>
                        <element name="BestCommentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedItemThanks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedRevisions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasFeedEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastEditById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastEditDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Revision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedLike">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedPollChoice">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChoiceBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedPollVotes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedPollVote">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Choice" nillable="true" minOccurs="0" type="ens:FeedPollChoice"/>
                        <element name="ChoiceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedRevision">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Action" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EditedAttribute" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsValueRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OriginNetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Revision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedTrackedChange">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FieldName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FieldDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ControlledFields" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ControllingFieldDefinition" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="ControllingFieldDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DataType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExtraTypeInfo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsApiFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiGroupable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiSortable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCalculated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompactLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompound" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFieldHistoryTracked" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighScaleNumber" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtmlFormatted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsIndexed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListSortable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNameField" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNillable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSearchPrefilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWorkflowFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Length" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Particles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Precision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Publisher" nillable="true" minOccurs="0" type="ens:Publisher"/>
                        <element name="PublisherId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QualifiedApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTargetField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTo" nillable="true" minOccurs="0" type="tns:RelationshipReferenceTo"/>
                        <element name="RelationshipDomains" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelationshipName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RunningUserFieldAccess" nillable="true" minOccurs="0" type="ens:UserFieldAccess"/>
                        <element name="RunningUserFieldAccessId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Scale" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ServiceDataType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ServiceDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValueType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ValueTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FieldPermissions">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PermissionsEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FileSearchActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AvgNumResults" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ClickRank" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CountQueries" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CountUsers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Period" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QueryDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="QueryLanguage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SearchTerm" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FiscalYearSettings">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="IsStandardYear" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PeriodId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PeriodLabelScheme" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PeriodPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Periods" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="QuarterLabelScheme" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QuarterPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="WeekLabelScheme" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="WeekStartDay" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="YearType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FlexQueueItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AsyncApexJob" nillable="true" minOccurs="0" type="ens:AsyncApexJob"/>
                        <element name="AsyncApexJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FlexQueueItemId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JobPosition" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="JobType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FlowInterview">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CurrentElement" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Guid" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InterviewLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PauseLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FlowInterviewShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:FlowInterview"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Folder">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsReadonly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FolderedContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFolder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ForecastShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanSubmit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="GrantedByLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomPermission" nillable="true" minOccurs="0" type="ens:CustomPermission"/>
                        <element name="CustomPermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionSetLicense" nillable="true" minOccurs="0" type="ens:PermissionSetLicense"/>
                        <element name="PermissionSetLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Group">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DelegatedUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DoesIncludeBosses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="DoesSendEmailToMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="QueueSobjects" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Related" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelatedId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="GroupMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Group" nillable="true" minOccurs="0" type="ens:Group"/>
                        <element name="GroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Holiday">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndTimeInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsAllDay" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRecurrence" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceDayOfMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceDayOfWeekMask" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceEndDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceInterval" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceMonthOfYear" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceStartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartTimeInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Idea">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Categories" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Comments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Community" nillable="true" minOccurs="0" type="ens:Community"/>
                        <element name="CommunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatorFullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorSmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMerged" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastComment" nillable="true" minOccurs="0" type="ens:IdeaComment"/>
                        <element name="LastCommentDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastCommentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NumComments" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentIdea" nillable="true" minOccurs="0" type="ens:Idea"/>
                        <element name="ParentIdeaId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="VoteScore" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="VoteTotal" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Votes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="IdeaComment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatorFullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorSmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Idea" nillable="true" minOccurs="0" type="ens:Idea"/>
                        <element name="IdeaId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UpVotes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Votes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="InstalledMobileApp">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ConnectedApplication" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Version" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="KnowledgeableUser">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RawRank" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Lead">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Address" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="AnnualRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Company" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ConvertedAccount" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ConvertedAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ConvertedContact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ConvertedContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ConvertedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ConvertedOpportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="ConvertedOpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailBouncedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailBouncedReason" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailStatuses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasOptedOutOfEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Industry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsConverted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUnreadByOwner" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Jigsaw" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JigsawContactId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MasterRecord" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="MasterRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NumberOfEmployees" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Personas" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Posts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Rating" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Salutation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Merged_Record_Ids__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__BounceCount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__HasEmailBounced__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__R00N50000001eLorEAE__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__mergedRecordIds__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__BannerID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Colleague_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__County__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__EPS_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__ceeb_code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__school_level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Website" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="smagicinteract__CurrentGenerators__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Incoming_SMS__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__NumberofLocations__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Primary__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__ProductInterest__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SICCode__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMSOptOut__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__TestDate__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__smsMagic__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Lead" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="LeadId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Lead" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="LeadAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LeadId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsConverted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListView">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsSoqlCompatible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListViewChart">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AggregateField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AggregateType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ChartType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupingField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListViewChartInstance">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AggregateField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AggregateType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ChartType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DataQuery" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupingField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEditable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLastViewed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ListViewChart" nillable="true" minOccurs="0" type="ens:ListViewChart"/>
                        <element name="ListViewChartId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ListViewContext" nillable="true" minOccurs="0" type="ens:ListView"/>
                        <element name="ListViewContextId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SourceEntity" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginGeo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CountryIso" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LoginTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subdivision" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Application" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthenticationServiceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Browser" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CipherSuite" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ClientVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CountryIso" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LoginGeo" nillable="true" minOccurs="0" type="ens:LoginGeo"/>
                        <element name="LoginGeoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LoginUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Platform" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TlsProtocol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginIp">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChallengeMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ChallengeSentDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAuthenticated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UsersId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LookedUpFromActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivitySubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisibleInSelfService" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Cancelled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Copy_to_Org_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Org_Event_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__contactId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__oldWhatId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__testType_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Macro">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MacroHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Macro" nillable="true" minOccurs="0" type="ens:Macro"/>
                        <element name="MacroId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MacroInstruction">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Macro" nillable="true" minOccurs="0" type="ens:Macro"/>
                        <element name="MacroId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Target" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValueRecord" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MacroShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Macro"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MailmergeTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Filename" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastUsedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SecurityOptionsAttachmentHasFlash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SecurityOptionsAttachmentHasXSSThreat" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SecurityOptionsAttachmentScannedForXSS" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SecurityOptionsAttachmentScannedforFlash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MatchingRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BooleanFilter" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MatchEngine" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MatchingRuleItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RuleStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MatchingRuleItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BlankValueBehavior" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MatchingMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MatchingRule" nillable="true" minOccurs="0" type="ens:MatchingRule"/>
                        <element name="MatchingRuleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Name">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Alias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NameOrAlias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRole" nillable="true" minOccurs="0" type="ens:UserRole"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NamedCredential">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CalloutOptionsAllowMergeFieldsInBody" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CalloutOptionsAllowMergeFieldsInHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CalloutOptionsGenerateAuthorizationHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Endpoint" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PrincipalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserAuths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NavigationLinkSet">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NavigationMenuItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessRestriction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefaultListView" nillable="true" minOccurs="0" type="ens:ListView"/>
                        <element name="DefaultListViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NavigationLinkSet" nillable="true" minOccurs="0" type="ens:NavigationLinkSet"/>
                        <element name="NavigationLinkSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:NavigationMenuItem"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Target" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetPrefs" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Network">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AllowedExtensions" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseCommentEmailTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ChangePasswordEmailTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailFooterLogoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EmailFooterText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailSenderAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailSenderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstActivationDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ForgotPasswordEmailTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MaxFileSizeKb" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkActivityAudits" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkBadgeDefinitions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkBadges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkCollaborationGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkEntitySubscriptions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkModerations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NetworkThanks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NewSenderAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsAllowInternalUserLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowMembersToFlag" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsDirectMessagesEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsEnableTopicAssignmentRules" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsGatherCustomerSentimentData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsGuestChatterEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsGuestFileAccessEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsInvitationsEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsKnowledgeableEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsNetworkSentimentAnalysis" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsNicknameDisplayEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsPrivateMessagesEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsReputationEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsReputationRecordConversationsDisabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSelfRegistrationEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSendWelcomeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsShowAllNetworkSettings" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSiteAsContainerEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SelfRegProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UrlPathPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="WelcomeEmailTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NetworkActivityAudit">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Action" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Entity" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="EntityCreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="EntityCreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntity" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NetworkMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefaultGroupNotificationFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DigestFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastChatterActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PreferencesDisCommentAfterLikeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisMentionsCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisProfPostCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableAllFeedsEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableBookmarkEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableChangeCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableDirectMessageEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableEndorsementEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableFollowersEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableItemFlaggedEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableLaterCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableLikeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableMentionsPostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableMessageEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisablePendingReviewEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableProfilePostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesDisableSharePostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ReputationPoints" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NetworkMemberGroup">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssignmentStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NetworkModeration">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ModerationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Note" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NetworkPageOverride">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="OverrideSetting" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OverrideType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NetworkSelfRegistration">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Note">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NoteAndAttachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNote" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OauthToken">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessToken" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AppMenuItem" nillable="true" minOccurs="0" type="ens:AppMenuItem"/>
                        <element name="AppMenuItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AppName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeleteToken" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastUsedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RequestToken" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UseCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ObjectPermissions">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PermissionsCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllRecords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllRecords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ObjectTerritory2AssignmentRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BooleanFilter" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ObjectTerritory2AssignmentRuleItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ObjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RuleTerritory2Associations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2Model" nillable="true" minOccurs="0" type="ens:Territory2Model"/>
                        <element name="Territory2ModelId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ObjectTerritory2AssignmentRuleItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Rule" nillable="true" minOccurs="0" type="ens:ObjectTerritory2AssignmentRule"/>
                        <element name="RuleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ObjectTerritory2Association">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssociationCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Object" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ObjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2" nillable="true" minOccurs="0" type="ens:Territory2"/>
                        <element name="Territory2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpenActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivitySubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AlternateDetail" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="AlternateDetailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Cancelled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Copy_to_Org_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Org_Event_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__contactId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__oldWhatId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__testType_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Opportunity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AccountPartners" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Amount" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CloseDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fiscal" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FiscalQuarter" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="FiscalYear" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ForecastCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastCategoryName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasOpenActivity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasOpportunityLineItem" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasOverdueTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsExcludedFromTerritory2Filter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWon" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NextStep" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityCompetitors" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityLineItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityPartnersFrom" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Orders" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Partners" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Probability" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StageName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Territory2" nillable="true" minOccurs="0" type="ens:Territory2"/>
                        <element name="Territory2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="smagicinteract__SMS_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityCompetitor">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompetitorName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Strengths" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Weaknesses" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityFieldHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Amount" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CloseDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExpectedRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ForecastCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Probability" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="StageName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityLineItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PricebookEntry" nillable="true" minOccurs="0" type="ens:PricebookEntry"/>
                        <element name="PricebookEntryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProductCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Quantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ServiceDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TotalPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UnitPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityPartner">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountTo" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReversePartnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityStage">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefaultProbability" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastCategoryName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWon" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Order">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ActivatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BillingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="BillingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CompanyAuthorizedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CompanyAuthorizedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contract" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ContractId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomerAuthorizedBy" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="CustomerAuthorizedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EffectiveDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReductionOrder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OrderItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OrderNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Orders" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OriginalOrder" nillable="true" minOccurs="0" type="ens:Order"/>
                        <element name="OriginalOrderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ShippingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="ShippingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TotalAmount" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrderFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Order"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrderHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Order" nillable="true" minOccurs="0" type="ens:Order"/>
                        <element name="OrderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrderItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AvailableQuantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ChildOrderItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Order" nillable="true" minOccurs="0" type="ens:Order"/>
                        <element name="OrderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="OrderItemNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OriginalOrderItem" nillable="true" minOccurs="0" type="ens:OrderItem"/>
                        <element name="OriginalOrderItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PricebookEntry" nillable="true" minOccurs="0" type="ens:PricebookEntry"/>
                        <element name="PricebookEntryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Quantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ServiceDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TotalPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UnitPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrderItemFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:OrderItem"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrderItemHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OrderItem" nillable="true" minOccurs="0" type="ens:OrderItem"/>
                        <element name="OrderItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrderShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Order" nillable="true" minOccurs="0" type="ens:Order"/>
                        <element name="OrderAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OrderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrgLifecycleNotification">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LifecycleRequestId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LifecycleRequestType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OrgId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReplayId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrgWideEmailAddress">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Address" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DisplayName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAllowAllProfiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Organization">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Address" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ComplianceBccEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DefaultAccountAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultCalendarAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultCampaignAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultCaseAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultContactAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultLeadAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultLocaleSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultOpportunityAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultPricebookAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Division" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FiscalYearStartMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="GeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InstanceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsReadOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSandbox" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LanguageLocaleKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="MonthlyPageViewsEntitlement" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MonthlyPageViewsUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumKnowledgeService" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="OrganizationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PreferencesRequireOpportunityProducts" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PrimaryContact" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReceivesAdminInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ReceivesInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SignupCountryIsoCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TrialExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UiSkin" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UsesStartDateAsFiscalYearName" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="WebToCaseDefaultOrigin" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OwnedContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSourceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OwnerChangeOptionInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DefaultValue" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsEditable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PackageLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AllowedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsProvisioned" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UsedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Partner">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountFrom" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountFromId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AccountTo" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReversePartnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PartnerRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReverseRole" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Period">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="FiscalYearSettings" nillable="true" minOccurs="0" type="ens:FiscalYearSettings"/>
                        <element name="FiscalYearSettingsId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FullyQualifiedLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsForecastPeriod" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Number" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="PeriodLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QuarterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSet">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Assignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldPerms" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasActivationRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCustom" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsOwnedByProfile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="License" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="LicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ObjectPerms" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateOrder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowEmailIC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiUserOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateDashboardFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreatePackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateReportFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkBadgeDefinition" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDataExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDebugApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedPortalUserAdmin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditActivatedOrders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditMyDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditMyReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInboundMigrationToolsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInstallPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCssUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDashbdsInPubFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePartners" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageReportsInPubFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTerritories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsOutboundMigrationToolsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPortalSuperUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPublishPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleJob" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeReportToOtherUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeReportsRunAsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewGlobalHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewPublicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewPublicReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SessionActivations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSetAssignment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Assignee" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AssigneeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PermissionSet" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="PermissionSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSetLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExpirationDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="GrantedByLicenses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MaximumPermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsActivateOrder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAllowEmailIC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsApiUserOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateCustomizeDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateCustomizeReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateDashboardFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreatePackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateReportFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateWorkBadgeDefinition" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDataExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDebugApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDelegatedPortalUserAdmin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditActivatedOrders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditMyDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditMyReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsInboundMigrationToolsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsInstallPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCssUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDashbdsInPubFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManagePartners" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageReportsInPubFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageTerritories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateNetworkFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateNetworkFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateNetworkMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsOutboundMigrationToolsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPortalSuperUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPublishPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsScheduleJob" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSubscribeReportToOtherUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSubscribeReportsRunAsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewGlobalHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewPublicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewPublicReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionSetLicenseAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionSetLicenseKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TotalLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UsedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSetLicenseAssign">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Assignee" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AssigneeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionSetLicense" nillable="true" minOccurs="0" type="ens:PermissionSetLicense"/>
                        <element name="PermissionSetLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PicklistValueInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityParticle" nillable="true" minOccurs="0" type="ens:EntityParticle"/>
                        <element name="EntityParticleId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefaultValue" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValidFor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PlatformAction">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActionListContext" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActionTarget" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActionTargetType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Category" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConfirmationMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeviceFormat" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IconContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconHeight" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconWidth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="InvocationStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InvokedByUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InvokedByUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsGroupDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMassAction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PrimaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelatedListRecordId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelatedSourceEntity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Section" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceEntity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PlatformCachePartition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDefaultPartition" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PlatforCachePartitionTypes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PlatformCachePartitionType">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AllocatedCapacity" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="AllocatedPurchasedCapacity" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="AllocatedTrialCapacity" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CacheType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PlatformCachePartition" nillable="true" minOccurs="0" type="ens:PlatformCachePartition"/>
                        <element name="PlatformCachePartitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Pricebook2">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contracts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsStandard" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Orders" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PricebookEntries" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Pricebook2History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PricebookEntry">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpportunityLineItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OrderItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProductCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UnitPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UseStandardPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LockType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TableEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstance">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActor" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Nodes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessDefinition" nillable="true" minOccurs="0" type="ens:ProcessDefinition"/>
                        <element name="ProcessDefinitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Steps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StepsAndWorkitems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SubmittedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SubmittedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetObject" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="TargetObjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Workitems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Actor" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Comments" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPending" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OriginalActor" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OriginalActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessNode" nillable="true" minOccurs="0" type="ens:ProcessNode"/>
                        <element name="ProcessNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RemindersSent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StepStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetObject" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="TargetObjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceNode">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActor" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NodeStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessNode" nillable="true" minOccurs="0" type="ens:ProcessNode"/>
                        <element name="ProcessNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessNodeName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceStep">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Actor" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Comments" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OriginalActor" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OriginalActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="StepNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="StepStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceWorkitem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Actor" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OriginalActor" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OriginalActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessNode">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessDefinition" nillable="true" minOccurs="0" type="ens:ProcessDefinition"/>
                        <element name="ProcessDefinitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Product2">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Assets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DisplayUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ExternalDataSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Family" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PricebookEntries" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProductCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QuantityUnitOfMeasure" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Product2Feed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Product2History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Profile">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateOrder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowEmailIC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiUserOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateDashboardFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateMultiforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateReportFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkBadgeDefinition" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDataExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDebugApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedPortalUserAdmin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditActivatedOrders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditMyDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditMyReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInboundMigrationToolsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInstallMultiforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCssUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDashbdsInPubFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePartners" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageReportsInPubFolders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTerritories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsOutboundMigrationToolsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPortalSuperUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPublishMultiforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleJob" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeReportToOtherUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeReportsRunAsUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewGlobalHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewPublicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewPublicReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserLicense" nillable="true" minOccurs="0" type="ens:UserLicense"/>
                        <element name="UserLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkill">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProfileSkillUserChildren" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillEndorsement">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProfileSkillUser" nillable="true" minOccurs="0" type="ens:ProfileSkillUser"/>
                        <element name="ProfileSkillUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillEndorsementFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ProfileSkillEndorsement"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillEndorsementHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="ProfileSkillEndorsement" nillable="true" minOccurs="0" type="ens:ProfileSkillEndorsement"/>
                        <element name="ProfileSkillEndorsementId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ProfileSkill"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="ProfileSkill" nillable="true" minOccurs="0" type="ens:ProfileSkill"/>
                        <element name="ProfileSkillId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ProfileSkill"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillUser">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EndorsementCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProfileSkill" nillable="true" minOccurs="0" type="ens:ProfileSkill"/>
                        <element name="ProfileSkillId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProfileSkillUserEndorsements" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillUserFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ProfileSkillUser"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProfileSkillUserHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="ProfileSkillUser" nillable="true" minOccurs="0" type="ens:ProfileSkillUser"/>
                        <element name="ProfileSkillUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Publisher">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InstalledEntityDefinitions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InstalledFieldDefinitions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MajorVersion" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MinorVersion" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PushTopic">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NotifyForFields" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NotifyForOperationCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperationDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperationUndelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperationUpdate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperations" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Query" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="QueueSobject">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Queue" nillable="true" minOccurs="0" type="ens:Group"/>
                        <element name="QueueId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RecentlyViewed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Alias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NameOrAlias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRole" nillable="true" minOccurs="0" type="ens:UserRole"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RecordType">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BusinessProcessId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RelationshipDomain">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildSobject" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="ChildSobjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Field" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsCascadeDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRestrictedDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="JunctionIdListNames" nillable="true" minOccurs="0" type="tns:JunctionIdListNames"/>
                        <element name="ParentSobject" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="ParentSobjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationshipInfo" nillable="true" minOccurs="0" type="ens:RelationshipInfo"/>
                        <element name="RelationshipInfoId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationshipName" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RelationshipInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildSobject" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="ChildSobjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Field" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsCascadeDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRestrictedDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="JunctionIdListNames" nillable="true" minOccurs="0" type="tns:JunctionIdListNames"/>
                        <element name="RelationshipDomains" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Report">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FolderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Format" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastRunDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ReportFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Report"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ReputationLevel">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LevelNumber" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Threshold" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ReputationPointsRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Points" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RuleTerritory2Association">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsInherited" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Rule" nillable="true" minOccurs="0" type="ens:ObjectTerritory2AssignmentRule"/>
                        <element name="RuleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2" nillable="true" minOccurs="0" type="ens:Territory2"/>
                        <element name="Territory2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SamlSsoConfig">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttributeFormat" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttributeName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Audience" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ErrorUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ExecutionUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IdentityLocation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IdentityMapping" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Issuer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsSpInitBinding" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsUserProvisioning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="RequestSignatureMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SamlJitHandler" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="SamlJitHandlerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ValidationCert" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Version" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Scontrol">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Binary" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EncodingKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Filename" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HtmlWrapper" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SupportsCaching" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SearchActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AvgNumResults" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ClickRank" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ClickedRecordName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CountQueries" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CountUsers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="KbChannel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Period" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QueryDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="QueryLanguage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SearchTerm" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SearchLayout">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ButtonsDisplayed" nillable="true" minOccurs="0" type="tns:SearchLayoutButtonsDisplayed"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldsDisplayed" nillable="true" minOccurs="0" type="tns:SearchLayoutFieldsDisplayed"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LayoutType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecureAgentsCluster">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecurityCustomBaseline">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Baseline" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SessionPermSetActivation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthSession" nillable="true" minOccurs="0" type="ens:AuthSession"/>
                        <element name="AuthSessionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionSet" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="PermissionSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SetupAuditTrail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Action" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DelegateUser" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Display" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ResponsibleNamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Section" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SetupEntityAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SetupEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SetupEntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SignupRequest">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AuthCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Company" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConnectedAppCallbackUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConnectedAppConsumerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedOrgId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedOrgInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Edition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ErrorCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSignupEmailSuppressed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PreferredLanguage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ResolvedTemplateId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SignupEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SignupSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subdomain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TemplateDescription" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TemplateId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TrialDays" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="TrialSourceOrgId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SignupRequestFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:SignupRequest"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SignupRequestHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="SignupRequest" nillable="true" minOccurs="0" type="ens:SignupRequest"/>
                        <element name="SignupRequestId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SignupRequestShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:SignupRequest"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Site">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Admin" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AdminId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AnalyticsTrackingCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ClickjackProtectionLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DailyBandwidthLimit" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DailyBandwidthUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DailyRequestTimeLimit" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DailyRequestTimeUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GuestUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="GuestUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MonthlyPageViewsEntitlement" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsAllowGuestSupportApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowHomePage" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardAnswersPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardIdeasPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardLookups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardPortalPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardSearch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsEnableFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsRequireHttps" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SiteDomainPaths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SiteType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subdomain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UrlPathPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SiteFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Site"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SiteHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Site" nillable="true" minOccurs="0" type="ens:Site"/>
                        <element name="SiteId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SocialPersona">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AreWeFollowing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Bio" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalPictureURL" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Followers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Following" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsBlacklisted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFollowingUs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Klout" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListedCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MediaProvider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MediaType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumberOfFriends" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfTweets" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Posts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProfileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProfileUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Provider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="R6SourceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RealName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceApp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SocialPersonaHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="SocialPersona" nillable="true" minOccurs="0" type="ens:SocialPersona"/>
                        <element name="SocialPersonaId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SocialPost">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AnalyzerScore" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AssignedTo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachmentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachmentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Classification" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Content" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeletedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="DeletedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EngagementLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalPostId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Handle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HarvestDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Headline" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InboundLinkCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsOutbound" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="KeywordGroupName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikedBy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LikesAndVotes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MediaProvider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MediaType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MessageType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OutboundSocialAccount" nillable="true" minOccurs="0" type="ens:ExternalSocialAccount"/>
                        <element name="OutboundSocialAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Persona" nillable="true" minOccurs="0" type="ens:SocialPersona"/>
                        <element name="PersonaId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Personas" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PostPriority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostTags" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Posted" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Provider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="R6PostId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="R6SourceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="R6TopicId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Recipient" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecipientType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Replies" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ReplyTo" nillable="true" minOccurs="0" type="ens:SocialPost"/>
                        <element name="ReplyToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ResponseContextExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReviewScale" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ReviewScore" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ReviewedStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Sentiment" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SourceTags" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SpamRating" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatusMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ThreadSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="TopicProfileName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TruncatedContent" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UniqueCommentors" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="ViewCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SocialPostFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:SocialPost"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SocialPostHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="SocialPost" nillable="true" minOccurs="0" type="ens:SocialPost"/>
                        <element name="SocialPostId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SocialPostShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:SocialPost"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Solution">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseSolutions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublishedInPublicKb" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReviewed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SolutionName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SolutionNote" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SolutionNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TimesUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Votes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SolutionFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Solution"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SolutionHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Solution" nillable="true" minOccurs="0" type="ens:Solution"/>
                        <element name="SolutionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SolutionStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReviewed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Stamp">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StampAssignment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Stamp" nillable="true" minOccurs="0" type="ens:Stamp"/>
                        <element name="StampId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SubjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StaticResource">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CacheControl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StreamingChannel">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDynamic" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StreamingChannelShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:StreamingChannel"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Academic_Period__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Academic_Period__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Academic_Period__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Academic_Period_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Academic_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Child_Academic_Periods__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__External_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Fiscal_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Parent_Academic_Period__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Parent_Academic_Period__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Academic_Period__c"/>
                        <element name="TargetX_Base__Period_Deadlines__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Session__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Access_Key_Setting__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Access_Key_Request_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Allow_Email__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Contact_Information__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Require_Access_Key__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Action_Item__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Action_Item__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Action_Item__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Action_Plan__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Action_Plan__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Action_Plan__c"/>
                        <element name="TargetX_Base__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__Details__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Due_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__External_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Point_Of_Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Point_Of_Contact__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="TargetX_Base__Priority__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Sys_Generated__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Visible__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Action_Plan_Item__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Details__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Due_Date_Offset__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Fixed_Due_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__Label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Priority__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Rule_Action__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Rule_Action__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Rule_Action__c"/>
                        <element name="TargetX_Base__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Visible__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Action_Plan__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Action_Plan__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Action_Plan__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Action_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__External_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Activities_And_Interests__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Activities_And_Interests__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Activities_And_Interests__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Activities_And_Interests__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Activities_And_Interests__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Class_Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Comment__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Continued_Interest__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Day_Visit__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__Division__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__External_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Handedness__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Height_Feet__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Height_Inches__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Hours_per_Week__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Overnight_Visit__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__Player_Rating__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Position__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Reason_For_Archive__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Sanctioned__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__Student__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Student__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__Subcategory__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Subtype__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Weeks_per_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Weight_lbs__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Assignment_Group_Member__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Assignment_Group__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Assignment_Group__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Assignment_Group__c"/>
                        <element name="TargetX_Base__Records_Owned__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Assignment_Group__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Assignment_Group_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Expression__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Expression__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Expression__c"/>
                        <element name="TargetX_Base__OrderNr__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Target_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__CRM_Setting__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Action_Plan_Automation__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Currency_Symbol__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Days_to_keep_logs__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Debugging_Threshhold__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Default_Account_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Google_Maps_API_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Process_Access_Keys_future__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Save_Contact_Merge_Ids__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Save_Lead_Merge_Ids__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Community_Theme__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Community_Theme__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Community_Theme__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Custom_CSS__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Default__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Header_Logo_Static_Resource_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Header_Text_Line_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Header_Text_Line_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Hero_Image_Static_Resource_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Hero_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Homepage__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Static_Resource__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Template_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Theme_URLs__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Events_Settings__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Configuration__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Community_Prefix__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Config_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__JSON_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__JSON_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__JSON_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Package_Version__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Published__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Revision__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__TX_ID__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Contact_Relationship__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__First_Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__First_Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__First_Relationship_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Second_Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Second_Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__Second_Relationship_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Content_Location__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__DefaultAction__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__DefaultAction__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Rule_Action__c"/>
                        <element name="TargetX_Base__LocationTag__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Locations__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__Filter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Contextual_Scope__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Base_Package__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Recruitment_Manager__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Expression__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__AdvancedExpression__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Assignment_Groups__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Expressions__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Function__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__OrderNr__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__ParameterExpression__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__ParameterExpression__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Expression__c"/>
                        <element name="TargetX_Base__ParameterExpressions__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__ParameterField__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__ParameterValueBoolean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__ParameterValueDateTime__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__ParameterValueDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__ParameterValueNumber__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__ParameterValueText__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__ParentExpression__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__ParentExpression__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Expression__c"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__GroupAssignmentMemberSettings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Group_Assignment_Setting__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Contact_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Formula_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Owner_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Use_Future__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Location__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Building__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Campus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Geolocation__Latitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Geolocation__Longitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Base__Geolocation__c" nillable="true" minOccurs="0" type="tns:location"/>
                        <element name="TargetX_Base__Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Room__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Filter_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Organization_Events__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Recommended_Events1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Recommended_Events__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Period_Deadline__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Academic_Period__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Academic_Period__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Academic_Period__c"/>
                        <element name="TargetX_SRMb__End_Date_Application__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__End_Date_New_Application__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Start_Date_Application__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Profile_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Events_Access__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__SSC_Access__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Events_Bottom_Nav__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Relationship__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Relationship__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Relationship__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Relationship__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Relationship__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__AccountA__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__AccountA__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_Base__AccountB__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__AccountB__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_Base__Account_Role_A__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Account_Role_B__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__ContactA__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__ContactA__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__ContactB__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__ContactB__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Base__Contact_Role_A__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Contact_Role_B__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__External_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Job_Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Base__Subcategory__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Subtype__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__HEDARelationships__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_HEDA__HEDA_Relationship_Id__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_HEDA__HEDA_Relationship_Id__r" nillable="true" minOccurs="0" type="ens:hed__Relationship__c"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Remote_Connections__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Client_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Client_Secret__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Login_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Rule_Action__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Action_Plan_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Available_For_Use__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Available_for_Action_Plans__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__HTML_content__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Rule_Actions__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Rules__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Text_Content__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Available_For_Email__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__Filter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Rule__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Base__Content_Location__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Content_Location__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Content_Location__c"/>
                        <element name="TargetX_Base__RuleCriteria__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Rule_Action__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Rule_Action__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Rule_Action__c"/>
                        <element name="TargetX_Base__Sort__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Source_to_Master_Object__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Base__Source_to_Master_Object__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Source_to_Master_Object__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Order_By__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Source_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Tracked_Field__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__TargetX_Log__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Details__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Error_Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Product__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Running_User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Running_User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="TargetX_Base__Severity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Theme_URL__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Base_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Community_Theme__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Community_Theme__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Community_Theme__c"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Base__Tracked_Field__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Related_Object__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Base__Related_Object__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Source_to_Master_Object__c"/>
                        <element name="TargetX_Base__Source_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Target_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__EmailServiceSettings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__Email_Service_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__Email_settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__server__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__contactLocationContent__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Email__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Email__Id1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Id2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Id3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Id4__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__locContentId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__relnId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__serialNo__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expEmailSeedlist__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Email__expEmailSeedlist__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expEmailSeedlist__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__first_name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__last_name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__list1__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__list2__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__seed__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expEmail_BroadcastMembers__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Family_Relationship__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Family_Relationship__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Family_Relationship__c"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__Campaign__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Email__Campaign__r" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="TargetX_Email__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Email__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Email__Delete_flag__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Lead__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Email__Lead__r" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="TargetX_Email__activity_count__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__expEmail_Broadcast__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Email__expEmail_Broadcast__r" nillable="true" minOccurs="0" type="ens:TargetX_Email__expEmail_Broadcast__c"/>
                        <element name="TargetX_Email__track_url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expEmail_Broadcast__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Email__expEmail_Broadcast__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expEmail_Broadcast__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__BatchJobId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Bounced__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Campaign__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Email__Campaign__r" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="TargetX_Email__CompleteDate__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__F2F_To__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__FollowupBroadcast__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Interacted__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Opt_Out__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Profile_Updates__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Profile_Views__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Received__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__Sent__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__StartDate__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__Viewed_HTML__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XBounced__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XF2F_By__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XF2F_To__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XInteracted__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XOpted_Out__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XReceived__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XSent__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__XViewed_HTML__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__expEmail_BroadcastMembers__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__f2f__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expSuitepreferences__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Email__expSuitepreferences__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Email__expSuitepreferences__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Email__Enable_Merged_Content_Blocks__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_Auto_Future_Broadcast_Deletion__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_ContactAddr1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_ContactAddr2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_ContactName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_DaysToKeepBroadcastMembers__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Email__expEmail_ExpireDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Email__expEmail_F2FDefault__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_NameBasedURLs__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_Postal__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_ProfileUpdateDefault__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_TrackableURLDefault__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_aggregateBroadcastTrigger__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_campaign_only_once_def__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_deDupeFlag__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_fname_def__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_from_email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_from_vanity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_includeContact__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_includeSenderHeader__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_letterhead__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_lname_def__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_name_def__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_newsgroups__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_reply_email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_reply_vanity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_runBroadcastAsCreateUser__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_saveMergeIds__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Email__expEmail_seed_list__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_sub_url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_template_contact__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__expEmail_unsub_url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__ASch_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Staff_Cancellation_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Staff_Confirmation_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Account_Consortium__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_Eventsb__Consortium__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Consortium__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__Consortium__c"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Appointment_Time_Range__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Appointment_Data__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Availability_End_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Availability_Start_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Calendar_Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Effective_From_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Eventsb__Effective_To_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Eventsb__Exception__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Friday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Monday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Saturday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Sunday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Thursday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Time_Block_Size__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Time_Zone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Tuesday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="TargetX_Eventsb__Wednesday__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Consortium__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__Consortium__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Consortium__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Account_Consortiums__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Organization_Events__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__ContactScheduleItem__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__ContactScheduleItem__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__ContactScheduleItem__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Attended__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Canceled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Confirmed__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Confirmed_or_Pending__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Eventsb__Discount_Codes_Redeemed__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Reminder_1_Formula__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Fee_Paid__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Guest_Of__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Guest_Of__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__ContactScheduleItem__c"/>
                        <element name="TargetX_Eventsb__Guest_of__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__InProcess__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Invited__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Invoiced__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Is_Guest__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Number_of_Attendees__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_of_Guests__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__OrgEvent__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__OrgEvent__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__OrgEvent__c"/>
                        <element name="TargetX_Eventsb__Payment_Expired__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Payment_Pending__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Pending_Timestamp__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Primary_Event_Responsibility__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Scheduled_By__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Scheduled_By__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Eventsb__Total_Event_Cost__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Waiting_List__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__custom_field_10__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_4__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_5__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_6__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_7__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_8__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_9__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__event_end_date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Discount__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Apply_to_Cart__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Discount_Amount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Discount_Close__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Discount_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Discount_Open__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Discount_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__OrgEvent__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__OrgEvent__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__OrgEvent__c"/>
                        <element name="TargetX_Eventsb__Per_Person__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Event_Supplement__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__ATR__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__ATR__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__Appointment_Time_Range__c"/>
                        <element name="TargetX_Eventsb__Appointment_Cancel_Note__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Cancel_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Staffer_Email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Staffer_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Staffer_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Student_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Student_Note__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Date_Time__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Event__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__OrgEvent__c"/>
                        <element name="TargetX_Eventsb__Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Events_Custom_Code__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__Events_Custom_Code__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Events_Custom_Code__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__CSS__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__javaScript__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Events_Time_Zone__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Holiday__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Holiday_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__OrgEvent__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__OrgEvent__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__OrgEvent__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Allow_Invoicing__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Allow_Overlap__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Allowed_Guests__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Appointment_Cancellation_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Block_Sub_Event_Conflicts__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Cancel_Deadline__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Eventsb__Cancellation_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Cancelled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Child_Events__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Consortium__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Consortium__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__Consortium__c"/>
                        <element name="TargetX_Eventsb__Contact_Schedule__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Copy_Edits_to_SF_Calendar__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Copy_to_SF_Calendar__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_10_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_10_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_1_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_1_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_2_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_2_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_3_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_3_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_4_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_4_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_5_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_5_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_6_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_6_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_7_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_7_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_8_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_8_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Custom_Field_9_Long_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Custom_Field_9_Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Discounts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Duration_in_Minutes__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Email_Confirmation__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Email_Sender__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Email_Wait_List_Promotion__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__End_Date_Time__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__End_Time_TZ_Adjusted__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Cancelled_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Classification__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Cost__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Event_Item_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Keywords__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Series_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Supplement__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Featured_Event__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__FormId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Ignore_Recommended_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Include_School_And_Consortium__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Invite_Only__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Invitee_Campaign__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Invitee_Campaign__r" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="TargetX_Eventsb__Invoice_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Is_Recurrence__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Location_Lookup__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Location_Lookup__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Location__c"/>
                        <element name="TargetX_Eventsb__Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Map_URL_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Map_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Migrated_Event_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__More_Information_URL_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__More_Information_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__More_Information__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Notes__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Number_Attended__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_Cancelled__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_Confirmed__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_of_Juniors__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_of_Prospects__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_of_Seniors__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Off_Waitlist_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Parent_Event__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Parent_Event__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__OrgEvent__c"/>
                        <element name="TargetX_Eventsb__Payment_Expired_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Publish__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Recommend_to_Return__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Recurrence_Day_of_Month__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Recurrence_Day_of_Week_Mask__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Recurrence_End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Eventsb__Recurrence_Instance__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Recurrence_Interval__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Recurrence_Month_of_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Recurrence_Start_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Recurrence_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Redirect_Link__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Reg_Incl_Guests__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Registered_Attendees__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Registration_Deadline_Days__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Registration_Deadline__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Eventsb__Registration_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Registration_Open_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_Eventsb__Reminder_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Rescheduled_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Resources__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__SF_Calendar_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__School__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__School__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_Eventsb__Seats_Available_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Slots_Available__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Staff_Cancellation_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Staff_Confirmation_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Staff_Reminder_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Start_Date_Time__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Start_Time_TZ_Adjusted__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Time_Zone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Travel_Notes__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Waiting_List__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Waitlist_Email_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Waitlist__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__chat_room_id__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__custom_field_10_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_1_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_2_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_3_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_4_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_5_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_6_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_7_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_8_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__custom_field_9_label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__max_attendees__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__scan_after__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__scan_before__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__unlimited_attendees__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__PrefillMapping__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__PrefillMapping__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__PrefillMapping__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__fieldAPIname__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__fieldFAindex__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__formid__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Recommended_Events__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Match_Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Match_Location__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Match_Location__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Location__c"/>
                        <element name="TargetX_Eventsb__Match_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Priority__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Results_Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Results_Location__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Results_Location__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Location__c"/>
                        <element name="TargetX_Eventsb__Results_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__Resource__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Brief_Details__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Cost__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Details__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Event__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Eventsb__Event__r" nillable="true" minOccurs="0" type="ens:TargetX_Eventsb__OrgEvent__c"/>
                        <element name="TargetX_Eventsb__Name_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__ep_settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Block_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Cancel_Deadline_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Client_Nickname__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Cost_col__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Custom_Payment_Parameters__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__DefaultFormId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Default_Deadline_Days__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Default_Email_Sender_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Email_Each_Event__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Email_Reminder_Days__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Event_Overlap__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Events_Plus_Results_Height__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Force_Registrant_Attendance__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Google_Maps_API_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Group_Buffer__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Guest_Account_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Guest_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Header_Logo_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Maximum_Returned_Events__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Merge_Flag__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Named_Guests__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Next_School_Visit_Trigger_Enabled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Num_Featured_Events__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Num_Reg_Allowed__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Number_of_Guests__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Org_Time_Zone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Other_Defaults__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Payment_Expiration__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Restrict_Event_Ownership__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Scan_After_Event_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Scan_Before_Event_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__School_Filter_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Search_Days__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Eventsb__Show_Details__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__SingleEventRegistrationURL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Use_Location_Lookup__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Welcome_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__default_redirect_url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__templateName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Eventsb__esr_css__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Dialog_Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Page_Height__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Page_Width__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__background_color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__font_size__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__font_type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__foreground_color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__header_enabled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__header_url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__templateName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_HEDA__TargetX_HEDA_Mapping__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_HEDA__Source_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__Source_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__Target_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_HEDA__TgtxToHEDAMirroring__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_HEDA__AfftoEHFilter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__AfftoEH__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_HEDA__EHtoAffFilter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__EHtoAff__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_HEDA__HEDAToTgtX__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_HEDA__RelationshipHEDAtoTgtXFilter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__RelationshipHEDAtoTgtX__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_HEDA__RelationshipTgtXtoHEDAFilter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_HEDA__RelationshipTgtXtoHEDA__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_HEDA__TgtxToHEDA__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__AppTrackerPreferences__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Checklist_future_Minimum_Batch_Size__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Create_Dynamic_Transcript_Requirements__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Dynamic_Transcript_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Enable_Application_Requirement_Manager__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Process_Checklist_Future__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Relevant_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Show_Enrollment_History__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Show_Essays__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Show_Recommendations__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Show_Tests__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Application__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Application__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Common_Application_Received__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Academic_Other__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Accept_Enrollment_Deposit__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Anticipated_Enrollment_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__App_Submit_Letter_Sent_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__ApplicationFYDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Application_Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application_Decision__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application_Fee_Amount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Application_Fee_Payment_Received__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Application_Fee_Payment_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application_Fee_Received_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Application_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application_Submit_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Application_Submitted_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Attending_Instead__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Authorized_for_Third_Party_Release__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__CC_Approval_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__CC_Transaction_Approval__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Campus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Checklist_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__College__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Concentration__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Convicted__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Decision_Display_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Decision_Letter_Details__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Decision_Publish_Date_Time__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Decision_Viewed_Date_Time__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Decision__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Decline_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Degree__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Deposit_Amount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Deposit_Authorization_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Deposit_Intent_to_Enroll__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Deposit_Paid_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Deposit_Signature__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Disciplinary_Action__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Disciplinary_Conviction_Detail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Disciplinary_Detail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Electronic_Signature__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Enrollment_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Essays__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Extra_Curricular_Activities__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__FERPA_Waived__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Family_Relationships__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Fee_Decision_By__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Fee_Decision_By__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="TargetX_SRMb__Fee_Waiver_Decision_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Fee_Waiver_Decision_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Fee_Waiver_Decision__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Fee_Waiver_Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Fee_Waiver_Request__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Financial_Aid_Candidate__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Financial_Aid_File_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Hidden_from_App_Dashboard__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Housing__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__NewRequirement__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Portal_Application_Label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Possible_Academic_Major__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Program__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Recommendation__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Show_Reply_to_Offer__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Stage__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Start_Term_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Start_Term__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Start_Term_and_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Student_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Tests__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__True_and_Correct__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__openCheckListItem__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Checklist_Item__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Application_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__Assigned__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Checkbox_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Dynamic__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__IsClosed__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Long_Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__REQ_CODE__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Related_To__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Requirement_Met_By__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__System_Generated__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__visibility__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Enrollment_History__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Enrollment_History__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Enrollment_History__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_HEDA__Affiliations__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_HEDA__HEDA_Affiliation_Id__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_HEDA__HEDA_Affiliation_Id__r" nillable="true" minOccurs="0" type="ens:hed__Affiliation__c"/>
                        <element name="TargetX_SRMb__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__Ceeb_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Complete__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Currently_Enrolled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Degree_Candidate__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Degree_Earned__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Early_Grad__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Enrollment_History_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__GED_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__GPA_Official_Scale__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__GPA_Scale__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Graduate__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__IsRequired__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Official_Class_Rank__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Official_Class_Size__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Official_Final_Transcripts_Received__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Official_GPA_Scale__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Official_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Official_Graduation_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Official_Recalculated_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Official_Transcripts_Received__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Recalculated_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Reference_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__RequirementID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__School_Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Self_Reported_Class_Rank__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Self_Reported_Class_Size__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Self_Reported_GPA_Scale__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Self_Reported_GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Self_Reported_Grad_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__eh_ceeb_code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__exportSequence__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Essay__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Essay__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Essay__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__Complete__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Essay_Body__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Essay_File_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Essay_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__IsRequired__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Personal_Essay_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__RequirementID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Extra_Curricular_Activity__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Activity_Category__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Continued_Interest__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Extra_Curricular_Activity_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Grade_Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Hours_Per_Week__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__NCAA_Clearance__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Organization__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Position__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Preferred_Interest_Level__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Weeks_Per_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__exportSequence__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Family_Relationship__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Email_Broadcast_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Address__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__College_Degree__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__College_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__College__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__College__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Deceased__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Employer__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Family_Relationship_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__First_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Former_Last_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Gender__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Grad_School_Degree__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Grad_School_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Grad_School__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Grad_School__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_SRMb__HasEmailBounced__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__HasOptedOutOfEmail__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Legacy__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Legal_Guardian_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Living__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Middle_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Occupation__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Parent_1_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Parent_2_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Phone_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Position_Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Relationship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Suffix__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__exportSequence__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Financial_Aid__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Financial_Aid__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Financial_Aid__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Accept_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Amount_Per_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Amount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Award_Criteria__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Award_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Award_Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Financial_Aid_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Sub_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="zBU_application_financial_aid_source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_nonwinner_letter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_scholarship_application_date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="zBU_scholarship_program__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_scholarship_rating_number__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="zBU_scholarship_rating_type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_scholarship_rating_voter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_scholarship_status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Inquiry__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Inquiry__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Inquiry__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Inquiry__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Inquiry__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Campus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Concentration__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Degree__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__External_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Major__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Program__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Student_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Term__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="zBU_applying_for_aid__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_email_owner__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_interest__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_sponsored_by__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="zBU_sport__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Misc_Requirement__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Public_Comment__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Public_Long_Comment__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Requirement_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Requirement_Met_By__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Requirement_Rule__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Requirement_Rule__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Requirement_Rules__c"/>
                        <element name="TargetX_SRMb__type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Recommendation__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Academic_Achievement__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__Comments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Complete__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Concern_For_Others__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Creative_Original_Thought__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Disciplined_Work_Habits__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__File_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__First_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Initiative_Independence__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Integrity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Intellectual_Promise__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__IsRequired__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Leadership__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Maturity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Middle_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Motivation__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Overall__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Productive_Class_Discussion__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Quality_of_Writing__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Reaction_to_Setbacks__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Recommendation_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Relationship__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__RequirementID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Respect_Accorded_by_Faculty__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Salutation__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Self_Confidence__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Staff__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Staff__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Staff__c"/>
                        <element name="TargetX_SRMb__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Suffix__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__exportSequence__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Requirement_Rules__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Requirement_Rules__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Requirement_Rules__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__App_Public__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Application_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Essay_Public__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Misc_Requirements__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__Recommendation_Public__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Test_Public__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Transcript_Public__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__SRM_Preferences__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Automatic_School_Matching__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Automatic_School_Matching_eh__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__CEEB_Assign_All_Records__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Checklist_Functionality__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Code_Scope__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Contact_rollup_from_Application__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Contact_rollup_from_Enrollment_History__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Contact_rollup_from_Inquiry__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Contact_rollup_from_Test__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Default_Account_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Duplicate_Checking__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Enrollment_Deposit__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Excluded_Student_Statuses__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Export_Sequence__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Formation_Site__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Lead_Source_Preservation__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Prevent_Student_Stage_Rollback__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Relevant_Record_Types1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Relevant_Record_Types2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Set_Applicant_Status__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Source_Field_Management__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Staff__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Staff__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Staff__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="TargetX_SRMb__Counselor_Fax__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Email__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__First_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Full_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Last_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Middle_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Recommendation__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Salutation__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Staff_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Staff_Name_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Suffix__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Title__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Test__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Test__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__Test__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__ACT_Composite_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__ACT_English_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__ACT_English_Writing_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__ACT_Math_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__ACT_Reading_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__ACT_Science_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Admin_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Application__c"/>
                        <element name="TargetX_SRMb__Complete__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Composite_Score__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_SRMb__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_SRMb__Exam_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Exam_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Analytical_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Analytical_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Integrated_Reasoning_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Integrated_Reasoning_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Quantitative_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Quantitative_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Total_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Total_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Verbal_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GMAT_Verbal_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_General_Analytical_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_General_Analytical_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_General_Quantitative_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_General_Quantitative_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_General_Verbal_Percentage__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_General_Verbal_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_Subject_Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__GRE_Subject_Subscore__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__GRE_Subject_Total_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Irregularity_Code_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Irregularity_Code_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__IsRequired__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__Last_Data_Input_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__MCAT_Biological_Science__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__MCAT_Physical_Science__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__MCAT_Verbal_Reasoning__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__MCAT_Writing__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Other_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Adv_Math__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Comm_Evidence__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_EBRW__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Eng_Convent__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Essay_Analysis__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Essay_Reading__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Essay_Writing__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Expr_Ideas__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Heart_Algebra__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Hist_SocSt_Cross__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Math_Section__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Math_Test__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_ProbSlv_Data__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Reading__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Sci_Cross__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Total__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Words_Context__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RSAT_I_Writ_Lang__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__RequirementID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SAT_II_Subject_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__SAT_II_Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__SAT_I_Math_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__SAT_I_Verbal_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__SAT_I_Writing_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__SRM_ETL_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Score_Validated__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_SRMb__TOEFL_Listening_Comprehension__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__TOEFL_Reading_Comprehension__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__TOEFL_Speaking_Comprehension__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__TOEFL_Total_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__TOEFL_Writing_Comprehension__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_SRMb__Test_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="TargetX_SRMb__Test_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Test__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__exportSequence__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="zBU_ap_exam_code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__applicationStgDtl__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__applicationStgDtl__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_SRMb__applicationStgDtl__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_SRMb__Stage__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__subStage__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Survey__Survey_Question_Response__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Survey__Response_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Survey_Question__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Survey__Survey_Question__r" nillable="true" minOccurs="0" type="ens:TargetX_Survey__Survey_Question__c"/>
                        <element name="TargetX_Survey__Survey_Response__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Survey__Survey_Response__r" nillable="true" minOccurs="0" type="ens:TargetX_Survey__Survey_Response__c"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Survey__Survey_Question__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Survey__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Survey__Order__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="TargetX_Survey__Picklist_Options__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Question_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Question_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Survey__Survey_Question_Responses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Survey__Survey__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Survey__Survey__r" nillable="true" minOccurs="0" type="ens:TargetX_Survey__Survey__c"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Survey__Survey_Response__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Survey__Survey_Response__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Survey__Survey_Response__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Survey__Student__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Survey__Student__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="TargetX_Survey__Survey_Question_Responses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Survey__Survey__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_Survey__Survey__r" nillable="true" minOccurs="0" type="ens:TargetX_Survey__Survey__c"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Survey__Survey__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TargetX_Survey__Survey__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TargetX_Survey__Survey__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Survey__Background_Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Background_Texture__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Body_Font_Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Body_Font_Family__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Button_Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Button_Font_Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Button_Font_Family__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Display_Progress_Bar__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Survey__Header_Font_Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Header_Font_Family__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Header_Image__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Include_Backwards_Navigation__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Survey__Include_Response_Review__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Survey__Progress_Bar_Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Questions__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Survey__Rating_Style__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Redirect_Link__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Survey__Survey_Responses__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Task">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRecurrence" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Prospect_Score__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RecurrenceActivityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecurrenceDayOfMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceDayOfWeekMask" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceEndDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceInterval" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceMonthOfYear" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceRegeneratedType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceStartDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceTimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurringTasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Eventsb__Cancelled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Copy_to_Org_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Org_Event_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__contactId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__oldWhatId_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__testType_CI__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TaskSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Task"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskPriority">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskRecurrenceException">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityDateOriginal" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeletion" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RecurrenceTaskId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TaskId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TenantUsageEntitlement">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AmountUsed" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CurrentAmountAllowed" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Frequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasRollover" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPersistentResource" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OverageGrace" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ResourceGroupKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Setting" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UsageDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Territory2">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CaseAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ObjectTerritory2Associations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentTerritory2" nillable="true" minOccurs="0" type="ens:Territory2"/>
                        <element name="ParentTerritory2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RuleTerritory2Associations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2Model" nillable="true" minOccurs="0" type="ens:Territory2Model"/>
                        <element name="Territory2ModelId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Territory2Type" nillable="true" minOccurs="0" type="ens:Territory2Type"/>
                        <element name="Territory2TypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserTerritory2Associations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Territory2Model">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeactivatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsCloneSource" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastOppTerrAssignEndDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastRunRulesEndDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ObjectTerritory2AssignmentRules" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2s" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Territory2ModelFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Territory2Model"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Territory2ModelHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Territory2Model" nillable="true" minOccurs="0" type="ens:Territory2Model"/>
                        <element name="Territory2ModelId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Territory2Type">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2s" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TestSuiteMembership">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ApexTestSuite" nillable="true" minOccurs="0" type="ens:ApexTestSuite"/>
                        <element name="ApexTestSuiteId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ThirdPartyAccountLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Handle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsNotSsoUsable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Provider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RemoteIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SsoProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="SsoProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SsoProviderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ThirdPartyAccountLinkKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TodayGoal">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TodayGoalShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TodayGoal"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Topic">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TalkingAbout" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TopicAssignment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Entity" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="EntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EntityKeyPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Topic" nillable="true" minOccurs="0" type="ens:Topic"/>
                        <element name="TopicId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TopicFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Topic"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UndecidedEventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="User">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AboutMe" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Address" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="Alias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BadgeText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Badges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallCenterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Campaign_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CommunityNickname" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CompanyName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractsSigned" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DefaultGroupNotificationFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DelegatedApproverId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DelegatedUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Department" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DigestFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Division" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailEncodingKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailPreferencesAutoBcc" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EmailPreferencesAutoBccStayInTouch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EmailPreferencesStayInTouchReminder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EmployeeNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityCreators" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Extension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataUserAuths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FederationIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="FullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GivenThanks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupMembershipRequests" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupMemberships" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InstalledMobileApps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsExtIndicatorVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPortalEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProfilePhotoActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LanguageLocaleKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastLoginDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastPasswordChangeDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LocaleSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ManagedUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Manager" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ManagerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MediumBannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MediumPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkMemberUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OfflinePdaTrialExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OfflineTrialExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OwnedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionSetAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionSetLicenseAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PortalRole" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReceivesAdminInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ReceivesInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SenderEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SenderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SessionPermSetActivations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Signature" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SmallBannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StayInTouchNote" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StayInTouchSignature" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StayInTouchSubject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_Base__Action_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Admin_Departments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Assignment_Group_Members__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__Main_Department__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Office_Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Base__Related_Contact__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Base__TargetX_Logs__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Email__domain__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Email__getSandboxProdDirName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Admin_Departments__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Cancellation_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Confirmation_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Reasons__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Reminder_Template__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Appointment_Times__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_Eventsb__Appointment_Types__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Can_Own_Events__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="TargetX_Eventsb__Main_Department__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_Eventsb__Office_Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetX_SRMb__Application__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserEntityAccessRights" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserFieldAccessRights" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserPermissionsAvantgoUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsCallCenterAutoLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsInteractionUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsMarketingUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsMobileUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsOfflineUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsSFContentUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsSupportUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferences" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserPreferencesActivityRemindersPopup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesApexPagesDeveloperMode" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesCacheDiagnostics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesCreateLEXAppsWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisCommentAfterLikeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisMentionsCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisProfPostCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableAllFeedsEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableBookmarkEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableChangeCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableEndorsementEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableFileShareNotificationsForApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableFollowersEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableLaterCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableLikeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableMentionsPostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableMessageEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableProfilePostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableSharePostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesEnableAutoSubForFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesEventRemindersCheckboxDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesFavoritesShowTopFavorites" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesFavoritesWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesGlobalNavBarWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesGlobalNavGridMenuWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideBiggerPhotoCallout" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideCSNDesktopTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideCSNGetChatterMobileTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideChatterOnboardingSplash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideEndUserOnboardingAssistantModal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideLightningMigrationModal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideS1BrowserUI" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideSecondChatterOnboardingSplash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideSfxWelcomeMat" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesLightningExperiencePreferred" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesPathAssistantCollapsed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesPreviewLightning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesRecordHomeReservedWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesRecordHomeSectionCollapseWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesReminderSoundOff" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCityToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCityToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCountryToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCountryToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowEmailToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowEmailToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowFaxToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowFaxToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowManagerToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowManagerToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowMobilePhoneToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowMobilePhoneToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowPostalCodeToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowPostalCodeToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowProfilePicToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStateToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStateToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStreetAddressToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStreetAddressToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowTitleToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowTitleToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowWorkPhoneToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowWorkPhoneToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesSortFeedByComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesTaskRemindersCheckboxDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserProfileSkillChildren" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserProfileSkillUserEndorsements" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRole" nillable="true" minOccurs="0" type="ens:UserRole"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserSites" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserTerritory2Associations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geopointe_Assignment_Areas__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geopointe_Route_Shares__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__User_Usage__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__Error_Logs__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__Incoming_SMS1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__Incoming_SMS__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMS_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMS_Scheduled__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__forward_configs__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__smsMagic__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicworkflow__Error_Logs__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FormFactor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppMenuCustomization">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Application" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppMenuCustomizationShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:UserAppMenuCustomization"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppMenuItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AppMenuItemId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InfoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsUsingAdminAuthorization" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileStartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserSortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserCustomBadge">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BadgeType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserEntityAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActivateable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEditable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFlsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMergeable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReadable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUndeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserFieldAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldDefinition" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAccessible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="LicenseDefinitionKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="userlicenses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserListView">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedChart" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ListView" nillable="true" minOccurs="0" type="ens:ListView"/>
                        <element name="ListViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserListViewCriterion">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ColumnName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserListView" nillable="true" minOccurs="0" type="ens:UserListView"/>
                        <element name="UserListViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserLogin">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsFrozen" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPasswordLocked" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserPackageLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PackageLicense" nillable="true" minOccurs="0" type="ens:PackageLicense"/>
                        <element name="PackageLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserPreference">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Preference" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvAccount">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ConnectedApp" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedAppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalFirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalLastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUserId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUsername" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsKnownLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SalesforceUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SalesforceUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvAccountStaging">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ConnectedApp" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedAppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalFirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalLastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUserId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUsername" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SalesforceUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SalesforceUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvMockTarget">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalFirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalLastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUserId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUsername" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvisioningConfig">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApprovalRequired" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConnectedApp" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedAppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Enabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EnabledOperations" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReconDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamedCredential" nillable="true" minOccurs="0" type="ens:NamedCredential"/>
                        <element name="NamedCredentialId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OnUpdateAttributes" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReconFilter" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserAccountMapping" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvisioningLog">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Details" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUserId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalUsername" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserProvisioningRequest" nillable="true" minOccurs="0" type="ens:UserProvisioningRequest"/>
                        <element name="UserProvisioningRequestId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvisioningRequest">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AppName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApprovalStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConnectedApp" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedAppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalUserId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Manager" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ManagerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:UserProvisioningRequest"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RetryCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SalesforceUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SalesforceUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ScheduleDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserProvAccount" nillable="true" minOccurs="0" type="ens:UserProvAccount"/>
                        <element name="UserProvAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserProvConfig" nillable="true" minOccurs="0" type="ens:UserProvisioningConfig"/>
                        <element name="UserProvConfigId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserProvisioningRequestShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:UserProvisioningRequest"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserRecordAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="HasAllAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasDeleteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasEditAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasReadAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasTransferAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaxAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CaseAccessForAccountOwner" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactAccessForAccountOwner" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MayForecastManagerShare" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpportunityAccessForAccountOwner" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PortalAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PortalAccountOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PortalRole" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PortalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RollupDescription" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Users" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserTerritory2Association">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RoleInTerritory2" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Territory2" nillable="true" minOccurs="0" type="ens:Territory2"/>
                        <element name="Territory2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="VerificationHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Activity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventGroup" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginGeo" nillable="true" minOccurs="0" type="ens:LoginGeo"/>
                        <element name="LoginGeoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginHistory" nillable="true" minOccurs="0" type="ens:LoginHistory"/>
                        <element name="LoginHistoryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Policy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Remarks" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Resource" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ResourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="VerificationMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="VerificationTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="VisualforceAccessMetrics">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexPage" nillable="true" minOccurs="0" type="ens:ApexPage"/>
                        <element name="ApexPageId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DailyPageViewCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MetricsDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Vote">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WebLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DisplayType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EncodingKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasMenubar" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasScrollbars" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasToolbar" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Height" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsProtected" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsResizable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpenType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PageOrSobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RequireRowSelection" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ScontrolId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ShowsLocation" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ShowsStatus" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Url" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Width" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:WorkBadgeDefinition"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkAccessShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:WorkAccess"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkBadge">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Definition" nillable="true" minOccurs="0" type="ens:WorkBadgeDefinition"/>
                        <element name="DefinitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Giver" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="GiverId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ImageUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Message" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Recipient" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="RecipientId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Source" nillable="true" minOccurs="0" type="ens:WorkThanks"/>
                        <element name="SourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkBadgeDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Badges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GivenBadgeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ImageUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompanyWide" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLimitPerUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRewardBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LimitNumber" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LimitStartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="WorkAccesses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkBadgeDefinitionFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:WorkBadgeDefinition"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkBadgeDefinitionHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="WorkBadgeDefinition" nillable="true" minOccurs="0" type="ens:WorkBadgeDefinition"/>
                        <element name="WorkBadgeDefinitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkBadgeDefinitionShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:WorkBadgeDefinition"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkThanks">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Badges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItem" nillable="true" minOccurs="0" type="ens:FeedItem"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Giver" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="GiverId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Message" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Network" nillable="true" minOccurs="0" type="ens:Network"/>
                        <element name="NetworkId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WorkThanksShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:WorkThanks"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Action__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Action__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Action__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Action_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Apex_Class__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Apply_To__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Available_SF1__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Available_Web__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Batch_Size__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Behavior__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Create_Record_Default_Field_Values__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Create_Record_SObject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Display_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Field_Sets_Mapping__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Link_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Objects__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_User_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_User_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Website__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Modal_Height__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Modal_Width__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Name_Translated__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Order__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Place_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Field_Sets__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Phone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_User_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_User_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Place_Website__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Point_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Field_Sets__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Record_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_User_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Record_User_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Require_User_Location__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Route_Stop_City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Field_Sets__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_User_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Stop_User_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Standard_Action__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Status_Message_Translated__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Status_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__User_Latitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__User_Longitude__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Check_In__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Check_In__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Check_In__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="geopointe__Blank__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Case__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Case__r" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="geopointe__Chatter_ID_Check_Out__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Chatter_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Chatter_This__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Check_Out_Distance_from_Check_In_km__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Check_Out_Distance_from_Check_In_miles__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="geopointe__Distance_from_What_ID_kilometers__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Distance_from_What_ID_miles__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Geo_Location__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geo_Location__r" nillable="true" minOccurs="0" type="ens:geopointe__Geo_Location__c"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="geopointe__Headline__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lead__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Lead__r" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="geopointe__Map_Link_Check_Out__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Link__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Opportunity__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Opportunity__r" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="geopointe__Task_ID_Check_Out__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Task_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__What_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__What_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__When_Check_Out__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__When__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Where_Check_Out_Latitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Where_Check_Out_Longitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Where_Latitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Where_Longitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Who__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Who__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="geopointe__Why_Text_Check_Out__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Why_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Why_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Data_Set_Object__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Data_Set_Object__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Data_Set_Object__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Available_Maps__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Available_Visualize__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Child_Filter_Logic__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Color_Markers_By__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Data_Set_Identifier__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Filter_Logic__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Filters__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Folder__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Folder__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Folder__c"/>
                        <element name="geopointe__Formatted_Address_for_Data_Table__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Label_Markers_By__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Map_Layers__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Map_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Marker_Icon__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Marker_Rules__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Marker_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Marker_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Number_of_Fields_Displayed_in_Table__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Order_By_Direction__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Order_By_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Personal__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Query_Limit__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Refresh_Interval__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Show_Filter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Assignment_Area__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Assignment_Plan__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Assignment_Plan__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Assignment_Plan__c"/>
                        <element name="geopointe__SOQL_Filter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Shape__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Shape__r" nillable="true" minOccurs="0" type="ens:geopointe__Shape__c"/>
                        <element name="geopointe__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Assignment_Plan__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__GP_Assignment_Plan__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Assignment_Plan__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Custom_Assignment_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Custom_Assignment_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geopointe_Assignment_Areas__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Last_Batch_Run_Complete_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Last_Batch_Run_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Last_Cleanup_Batch_Run_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Last_Inactive_Batch_Run_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Map_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Number_of_Areas__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Reassign_Owner__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Run_Assignment_Rule__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__SOQL_Filter_Grandfather_Records__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__SOQL_Filter__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Default_Mapping__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Geopointe_Object_Mapping__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geopointe_Object_Mapping__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Object_Mapping__c"/>
                        <element name="geopointe__Order__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Sfdc_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Demographics__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__GP_Demographics__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Demographics__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Border_Opacity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Fill_Opacity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Folder__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Folder__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Folder__c"/>
                        <element name="geopointe__Granularity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Max_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Metric__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Min_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Personal__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Field_Mapping__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Geopointe_Field_Label__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geopointe_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geopointe_Object_Mapping__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geopointe_Object_Mapping__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Object_Mapping__c"/>
                        <element name="geopointe__Required__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Sfdc_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Folder__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__GP_Folder__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Folder__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Data_Sets__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Demographics__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geopointe_Shapes__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Layers__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Map_Layers__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Map_Layer__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Border_Opacity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Data_Set__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Data_Set__r" nillable="true" minOccurs="0" type="ens:geopointe__Data_Set_Object__c"/>
                        <element name="geopointe__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Detail__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Fill_Opacity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Folder__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Folder__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Folder__c"/>
                        <element name="geopointe__Geometry__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Last_Sync_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Legend__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Personal__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Map_Style__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__GP_Map_Style__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Map_Style__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Style_JSON__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_Object_Mapping__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Geopointe_Default_Mappings__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geopointe_Field_Mappings__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Geopointe_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Sfdc_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__GP_User_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Auto_Load_Data_Layers__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Auto_Load_Data_Sets__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Auto_Load_Demographics__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Auto_Load_Layers__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Auto_Load_Shapes__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Auto_Load_Thematic__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Default_Route_Optimization_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Default_Route_Stop_Duration__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Default_Route_Window_Start__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Default_Route_Window_Stop__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Distance_Unit__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Global_Business_Monthly_Limit__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Recently_Used_Map_Items__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Start_Location__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Geo_Location__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Geo_Location__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Geo_Location__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Geo_Location__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Geo_Location__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geocode__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Geocode__r" nillable="true" minOccurs="0" type="ens:geopointe__Geocode__c"/>
                        <element name="geopointe__Latitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Longitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__PostalCode__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__State__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Temporary__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Geocode__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Accounts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Address_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Cases__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Check_Ins__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__City__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__City_clean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Contacts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Country_ISO__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Country_clean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__County_clean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geocode_Quality_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geocode_Quality__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Geocode_Service__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Latitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Latitude_display__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Latitude_search__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Leads__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Link_ID__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Locations__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Longitude__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Longitude_display__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Longitude_search__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Map_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Opportunities__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Parent_Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Parent_Record_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Parent_Record_Id2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Parent_Record_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Parent_Record__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Postal_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Postal_Code_clean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Side_of_Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__State_Province__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__State_Province_clean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Street__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Street_clean__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Uses_Customer_Geocodes__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Layer__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Layer__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Layer__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Auto_Load__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__File_Extension__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Folder__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Folder__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Folder__c"/>
                        <element name="geopointe__Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Personal__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Route_Share__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Route__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Route__r" nillable="true" minOccurs="0" type="ens:geopointe__Route__c"/>
                        <element name="geopointe__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Route__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Avoid_Highways__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Avoid_Tolls__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Calendar_Route__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="geopointe__Draggable__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Locations_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Locations_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Locations_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Mapping_Provider__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Number_of_Stops__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Optimized__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Route_Shares__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Route_Stop_Optimization__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Route_Window_End_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Route_Window_Start_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Temporary__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Thumb_Maps__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Total_Distance_km__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Total_Distance_mi__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Total_Time__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Units__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Shape__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__Shape__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Shape__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Center__Latitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Center__Longitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Center__c" nillable="true" minOccurs="0" type="tns:location"/>
                        <element name="geopointe__Color__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Dissolve__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Folder__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__Folder__r" nillable="true" minOccurs="0" type="ens:geopointe__GP_Folder__c"/>
                        <element name="geopointe__Geopointe_Assignment_Areas__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="geopointe__Label_Point__Latitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Label_Point__Longitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Label_Point__c" nillable="true" minOccurs="0" type="tns:location"/>
                        <element name="geopointe__Lat_Lng_10__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_4__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_5__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_6__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_7__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_8__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Lng_9__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Lat_Max__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Lat_Min__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Lng_Max__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Lng_Min__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Opacity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Personal__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Radius__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Show_Label__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Straddles_180__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Units__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Usage_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__Temp__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Boolean_1__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Boolean_2__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Boolean_3__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Boolean_4__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Boolean_5__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="geopointe__Currency_1__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Currency_2__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Currency_3__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__DateTime_1__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__DateTime_2__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__DateTime_3__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__Date_1__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="geopointe__Date_2__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="geopointe__Date_3__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="geopointe__Integer_1__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Integer_2__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Integer_3__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Long_Text_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Long_Text_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Long_Text_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Long_Text_4__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Long_Text_5__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Multi_Picklist_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Number_12_6_1__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Number_12_6_2__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Number_12_6_3__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="geopointe__Picklist_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Text_1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Text_2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Text_3__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Text_4__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Text_5__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__User_Usage__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:geopointe__User_Usage__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="geopointe__User_Usage__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="geopointe__Last_Use_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="geopointe__Last_Use__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="geopointe__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="geopointe__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Address__Feed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NetworkScope" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:hed__Address__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Address__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Accounts__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Address_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Contacts1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Default_Address__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Formula_MailingAddress__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Formula_MailingStreetAddress__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Geolocation__Latitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Geolocation__Longitude__s" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Geolocation__c" nillable="true" minOccurs="0" type="tns:location"/>
                        <element name="hed__Latest_End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Latest_Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__MailingCity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__MailingCountry__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__MailingPostalCode__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__MailingState__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__MailingStreet2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__MailingStreet__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Parent_Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Parent_Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Parent_Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Parent_Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Seasonal_End_Day__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Seasonal_End_Month__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Seasonal_End_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Seasonal_Start_Day__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Seasonal_Start_Month__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Seasonal_Start_Year__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Affiliation__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:hed__Affiliation__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Affiliation__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_HEDA__Enrollment_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_HEDA__TX_EnrollmentId__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_HEDA__TX_EnrollmentId__r" nillable="true" minOccurs="0" type="ens:TargetX_SRMb__Enrollment_History__c"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Affiliation_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Course_Enrollment__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__EndDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Primary__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Program_Enrollment__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Role__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__StartDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Affl_Mappings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account_Record_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Auto_Program_Enrollment_Role__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Auto_Program_Enrollment_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Auto_Program_Enrollment__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Primary_Affl_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Course_Enrollment__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Affiliation__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Affiliation__r" nillable="true" minOccurs="0" type="ens:hed__Affiliation__c"/>
                        <element name="hed__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Course_Offering__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Course_Offering__r" nillable="true" minOccurs="0" type="ens:hed__Course_Offering__c"/>
                        <element name="hed__Credits_Attempted__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Credits_Earned__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Grade__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Program_Enrollment__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Program_Enrollment__r" nillable="true" minOccurs="0" type="ens:hed__Program_Enrollment__c"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Course_Offering__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Capacity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Course_Enrollment__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Course__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Course__r" nillable="true" minOccurs="0" type="ens:hed__Course__c"/>
                        <element name="hed__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Faculty__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Faculty__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Section_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Term__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Term__r" nillable="true" minOccurs="0" type="ens:hed__Term__c"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Course__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Course_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Course_Offerings__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Credit_Hours__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Error__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Context_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Datetime__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="hed__Email_Sent__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Error_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Full_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Object_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Posted_in_Chatter__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Record_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Stack_Trace__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Hierarchy_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account_Processor__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Accounts_Addresses_Enabled__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Accounts_to_Delete__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Affl_ProgEnroll_Del_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Affl_ProgEnroll_Del__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Allow_AutoCreated_Duplicates__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Async_Error_Check_Last_Run__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="hed__Contacts_Addresses_Enabled__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Disable_Error_Handling__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Disable_Preferred_Email_Enforcement__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Enable_Course_Connections__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Enable_Debug__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Error_Notifications_On__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Error_Notifications_To__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Faculty_RecType__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Household_Addresses_RecType__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Reciprocal_Method__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Relationship_Name_Field_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Relationship_Name_Id_Field_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Simple_Address_Change_Treated_as_Update__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Store_Errors_On__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Student_RecType__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Program_Enrollment__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Admission_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Affiliation__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Affiliation__r" nillable="true" minOccurs="0" type="ens:hed__Affiliation__c"/>
                        <element name="hed__Application_Submitted_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Class_Standing__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Course_Enrollments__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__Credits_Attempted__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Credits_Earned__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Eligible_to_Enroll__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Enrollment_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__GPA__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Graduation_Year__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Relationship_Auto_Create__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Campaign_Types__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Relationship_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Relationship_Lookup__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Female__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Male__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Neutral__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Relationship__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:hed__Relationship__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Relationship__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:hed__Relationship__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Relationship__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="FERPA_Access__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetX_HEDA__TGTXRelationships__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TargetX_HEDA__TX_Relationship_Id__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TargetX_HEDA__TX_Relationship_Id__r" nillable="true" minOccurs="0" type="ens:TargetX_Base__Relationship__c"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Emergency_Contact__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__ReciprocalRelationship__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__ReciprocalRelationship__r" nillable="true" minOccurs="0" type="ens:hed__Relationship__c"/>
                        <element name="hed__RelatedContact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__RelatedContact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="hed__Relationship_Explanation__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Relationships__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__SYSTEM_SystemCreated__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Term__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="hed__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="hed__Course_Offerings__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="hed__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="hed__Start_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="hed__Trigger_Handler__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="hed__Active__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Asynchronous__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="hed__Class__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Filter_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Filter_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Load_Order__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="hed__Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__Trigger_Action__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="hed__User_Managed__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Acknowledgement_Popup_Setting__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Allow_Popup_Msg__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Conversation_View_Setting__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__All__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Default_Sender__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Owner__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Duration_To_View_History__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__noOfDaysForCutOffDate__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Error_Log__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Batch_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Class_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Error_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Error_Status_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Error_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Line_number__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Filter_Setting__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Field_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Field_Value__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__List_View_Configuration__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__List_View_Configuration__r" nillable="true" minOccurs="0" type="ens:smagicinteract__List_View_Configuration__c"/>
                        <element name="smagicinteract__Operator__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Incoming_Alert_Configuration__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__Incoming_Alert_Configuration__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Incoming_Alert_Configuration__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__isCustomize__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__isDisable__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Incoming_MMS_Detail__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Incoming_SMS__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Incoming_SMS__r" nillable="true" minOccurs="0" type="ens:smagicinteract__Incoming_SMS__c"/>
                        <element name="smagicinteract__MMS_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__MMS_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Incoming_SMS__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Campaign__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Campaign__r" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="smagicinteract__Case__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Case__r" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="smagicinteract__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="smagicinteract__Inbound_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Incoming_MMS_Details__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__Lead__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Lead__r" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="smagicinteract__MMS_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__MMS_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Mobile_Number__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Quick_Reply_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Sent_By__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Sent_By__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="smagicinteract__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="smagicinteract__actionTaken__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__external_field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__taskId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__LV_MMS_Detail__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__List_View_Configuration__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__List_View_Configuration__r" nillable="true" minOccurs="0" type="ens:smagicinteract__List_View_Configuration__c"/>
                        <element name="smagicinteract__MMS_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__MMS_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__List_View_Configuration__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Criteria_Logical_Condition__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Custom_Logic__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Expexted_SMS__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Filter_Criteria__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Filter_Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Filter_Settings__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__LV_MMS_Details__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__List_View_Executions__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__MMS_Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Object_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__OptOut_Records__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Optout_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Phone_Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_Scheduled__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__Sender_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Template_Body__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Template_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Total_Records__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__optOut_Check__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__List_View_Execution__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__BatchJobId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Expexted_SMS__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__List_View_Configuration__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__List_View_Configuration__r" nillable="true" minOccurs="0" type="ens:smagicinteract__List_View_Configuration__c"/>
                        <element name="smagicinteract__Messages_Delivered__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Messages_Processed__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Opt_Out_Records__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Optout_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Phone_Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Template_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Time_Taken__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__Total_Records__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__MMS_Detail__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__MMS_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__MMS_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_History__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__SMS_History__r" nillable="true" minOccurs="0" type="ens:smagicinteract__smsMagic__c"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Optout_Settings__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__Optout_Settings__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Optout_Settings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Keyword__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Object_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Optout_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Batch_Execution_Tracker__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Campaign__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Campaign__r" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="smagicinteract__Execution_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Job_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Magic_Package_Type__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Expired__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Package1__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Package2__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Package3__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Trial__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Magic_SetUp_Tracker__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__step_1__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__step_2__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__step_3__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__step_4__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__step_5__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__step_6__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Schedule__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_Schedule__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Schedule__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Campaign_Statuses__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Condition__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="smagicinteract__End_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="smagicinteract__Exclude_Phone_Json__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Failure_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Job_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__List_View_Configuration__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__List_View_Configuration__r" nillable="true" minOccurs="0" type="ens:smagicinteract__List_View_Configuration__c"/>
                        <element name="smagicinteract__Name_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Optout_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Phone_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Record_Ids__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_Template__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__SMS_Template__r" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_Template__c"/>
                        <element name="smagicinteract__SMS_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Schedule_JobId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Schedule_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Scheduled_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="smagicinteract__Selected_Days_RecurWeek__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Selected_User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Selected_User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="smagicinteract__SenderId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Show_Other_Users__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Template_Id_Json__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Unrelated_Object_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Variable_Day_RecurDay__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__isOptout__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__isRecurring__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__recursTypeForDaily__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__recursTypeMonthly__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__recursTypeYearly__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__recursType__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedDateForYear__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedDayForMonth1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedDayForMonth2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedMonthForYear__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedMonth__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedWeekDayForYear__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedWeekForMonth__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__selectedWeekForYear__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__variableMonth1__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__variableMonth2__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_SenderId__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__SenderId_Profile_Map__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__senderId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Template_Type__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Related_Object_Types__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Template_Object_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Template__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_Template__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SMS_Template__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__ObjectName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_History__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__SMS_Scheduled__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Workflow_XML_Configurations1__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicworkflow__Workflow_XML_Configurations__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Scheduled_SMS__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__MobilePhone__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__ObjectId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Object_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Scheduled_Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="smagicinteract__jobId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__smsText__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SenderId_Profile_Map__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__SenderId_Profile_Map__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__SenderId_Profile_Map__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Default_SenderId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Profile_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Profile__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SenderId_Lookup__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__SenderId_Lookup__r" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_SenderId__c"/>
                        <element name="smagicinteract__Sender_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__Update_Related_Lists__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Update_Account_Related_List__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Update_Contact_Related_List__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Update_Opportunity_Related_List__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__forward_config__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__forward_config__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__forward_config__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Keyword__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__forwardToEmail__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__forwardToMobilePhone__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__forwardToUser__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__forwardToUser__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="smagicinteract__methodName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__incoming_lookup_config__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__incoming_lookup_config__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__incoming_lookup_config__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__MobilePhoneField__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Notify_Record_Owner__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__ReferenceField__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__incoming_sms_owner__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__objectName__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__lookup_config__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__lookup_config__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__lookup_config__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__lookupFound__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__lookupNotFound__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__smsMagic__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicinteract__smsMagic__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicinteract__smsMagic__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicinteract__Account__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Account__r" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="smagicinteract__Campaign__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Campaign__r" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="smagicinteract__Case__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Case__r" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="smagicinteract__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="smagicinteract__Country__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__CreatedOn__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="smagicinteract__Delivery_Error_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Is_Text_Unicode__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicinteract__Lead__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Lead__r" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="smagicinteract__MMS_Details__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicinteract__MMS_Subject__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Message_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__ObjectType__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Opportunity__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Opportunity__r" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="smagicinteract__PhoneNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMSText__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__SMS_Credits__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__SMS_Template__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__SMS_Template__r" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_Template__c"/>
                        <element name="smagicinteract__SenderId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Sent_By__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__Sent_By__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="smagicinteract__Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicinteract__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="smagicinteract__deliveryStatus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__disableSMSOnTrigger__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicinteract__external_field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__response__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__sentStatus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicinteract__statusMessage__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicschedule__SMS_Schedule__History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:smagicschedule__SMS_Schedule__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicschedule__SMS_Schedule__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicschedule__Condition__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Date__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="smagicschedule__Failure_Reason__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Job_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Name_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Object__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Optout_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Phone_Field__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Record_Ids__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__SMS_Text__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Schedule_JobId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Schedule_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Scheduled_Date__c" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="smagicschedule__SenderId__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicschedule__isOptout__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicworkflow__Batch_Execution_Tracker__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicworkflow__Execution_Status__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Job_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Task_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__WorkflowXMLMap__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicworkflow__WorkflowXMLMap__r" nillable="true" minOccurs="0" type="ens:smagicworkflow__WorkflowXMLMap__c"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicworkflow__Error_Log__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicworkflow__Batch_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Class_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Error_Message__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Error_Status_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Fields__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Line_number__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="smagicworkflow__User__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicworkflow__User__r" nillable="true" minOccurs="0" type="ens:User"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicworkflow__WorkflowSMSConfig__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicworkflow__isFromEmail__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="smagicworkflow__isFromTask__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicworkflow__WorkflowXMLMap__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicworkflow__Batch_Execution_Tracker__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="smagicworkflow__Description__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Short_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__Template1__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicworkflow__Template1__r" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_Template__c"/>
                        <element name="smagicworkflow__Template2__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="smagicworkflow__Template2__r" nillable="true" minOccurs="0" type="ens:smagicinteract__SMS_Template__c"/>
                        <element name="smagicworkflow__XML_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__XML_String__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="smagicworkflow__packagePrefix__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="smagicworkflow__smagicbasic__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="smagicworkflow__smagicinteract__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__PaymentGatewaySettings__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="targetx_payment__CashNet_Checkout_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__CashNet_Merchant_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Default_Payment_Gateway__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Paypal_Country_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Paypal_Currency_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Paypal_Login__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Paypal_Notify_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Paypal_Sandbox_Site__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="targetx_payment__TouchNet_Context__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__TouchNet_Server__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__TouchNet_Upay_Site_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Touchnet_Password__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Touchnet_Username__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Touchnet_uPay_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__debug__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__Payment_Connectors__Share">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:targetx_payment__Payment_Connectors__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__Payment_Connectors__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="targetx_payment__Campus_Solutions_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Checkout_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Converge_Merchant_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Converge_Pin__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Converge_User_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Country_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Currency_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__CyberSource_Access_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__CyberSource_Locale_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__CyberSource_Profile_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__CyberSource_Secret_Key__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Default_Item_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Form_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Gateway_Account_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Login__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Merchant_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Nelnet_Shared_Secret__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Nelnet_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Notify_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__OPC_Postback_Url__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__OPC_Sandbox__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="targetx_payment__OPC_TransID_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Password__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Payment_Details__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="targetx_payment__Product_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Sandbox__c" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="targetx_payment__Server__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__TransID_Name__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Username__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__uPay_Site_Id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__uPay_URL__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__Payment_Detail__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="targetx_payment__Confirmation_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Confirmation_Source__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Confirmation_Type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Confirmed_Amount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Contact__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="targetx_payment__Contact__r" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="targetx_payment__Expected_Amount__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Gateway_Payment_Ref__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Item_Cost_Total__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Payment_Connector__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="targetx_payment__Payment_Connector__r" nillable="true" minOccurs="0" type="ens:targetx_payment__Payment_Connectors__c"/>
                        <element name="targetx_payment__Payment_Method__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Purchase_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="targetx_payment__Relevant_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Total_Due__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__UserSessionID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Vendor_Apex_Reference__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__portalSessionNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__portalTicketNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__type__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__Pending_Cart__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="targetx_payment__Pending_Items__r" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__Pending_Item__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="targetx_payment__Cost_Per__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Item_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Item_Number__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Line_Total__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Quantity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Relevant_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Transaction__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="targetx_payment__Transaction__r" nillable="true" minOccurs="0" type="ens:targetx_payment__Pending_Cart__c"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="targetx_payment__Purchase_Item__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="targetx_payment__Cost_Per__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Item_Code__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Item_Number__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Line_Total__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Quantity__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="targetx_payment__Relevant_ID__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="targetx_payment__Transaction__c" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="targetx_payment__Transaction__r" nillable="true" minOccurs="0" type="ens:targetx_payment__Payment_Detail__c"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="tfa__FormAssemblyConfiguration__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentEntities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupOwner" nillable="true" minOccurs="0" type="ens:Name"/>
                        <element name="SetupOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="tfa__FormAssembly_Instance__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


        </schema>

        <schema elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:enterprise.soap.sforce.com">

            <import namespace="urn:sobject.enterprise.soap.sforce.com"/>

            <!-- Our simple ID Type -->
            <simpleType name="ID">
                <restriction base="xsd:string">
                    <length value="18"/>
                    <pattern value="[a-zA-Z0-9]{18}"/>
                </restriction>
            </simpleType>

            

            <!-- Compound datatype: Address -->
            <complexType name="address">
                <complexContent>
                    <extension base="tns:location">
                        <sequence>
                            <element name="city" type="xsd:string" nillable="true"/>
                            <element name="country" type="xsd:string" nillable="true"/>
                            <element name="countryCode" type="xsd:string" nillable="true"/>
                            <element name="geocodeAccuracy" type="xsd:string" nillable="true"/>
                            <element name="postalCode" type="xsd:string" nillable="true"/>
                            <element name="state" type="xsd:string" nillable="true"/>
                            <element name="stateCode" type="xsd:string" nillable="true"/>
                            <element name="street" type="xsd:string" nillable="true"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <!-- Compound datatype: Location -->
            <complexType name="location">
                <sequence>
                    <element name="latitude" type="xsd:double" nillable="true"/>
                    <element name="longitude" type="xsd:double" nillable="true"/>
                </sequence>
            </complexType>

            
            <simpleType name="QueryLocator">
                <restriction base="xsd:string"/>
            </simpleType>

            <!-- Shared Result Types -->
            <complexType name="QueryResult">
                <sequence>
                    <element name="done" type="xsd:boolean"/>
                    <element name="queryLocator" type="tns:QueryLocator" nillable="true"/>
                    <element name="records" type="ens:sObject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="size" type="xsd:int"/>
                </sequence>
            </complexType>



            <!-- Search Result -->
            <complexType name="SearchResult">
                <sequence>
                    
                        <element name="queryId" type="xsd:string" nillable="false" minOccurs="1" maxOccurs="1"/>
                    
                    <element name="searchRecords" minOccurs="0" maxOccurs="unbounded" type="tns:SearchRecord"/>
                    
                        <element name="searchResultsMetadata" type="tns:SearchResultsMetadata" nillable="true" minOccurs="0" maxOccurs="1"/>
                    
                    
                </sequence>
            </complexType>

            <complexType name="SearchRecord">
                <sequence>
                    <element name="record" type="ens:sObject"/>
                    
                    <element name="searchRecordMetadata" nillable="false" minOccurs="0" maxOccurs="1" type="tns:SearchRecordMetadata"/>
                    
                    
                    <element name="snippet" nillable="true" minOccurs="0" maxOccurs="1" type="tns:SearchSnippet"/>
                    
                </sequence>
            </complexType>

            <complexType name="SearchRecordMetadata">
                <sequence>
                    <element name="spellCorrected" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="SearchSnippet">
                <sequence>
                    <element name="text" nillable="true" minOccurs="0" maxOccurs="1" type="xsd:string"/>
                    <element name="wholeFields" minOccurs="0" maxOccurs="unbounded" type="tns:NameValuePair"/>
                </sequence>
            </complexType>


            <complexType name="SearchResultsMetadata">
                <sequence>
                	
                		<element name="entityLabelMetadata" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:LabelsSearchMetadata"/>
              		
              		
              			<element name="entityMetadata" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:EntitySearchMetadata"/>
           			
       			</sequence>
   			</complexType>


			<complexType name="LabelsSearchMetadata">
				<sequence>
					<element name="entityFieldLabels" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:NameValuePair"/>
					<element name="entityName" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
				</sequence>
			</complexType>


            <complexType name="EntitySearchMetadata">
                <sequence>
                	<element name="entityName" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                	<element name="fieldMetadata" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:FieldLevelSearchMetadata"/>
                    
                    <element name="spellCorrectionMetadata" nillable="false" minOccurs="0" maxOccurs="1" type="tns:EntitySpellCorrectionMetadata"/>
                    
                </sequence>
            </complexType>


            <complexType name="FieldLevelSearchMetadata">
                <sequence>
                	<element name="label" nillable="true" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                	<element name="name" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                	<element name="type" nillable="true" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="EntitySpellCorrectionMetadata">
                <sequence>
                    <element name="correctedQuery" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                    <element name="hasNonCorrectedResults" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="RelationshipReferenceTo">
                <sequence>
                    <element name="referenceTo" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="RecordTypesSupported">
                <sequence>
                    <element name="recordTypeInfos" minOccurs="0" maxOccurs="unbounded" type="tns:RecordTypeInfo"/>
                </sequence>
            </complexType>


            <complexType name="JunctionIdListNames">
                <sequence>
                    <element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
                </sequence>
            </complexType>


           <complexType name="SearchLayoutButtonsDisplayed">
                <sequence>
                    <element name="applicable" type="xsd:boolean"/>
                    <element name="buttons" minOccurs="0" maxOccurs="unbounded" type="tns:SearchLayoutButton"/>
                </sequence>
           </complexType>

           <complexType name="SearchLayoutButton">
                <sequence>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                </sequence>
           </complexType>

           <complexType name="SearchLayoutFieldsDisplayed">
                <sequence>
                    <element name="applicable" type="xsd:boolean"/>
                    <element name="fields" minOccurs="0" maxOccurs="unbounded" type="tns:SearchLayoutField"/>
                </sequence>
           </complexType>

           <complexType name="SearchLayoutField">
                <sequence>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="sortable" type="xsd:boolean"/>
                </sequence>
           </complexType>

            <!-- Common name-value pair -->
            <complexType name="NameValuePair">
                <sequence>
                    <element name="name" type="xsd:string"/>
                    <element name="value" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="NameObjectValuePair">
                <sequence>
                    <element name="name" type="xsd:string"/>
                    <element name="value" type="xsd:anyType" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>


            <!-- GetUpdated Result -->
            <complexType name="GetUpdatedResult">
                <sequence>
                    <element name="ids" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                    <element name="latestDateCovered" type="xsd:dateTime"/>
                    
                </sequence>
            </complexType>

            <!-- GetDeleted Result -->
            <complexType name="GetDeletedResult">
                <sequence>
                    <element name="deletedRecords" minOccurs="0" maxOccurs="unbounded" type="tns:DeletedRecord"/>
                    <element name="earliestDateAvailable" type="xsd:dateTime"/>
                    <element name="latestDateCovered" type="xsd:dateTime"/>
                    
                </sequence>
            </complexType>

            <complexType name="DeletedRecord">
                <sequence>
                    <element name="deletedDate" type="xsd:dateTime"/>
                    <element name="id" type="tns:ID"/>
                </sequence>
            </complexType>


            <complexType name="GetServerTimestampResult">
                <sequence>
                    <element name="timestamp" type="xsd:dateTime"/>
                </sequence>
            </complexType>


            <!-- InvalidateSessions Result -->
            <complexType name="InvalidateSessionsResult">
                <sequence>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="SetPasswordResult">
            </complexType>

            <complexType name="ChangeOwnPasswordResult">
            </complexType>

            <complexType name="ResetPasswordResult">
                <sequence>
                    <element name="password" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="GetUserInfoResult">
                <sequence>
                    <element name="accessibilityMode" type="xsd:boolean"/>
                    <element name="chatterExternal" type="xsd:boolean"/>
                    <element name="currencySymbol" type="xsd:string" nillable="true"/>

                    <element name="orgAttachmentFileSizeLimit" type="xsd:int"/>
                    <element name="orgDefaultCurrencyIsoCode" type="xsd:string" nillable="true"/>
                    <element name="orgDefaultCurrencyLocale" type="xsd:string" nillable="true"/>
                    <element name="orgDisallowHtmlAttachments" type="xsd:boolean"/>
                    <element name="orgHasPersonAccounts" type="xsd:boolean"/>
                    <element name="organizationId" type="tns:ID"/>
                    <element name="organizationMultiCurrency" type="xsd:boolean"/>
                    <element name="organizationName" type="xsd:string"/>
                    <element name="profileId" type="tns:ID"/>
                    <element name="roleId" type="tns:ID" nillable="true"/>
                    <element name="sessionSecondsValid" type="xsd:int"/>
                    <element name="userDefaultCurrencyIsoCode" type="xsd:string" nillable="true"/>
                    <element name="userEmail" type="xsd:string"/>
                    <element name="userFullName" type="xsd:string"/>
                    <element name="userId" type="tns:ID"/>
                    <element name="userLanguage" type="xsd:string"/>
                    <element name="userLocale" type="xsd:string"/>
                    <element name="userName" type="xsd:string"/>
                    <element name="userTimeZone" type="xsd:string"/>
                    <element name="userType" type="xsd:string"/>
                    <element name="userUiSkin" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="LoginResult">
                <sequence>
                    <element name="metadataServerUrl" type="xsd:string" nillable="true"/>
                    <element name="passwordExpired" type="xsd:boolean"/>
                    <element name="sandbox" type="xsd:boolean"/>
                    <element name="serverUrl" type="xsd:string" nillable="true"/>
                    <element name="sessionId" type="xsd:string" nillable="true"/>

                    <element name="userId" type="tns:ID" nillable="true"/>
                    <element name="userInfo" type="tns:GetUserInfoResult" minOccurs="0"/>
                </sequence>
            </complexType>


            <simpleType name="StatusCode">
                <restriction base="xsd:string">
                    <enumeration value="ALL_OR_NONE_OPERATION_ROLLED_BACK"/>
                    <enumeration value="ALREADY_IN_PROCESS"/>
                    <enumeration value="APEX_DATA_ACCESS_RESTRICTION"/>
                    <enumeration value="ASSIGNEE_TYPE_REQUIRED"/>
                    <enumeration value="AURA_COMPILE_ERROR"/>
                    <enumeration value="BAD_CUSTOM_ENTITY_PARENT_DOMAIN"/>
                    <enumeration value="BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED"/>
                    <enumeration value="CANNOT_CASCADE_PRODUCT_ACTIVE"/>
                    <enumeration value="CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE"/>
                    <enumeration value="CANNOT_DEACTIVATE_DIVISION"/>
                    <enumeration value="CANNOT_DELETE_GLOBAL_ACTION_LIST"/>
                    <enumeration value="CANNOT_DELETE_LAST_DATED_CONVERSION_RATE"/>
                    <enumeration value="CANNOT_DELETE_MANAGED_OBJECT"/>
                    <enumeration value="CANNOT_DISABLE_LAST_ADMIN"/>
                    <enumeration value="CANNOT_ENABLE_IP_RESTRICT_REQUESTS"/>
                    <enumeration value="CANNOT_EXECUTE_FLOW_TRIGGER"/>
                    <enumeration value="CANNOT_FREEZE_SELF"/>
                    <enumeration value="CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY"/>
                    <enumeration value="CANNOT_MODIFY_MANAGED_OBJECT"/>
                    <enumeration value="CANNOT_PASSWORD_LOCKOUT"/>
                    <enumeration value="CANNOT_POST_TO_ARCHIVED_GROUP"/>
                    <enumeration value="CANNOT_RENAME_APEX_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_RENAME_APEX_REFERENCED_OBJECT"/>
                    <enumeration value="CANNOT_RENAME_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_RENAME_REFERENCED_OBJECT"/>
                    <enumeration value="CANNOT_REPARENT_RECORD"/>
                    <enumeration value="CANNOT_UPDATE_CONVERTED_LEAD"/>
                    <enumeration value="CANT_DISABLE_CORP_CURRENCY"/>
                    <enumeration value="CANT_UNSET_CORP_CURRENCY"/>
                    <enumeration value="CHILD_SHARE_FAILS_PARENT"/>
                    <enumeration value="CIRCULAR_DEPENDENCY"/>
                    <enumeration value="CLEAN_SERVICE_ERROR"/>
                    <enumeration value="COLLISION_DETECTED"/>
                    <enumeration value="COMMERCIAL_CONTROL_ERROR"/>
                    <enumeration value="COMMUNITY_NOT_ACCESSIBLE"/>
                    <enumeration value="CONFLICTING_ENVIRONMENT_HUB_MEMBER"/>
                    <enumeration value="CONFLICTING_SSO_USER_MAPPING"/>
                    <enumeration value="CUSTOM_APEX_ERROR"/>
                    <enumeration value="CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_ENTITY_OR_FIELD_LIMIT"/>
                    <enumeration value="CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_INDEX_EXISTS"/>
                    <enumeration value="CUSTOM_LINK_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_METADATA_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_METADATA_REL_FIELD_MANAGEABILITY"/>
                    <enumeration value="CUSTOM_SETTINGS_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_TAB_LIMIT_EXCEEDED"/>
                    <enumeration value="DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR"/>
                    <enumeration value="DATAASSESSMENT_CONFIG_SERVICE_ERROR"/>
                    <enumeration value="DATACLOUDADDRESS_NO_RECORDS_FOUND"/>
                    <enumeration value="DATACLOUDADDRESS_PROCESSING_ERROR"/>
                    <enumeration value="DATACLOUDADDRESS_SERVER_ERROR"/>
                    <enumeration value="DELETE_FAILED"/>
                    <enumeration value="DELETE_OPERATION_TOO_LARGE"/>
                    <enumeration value="DELETE_REQUIRED_ON_CASCADE"/>
                    <enumeration value="DEPENDENCY_EXISTS"/>
                    <enumeration value="DUPLICATES_DETECTED"/>
                    <enumeration value="DUPLICATE_CASE_SOLUTION"/>
                    <enumeration value="DUPLICATE_COMM_NICKNAME"/>
                    <enumeration value="DUPLICATE_CUSTOM_ENTITY_DEFINITION"/>
                    <enumeration value="DUPLICATE_CUSTOM_TAB_MOTIF"/>
                    <enumeration value="DUPLICATE_DEVELOPER_NAME"/>
                    <enumeration value="DUPLICATE_EXTERNAL_ID"/>
                    <enumeration value="DUPLICATE_MASTER_LABEL"/>
                    <enumeration value="DUPLICATE_SENDER_DISPLAY_NAME"/>
                    <enumeration value="DUPLICATE_USERNAME"/>
                    <enumeration value="DUPLICATE_VALUE"/>
                    <enumeration value="EMAIL_ADDRESS_BOUNCED"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR"/>
                    <enumeration value="EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR"/>
                    <enumeration value="EMAIL_OPTED_OUT"/>
                    <enumeration value="EMAIL_TEMPLATE_FORMULA_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_MERGEFIELD_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_PROCESSING_ERROR"/>
                    <enumeration value="EMPTY_SCONTROL_FILE_NAME"/>
                    <enumeration value="ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE"/>
                    <enumeration value="ENTITY_IS_ARCHIVED"/>
                    <enumeration value="ENTITY_IS_DELETED"/>
                    <enumeration value="ENTITY_IS_LOCKED"/>
                    <enumeration value="ENTITY_SAVE_ERROR"/>
                    <enumeration value="ENTITY_SAVE_VALIDATION_ERROR"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN"/>
                    <enumeration value="ERROR_IN_MAILER"/>
                    <enumeration value="EXCHANGE_WEB_SERVICES_URL_INVALID"/>
                    <enumeration value="FAILED_ACTIVATION"/>
                    <enumeration value="FIELD_CUSTOM_VALIDATION_EXCEPTION"/>
                    <enumeration value="FIELD_FILTER_VALIDATION_EXCEPTION"/>
                    <enumeration value="FIELD_INTEGRITY_EXCEPTION"/>
                    <enumeration value="FIELD_KEYWORD_LIST_MATCH_LIMIT"/>
                    <enumeration value="FIELD_MAPPING_ERROR"/>
                    <enumeration value="FIELD_MODERATION_RULE_BLOCK"/>
                    <enumeration value="FIELD_NOT_UPDATABLE"/>
                    <enumeration value="FILE_EXTENSION_NOT_ALLOWED"/>
                    <enumeration value="FILE_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="FILTERED_LOOKUP_LIMIT_EXCEEDED"/>
                    <enumeration value="FIND_DUPLICATES_ERROR"/>
                    <enumeration value="FLOW_EXCEPTION"/>
                    <enumeration value="FUNCTIONALITY_NOT_ENABLED"/>
                    <enumeration value="HAS_PUBLIC_REFERENCES"/>
                    <enumeration value="HTML_FILE_UPLOAD_NOT_ALLOWED"/>
                    <enumeration value="IMAGE_TOO_LARGE"/>
                    <enumeration value="INACTIVE_OWNER_OR_USER"/>
                    <enumeration value="INACTIVE_RULE_ERROR"/>
                    <enumeration value="INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"/>
                    <enumeration value="INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY"/>
                    <enumeration value="INSUFFICIENT_ACCESS_OR_READONLY"/>
                    <enumeration value="INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA"/>
                    <enumeration value="INSUFFICIENT_CREDITS"/>
                    <enumeration value="INTERNAL_ERROR"/>
                    <enumeration value="INVALID_ACCESS_LEVEL"/>
                    <enumeration value="INVALID_ACCESS_TOKEN"/>
                    <enumeration value="INVALID_ARGUMENT_TYPE"/>
                    <enumeration value="INVALID_ASSIGNEE_TYPE"/>
                    <enumeration value="INVALID_ASSIGNMENT_RULE"/>
                    <enumeration value="INVALID_BATCH_OPERATION"/>
                    <enumeration value="INVALID_CONTENT_TYPE"/>
                    <enumeration value="INVALID_CREDIT_CARD_INFO"/>
                    <enumeration value="INVALID_CROSS_REFERENCE_KEY"/>
                    <enumeration value="INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD"/>
                    <enumeration value="INVALID_CURRENCY_CONV_RATE"/>
                    <enumeration value="INVALID_CURRENCY_CORP_RATE"/>
                    <enumeration value="INVALID_CURRENCY_ISO"/>
                    <enumeration value="INVALID_DATA_CATEGORY_GROUP_REFERENCE"/>
                    <enumeration value="INVALID_DATA_URI"/>
                    <enumeration value="INVALID_EMAIL_ADDRESS"/>
                    <enumeration value="INVALID_EMPTY_KEY_OWNER"/>
                    <enumeration value="INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR"/>
                    <enumeration value="INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR"/>
                    <enumeration value="INVALID_ENTITY_FOR_UPSERT"/>
                    <enumeration value="INVALID_ENVIRONMENT_HUB_MEMBER"/>
                    <enumeration value="INVALID_EVENT_DELIVERY"/>
                    <enumeration value="INVALID_EVENT_SUBSCRIPTION"/>
                    <enumeration value="INVALID_EXTENSION_ID"/>
                    <enumeration value="INVALID_FIELD"/>
                    <enumeration value="INVALID_FIELD_FOR_INSERT_UPDATE"/>
                    <enumeration value="INVALID_FIELD_WHEN_USING_TEMPLATE"/>
                    <enumeration value="INVALID_FILTER_ACTION"/>
                    <enumeration value="INVALID_GOOGLE_DOCS_URL"/>
                    <enumeration value="INVALID_ID_FIELD"/>
                    <enumeration value="INVALID_INET_ADDRESS"/>
                    <enumeration value="INVALID_INPUT"/>
                    <enumeration value="INVALID_LINEITEM_CLONE_STATE"/>
                    <enumeration value="INVALID_MARKUP"/>
                    <enumeration value="INVALID_MASTER_OR_TRANSLATED_SOLUTION"/>
                    <enumeration value="INVALID_MESSAGE_ID_REFERENCE"/>
                    <enumeration value="INVALID_NAMESPACE_PREFIX"/>
                    <enumeration value="INVALID_OAUTH_URL"/>
                    <enumeration value="INVALID_OPERATION"/>
                    <enumeration value="INVALID_OPERATOR"/>
                    <enumeration value="INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST"/>
                    <enumeration value="INVALID_OWNER"/>
                    <enumeration value="INVALID_PACKAGE_LICENSE"/>
                    <enumeration value="INVALID_PACKAGE_VERSION"/>
                    <enumeration value="INVALID_PARTNER_NETWORK_STATUS"/>
                    <enumeration value="INVALID_PAYLOAD_VERSION"/>
                    <enumeration value="INVALID_PERSON_ACCOUNT_OPERATION"/>
                    <enumeration value="INVALID_PROVIDER_TYPE"/>
                    <enumeration value="INVALID_QUERY_LOCATOR"/>
                    <enumeration value="INVALID_READ_ONLY_USER_DML"/>
                    <enumeration value="INVALID_REFRESH_TOKEN"/>
                    <enumeration value="INVALID_RUNTIME_VALUE"/>
                    <enumeration value="INVALID_SAVE_AS_ACTIVITY_FLAG"/>
                    <enumeration value="INVALID_SESSION_ID"/>
                    <enumeration value="INVALID_SETUP_OWNER"/>
                    <enumeration value="INVALID_SIGNUP_COUNTRY"/>
                    <enumeration value="INVALID_SIGNUP_OPTION"/>
                    <enumeration value="INVALID_SITE_DELETE_EXCEPTION"/>
                    <enumeration value="INVALID_SITE_FILE_IMPORTED_EXCEPTION"/>
                    <enumeration value="INVALID_SITE_FILE_TYPE_EXCEPTION"/>
                    <enumeration value="INVALID_STATUS"/>
                    <enumeration value="INVALID_SUBDOMAIN"/>
                    <enumeration value="INVALID_TEXT_REPRESENTATION"/>
                    <enumeration value="INVALID_TYPE"/>
                    <enumeration value="INVALID_TYPE_FOR_OPERATION"/>
                    <enumeration value="INVALID_TYPE_ON_FIELD_IN_RECORD"/>
                    <enumeration value="INVALID_USERID"/>
                    <enumeration value="IP_RANGE_LIMIT_EXCEEDED"/>
                    <enumeration value="JIGSAW_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="LICENSE_LIMIT_EXCEEDED"/>
                    <enumeration value="LIGHT_PORTAL_USER_EXCEPTION"/>
                    <enumeration value="LIMIT_EXCEEDED"/>
                    <enumeration value="MALFORMED_ID"/>
                    <enumeration value="MANAGER_NOT_DEFINED"/>
                    <enumeration value="MASSMAIL_RETRY_LIMIT_EXCEEDED"/>
                    <enumeration value="MASS_MAIL_LIMIT_EXCEEDED"/>
                    <enumeration value="MATCH_DEFINITION_ERROR"/>
                    <enumeration value="MATCH_OPERATION_ERROR"/>
                    <enumeration value="MATCH_OPERATION_INVALID_ENGINE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_INVALID_RULE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_ENGINE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_OPTIONS_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_RULE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_UNKNOWN_RULE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR"/>
                    <enumeration value="MATCH_PRECONDITION_FAILED"/>
                    <enumeration value="MATCH_RUNTIME_ERROR"/>
                    <enumeration value="MATCH_SERVICE_ERROR"/>
                    <enumeration value="MATCH_SERVICE_TIMED_OUT"/>
                    <enumeration value="MATCH_SERVICE_UNAVAILABLE_ERROR"/>
                    <enumeration value="MAXIMUM_CCEMAILS_EXCEEDED"/>
                    <enumeration value="MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED"/>
                    <enumeration value="MAXIMUM_HIERARCHY_CHILDREN_REACHED"/>
                    <enumeration value="MAXIMUM_HIERARCHY_LEVELS_REACHED"/>
                    <enumeration value="MAXIMUM_HIERARCHY_TREE_SIZE_REACHED"/>
                    <enumeration value="MAXIMUM_SIZE_OF_ATTACHMENT"/>
                    <enumeration value="MAXIMUM_SIZE_OF_DOCUMENT"/>
                    <enumeration value="MAX_ACTIONS_PER_RULE_EXCEEDED"/>
                    <enumeration value="MAX_ACTIVE_RULES_EXCEEDED"/>
                    <enumeration value="MAX_APPROVAL_STEPS_EXCEEDED"/>
                    <enumeration value="MAX_DEPTH_IN_FLOW_EXECUTION"/>
                    <enumeration value="MAX_FORMULAS_PER_RULE_EXCEEDED"/>
                    <enumeration value="MAX_LIMIT_EXCEEDED"/>
                    <enumeration value="MAX_RULES_EXCEEDED"/>
                    <enumeration value="MAX_RULE_ENTRIES_EXCEEDED"/>
                    <enumeration value="MAX_TASK_DESCRIPTION_EXCEEEDED"/>
                    <enumeration value="MAX_TM_RULES_EXCEEDED"/>
                    <enumeration value="MAX_TM_RULE_ITEMS_EXCEEDED"/>
                    <enumeration value="MAX_TRIGGERS_EXCEEDED"/>
                    <enumeration value="MERGE_FAILED"/>
                    <enumeration value="METADATA_FIELD_UPDATE_ERROR"/>
                    <enumeration value="MISSING_ARGUMENT"/>
                    <enumeration value="MISSING_RECORD"/>
                    <enumeration value="MIXED_DML_OPERATION"/>
                    <enumeration value="NONUNIQUE_SHIPPING_ADDRESS"/>
                    <enumeration value="NO_ACCESS_TOKEN"/>
                    <enumeration value="NO_ACCESS_TOKEN_FROM_REFRESH"/>
                    <enumeration value="NO_APPLICABLE_PROCESS"/>
                    <enumeration value="NO_ATTACHMENT_PERMISSION"/>
                    <enumeration value="NO_AUTH_PROVIDER"/>
                    <enumeration value="NO_INACTIVE_DIVISION_MEMBERS"/>
                    <enumeration value="NO_MASS_MAIL_PERMISSION"/>
                    <enumeration value="NO_PARTNER_PERMISSION"/>
                    <enumeration value="NO_REFRESH_TOKEN"/>
                    <enumeration value="NO_SUCH_USER_EXISTS"/>
                    <enumeration value="NO_TOKEN_ENDPOINT"/>
                    <enumeration value="NUMBER_OUTSIDE_VALID_RANGE"/>
                    <enumeration value="NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED"/>
                    <enumeration value="OPTED_OUT_OF_MASS_MAIL"/>
                    <enumeration value="OP_WITH_INVALID_USER_TYPE_EXCEPTION"/>
                    <enumeration value="PACKAGE_LICENSE_REQUIRED"/>
                    <enumeration value="PACKAGING_API_INSTALL_FAILED"/>
                    <enumeration value="PACKAGING_API_UNINSTALL_FAILED"/>
                    <enumeration value="PALI_INVALID_ACTION_ID"/>
                    <enumeration value="PALI_INVALID_ACTION_NAME"/>
                    <enumeration value="PALI_INVALID_ACTION_TYPE"/>
                    <enumeration value="PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID"/>
                    <enumeration value="PAL_INVALID_ENTITY_ID"/>
                    <enumeration value="PAL_INVALID_FLEXIPAGE_ID"/>
                    <enumeration value="PAL_INVALID_LAYOUT_ID"/>
                    <enumeration value="PAL_INVALID_PARAMETERS"/>
                    <enumeration value="PAYLOAD_SIZE_EXCEEDED"/>
                    <enumeration value="PA_API_EXCEPTION"/>
                    <enumeration value="PA_AXIS_FAULT"/>
                    <enumeration value="PA_INVALID_ID_EXCEPTION"/>
                    <enumeration value="PA_NO_ACCESS_EXCEPTION"/>
                    <enumeration value="PA_NO_DATA_FOUND_EXCEPTION"/>
                    <enumeration value="PA_URI_SYNTAX_EXCEPTION"/>
                    <enumeration value="PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION"/>
                    <enumeration value="PORTAL_NO_ACCESS"/>
                    <enumeration value="PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT"/>
                    <enumeration value="PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION"/>
                    <enumeration value="PRIVATE_CONTACT_ON_ASSET"/>
                    <enumeration value="PROCESSING_HALTED"/>
                    <enumeration value="QA_INVALID_CREATE_FEED_ITEM"/>
                    <enumeration value="QA_INVALID_SUCCESS_MESSAGE"/>
                    <enumeration value="QUERY_TIMEOUT"/>
                    <enumeration value="QUICK_ACTION_LIST_ITEM_NOT_ALLOWED"/>
                    <enumeration value="QUICK_ACTION_LIST_NOT_ALLOWED"/>
                    <enumeration value="RECORD_IN_USE_BY_WORKFLOW"/>
                    <enumeration value="REL_FIELD_BAD_ACCESSIBILITY"/>
                    <enumeration value="REPUTATION_MINIMUM_NUMBER_NOT_REACHED"/>
                    <enumeration value="REQUEST_RUNNING_TOO_LONG"/>
                    <enumeration value="REQUIRED_FEATURE_MISSING"/>
                    <enumeration value="REQUIRED_FIELD_MISSING"/>
                    <enumeration value="RETRIEVE_EXCHANGE_ATTACHMENT_FAILED"/>
                    <enumeration value="RETRIEVE_EXCHANGE_EMAIL_FAILED"/>
                    <enumeration value="RETRIEVE_EXCHANGE_EVENT_FAILED"/>
                    <enumeration value="RETRIEVE_GOOGLE_EMAIL_FAILED"/>
                    <enumeration value="RETRIEVE_GOOGLE_EVENT_FAILED"/>
                    <enumeration value="RETRIEVE_USER_CONFIG_ERROR"/>
                    <enumeration value="SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR"/>
                    <enumeration value="SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR"/>
                    <enumeration value="SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR"/>
                    <enumeration value="SELF_REFERENCE_FROM_FLOW"/>
                    <enumeration value="SELF_REFERENCE_FROM_TRIGGER"/>
                    <enumeration value="SHARE_NEEDED_FOR_CHILD_OWNER"/>
                    <enumeration value="SINGLE_EMAIL_LIMIT_EXCEEDED"/>
                    <enumeration value="SOCIAL_ACCOUNT_NOT_FOUND"/>
                    <enumeration value="SOCIAL_ACTION_INVALID"/>
                    <enumeration value="SOCIAL_PERSONA_NOT_FOUND"/>
                    <enumeration value="SOCIAL_POST_INVALID"/>
                    <enumeration value="SOCIAL_POST_NOT_FOUND"/>
                    <enumeration value="STANDARD_PRICE_NOT_DEFINED"/>
                    <enumeration value="STORAGE_LIMIT_EXCEEDED"/>
                    <enumeration value="STRING_TOO_LONG"/>
                    <enumeration value="SUBDOMAIN_IN_USE"/>
                    <enumeration value="TABSET_LIMIT_EXCEEDED"/>
                    <enumeration value="TEMPLATE_NOT_ACTIVE"/>
                    <enumeration value="TEMPLATE_NOT_FOUND"/>
                    <enumeration value="TERMS_OF_SERVICE_UNREAD"/>
                    <enumeration value="TERRITORY_REALIGN_IN_PROGRESS"/>
                    <enumeration value="TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET"/>
                    <enumeration value="TOO_MANY_APEX_REQUESTS"/>
                    <enumeration value="TOO_MANY_ENUM_VALUE"/>
                    <enumeration value="TOO_MANY_POSSIBLE_USERS_EXIST"/>
                    <enumeration value="TRANSFER_REQUIRES_READ"/>
                    <enumeration value="UNABLE_TO_LOCK_ROW"/>
                    <enumeration value="UNAVAILABLE_RECORDTYPE_EXCEPTION"/>
                    <enumeration value="UNAVAILABLE_REF"/>
                    <enumeration value="UNDELETE_FAILED"/>
                    <enumeration value="UNKNOWN_EXCEPTION"/>
                    <enumeration value="UNKNOWN_TOKEN_ERROR"/>
                    <enumeration value="UNSAFE_HTML_CONTENT"/>
                    <enumeration value="UNSPECIFIED_EMAIL_ADDRESS"/>
                    <enumeration value="UNSUPPORTED_APEX_TRIGGER_OPERATON"/>
                    <enumeration value="UNSUPPORTED_SOCIAL_PROVIDER"/>
                    <enumeration value="UNVERIFIED_SENDER_ADDRESS"/>
                    <enumeration value="UPDATE_GOOGLE_EMAIL_LABEL_FAILED"/>
                    <enumeration value="USER_OWNS_PORTAL_ACCOUNT_EXCEPTION"/>
                    <enumeration value="USER_WITH_APEX_SHARES_EXCEPTION"/>
                    <enumeration value="VF_COMPILE_ERROR"/>
                    <enumeration value="WEBLINK_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="WEBLINK_URL_INVALID"/>
                    <enumeration value="WRONG_CONTROLLER_TYPE"/>
                    <enumeration value="XCLEAN_UNEXPECTED_ERROR"/>
                </restriction>
            </simpleType>
            <!-- These are the extension code to provide additional error information -->
            <simpleType name="ExtendedErrorCode">
                <restriction base="xsd:string">
                    <enumeration value="ACTIONCALL_DUPLICATE_INPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_DUPLICATE_OUTPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_MISSING_REQUIRED_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_MISSING_REQUIRED_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_INPUT_DUPLICATE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_MISSING_CLASSNAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_OUTPUT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_REQUIRED_INPUT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCLASS_MISSING_INTERFACE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parentScreenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, assignmentName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_FIELD_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldValue, dataType, incompatibleDataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, acceptedDataType, dataType, fieldValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, leftElementName, leftElementType, rightElementName, rightElementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INVALID_COLLECTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, leftElementName, rightElementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, incompatibleDataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, dataType, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_MODIFIES_NONVARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_NONEXISTENT_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceLookupName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_CHOICE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_SCREEN_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_STEP_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_WAIT_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICEFIELD_MISSING_CHOICE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: questionName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName, parentScreenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName, parentScreenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, screenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_DATATYPE_INCOMPATIBLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: leftElementName, leftElementType, operatorName, rightElementName, rightElementType, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_DATATYPE_INCOMPATIBLE_WITH_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, operatorName, parameterName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_ELEMENT_DATATYPES_INCOMPATIBLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, leftElementType, operatorName, rightElementType, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_INVALID_LEFTOPERAND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_INVALID_LEFT_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, operatorName, parameterName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_LOGIC_EXCEEDS_LIMIT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_LOGIC_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_LOGIC_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, operatorName, parameterName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_MISSING_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_REFERENCED_ELEMENT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_RIGHTOPERAND_NULL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONNECTOR_MISSING_TARGET">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONSTANT_INCLUDES_REFERENCES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: constantName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENTS_NOT_ENABLED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_OBJECTTYPE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DATATYPE_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DATATYPE_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DECISION_DEFAULT_CONNECTOR_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowDecision</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DECISION_MISSING_OUTCOME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowDecision</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_CONNECTS_TO_SELF">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_COORDINATES_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: coordinateLimit, coordinateName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_INVALID_CONNECTOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_CONNECTOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: characterLimit, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MORE_THAN_ONE_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_NAME_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_NEVER_USED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="EXTERNAL_OBJECTS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldReference</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, assignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_INVALID_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, dataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELD_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELD_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName, fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELD_RELATIONSHIP_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldRelationshipName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, errorIdentifier, errorParams</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, maxLength</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, criterionIndex</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, invalidValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLOW_INCLUDES_STEP">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLOW_NAME_USED_IN_OTHER_CLIENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FORMULA_EXPRESSION_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: formulaExpression</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INVALID_FLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INVALID_SURVEY_VARIABLE_NAME_OR_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldRelationshipName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_COLLECTION_ELEMENT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_COLLECTION_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_MISSING_COLLECTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECTTYPE_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_CREATED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_DELETED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_QUERIED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_UPDATED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PARAM_DATATYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType, metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSTYPE_ELEMENT_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSTYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, assignmentName, elementName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDUPDATE_MISSING_FILTERS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="REFERENCED_ELEMENT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, mergeFieldReference</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RULE_MISSING_CONDITION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: dataType, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_INVALID_ATTRIBUTE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, attributeName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, attributeName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, acceptedValues, actionValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_MISSING_ATTRIBUTE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_MISSING_FIELDREFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_MISSING_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, attributeName, fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, fieldValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_MISSING_ACTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_NOT_SUPPORTED_IN_ORG">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_SCREENFIELD_NOT_VISIBLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, requiredField</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, otherFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, fieldValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType, sobjectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_FIELD_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: sortOrder</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_FIELD_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_LIMIT_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: maxLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_ORDER_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, fieldType, requiedField</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="START_ELEMENT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_ELEMENT_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MISMATCHED_COLLECTIONTYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MISMATCHED_OBJECTS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: inputVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: inputVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VALUE_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INVALID_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parentFlowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_NO_ACTIVE_VERSION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISMATCHED_OBJECTS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: outputAssignment</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: outputVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: outputAssignment</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, outputAssignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, variableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, variableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_REFERENCES_MASTERFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_INACTIVE_SUBFLOWS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_MISSING_QUESTION_OR_SUBFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_MISSING_REQUIRED_VARIABLES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_NESTED_SUBFLOWS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_NONSURVEY_SUBFLOWS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_START_ELEMENT_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_VARIABLE_ACCESS_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="UNEXPECTED_ERROR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VALUE_CHAR_LIMIT_EXCEEDED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, datatype</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, datatype</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_FIELD_REQUIRED_FOR_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: datatype, fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_SCALE_EXCEEDS_LIMIT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_SCALE_NEGATIVE_INTEGER">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_SCALE_NULL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_DUPLICATE_INPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, inputParameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_INVALID_CONDITION_LOGIC">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_MISSING_CONNECTOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_MISSING_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, outputParameter</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, inputParameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_REQUIRED_INPUT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_MISSING_PROCESSMETADATAVALUES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTTYPE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTTYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectVariableName, oldObjectVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType, objectVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType, oldObjectVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_TRIGGERTYPE_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                </restriction>
            </simpleType>


            <complexType name="ExtendedErrorDetails">
                <sequence>
                    <element name="extendedErrorCode" type="tns:ExtendedErrorCode"/>
                    <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
                </sequence>
            </complexType>
            <complexType name="Error">
                <sequence>
                    <element name="extendedErrorDetails" type="tns:ExtendedErrorDetails" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="fields" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="message" type="xsd:string"/>
                    <element name="statusCode" type="tns:StatusCode"/>
                </sequence>
            </complexType>

            <complexType name="SendEmailError">
                <sequence>
                    <element name="fields" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="message" type="xsd:string"/>
                    <element name="statusCode" type="tns:StatusCode"/>
                    <element name="targetObjectId" type="tns:ID" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="SaveResult">
                <sequence>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="RenderEmailTemplateError">
                <sequence>
                    <element name="fieldName" type="xsd:string"/>
                    <element name="message" type="xsd:string"/>
                    <element name="offset" type="xsd:int"/>
                    <element name="statusCode" type="tns:StatusCode"/>
                </sequence>
            </complexType>

            <complexType name="UpsertResult">
                <sequence>
                    <element name="created" type="xsd:boolean"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="PerformQuickActionResult">
                <sequence>
                    <element name="contextId" type="tns:ID" minOccurs="0" nillable="true"/>
                    <element name="created" type="xsd:boolean"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="feedItemIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                    <element name="ids" type="tns:ID" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                    <element name="successMessage" type="xsd:string" minOccurs="0" nillable="true"/>
                </sequence>
            </complexType>


            <complexType name="QuickActionTemplateResult">
                <sequence>
                    <element name="defaultValueFormulas" type="ens:sObject" nillable="true"/>
                    <element name="defaultValues" type="ens:sObject" nillable="true"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="MergeRequest">
                <sequence>
                    <element name="additionalInformationMap" minOccurs="0" maxOccurs="unbounded" type="tns:AdditionalInformationMap"/>
                    <element name="masterRecord" type="ens:sObject"/>
                    <element name="recordToMergeIds" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="MergeResult">
                <sequence>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID" nillable="true"/>
                    <element name="mergedRecordIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success" type="xsd:boolean"/>
                    <element name="updatedRelatedIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="ProcessRequest">
                <sequence>
                    <element name="comments" type="xsd:string" nillable="true"/>
                    <element name="nextApproverIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="ProcessSubmitRequest">
                <complexContent>
                    <extension base="tns:ProcessRequest">
                        <sequence>
                            <element name="objectId" type="tns:ID"/>
                            <element name="submitterId" type="tns:ID" nillable="true"/>
                            <element name="processDefinitionNameOrId" type="xsd:string" nillable="true"/>
                            <element name="skipEntryCriteria" type="xsd:boolean" nillable="true"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessWorkitemRequest">
                <complexContent>
                    <extension base="tns:ProcessRequest">
                        <sequence>
                            <element name="action" type="xsd:string"/>
                            <element name="workitemId" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <complexType name="PerformQuickActionRequest">
                <sequence>
                    <element name="contextId" type="tns:ID" nillable="true"/>                    <element name="quickActionName" type="xsd:string"/>
                    <element name="records" type="ens:sObject" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                </sequence>
            </complexType>


            <complexType name="DescribeAvailableQuickActionResult">
                <sequence>
                    <element name="actionEnumOrId" type="xsd:string"/> 
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="type" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeQuickActionResult">
                <sequence>
                    <element name="accessLevelRequired" type="tns:ShareAccessLevel" nillable="true"/> 
                    <element name="actionEnumOrId" type="xsd:string"/> 
                    <element name="canvasApplicationId" type="tns:ID" nillable="true"/>
                    <element name="canvasApplicationName" type="xsd:string" nillable="true"/>
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/> 
                    <element name="contextSobjectType" type="xsd:string" nillable="true"/> 
                    <element name="defaultValues" type="tns:DescribeQuickActionDefaultValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="height" type="xsd:int" nillable="true"/>
                    <element name="iconName" type="xsd:string" nillable="true"/>
                    <element name="iconUrl" type="xsd:string" nillable="true"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="layout" type="tns:DescribeLayoutSection" nillable="true"/>
                    <element name="lightningComponentBundleId" type="tns:ID" nillable="true"/>
                    <element name="lightningComponentBundleName" type="xsd:string" nillable="true"/>
                    <element name="lightningComponentQualifiedName" type="xsd:string" nillable="true"/>
                    <element name="miniIconUrl" type="xsd:string" nillable="true"/>
                    <element name="name" type="xsd:string"/>
                    <element name="showQuickActionLcHeader" type="xsd:boolean"/> 
                    <element name="showQuickActionVfHeader" type="xsd:boolean"/> 
                                        <element name="targetParentField" type="xsd:string" nillable="true"/>
                    <element name="targetRecordTypeId" type="tns:ID" nillable="true"/>
                    <element name="targetSobjectType" type="xsd:string" nillable="true"/>
                    <element name="type" type="xsd:string"/>
                    <element name="visualforcePageName" type="xsd:string" nillable="true"/>
                    <element name="visualforcePageUrl" type="xsd:string" nillable="true"/> 
                    <element name="width" type="xsd:int" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="DescribeQuickActionDefaultValue">
                <sequence>
                    <element name="defaultValue" type="xsd:string" nillable="true"/>
                    <element name="field" type="xsd:string" nillable="false"/>
                </sequence>
            </complexType>



        <complexType name="DescribeVisualForceResult">
            <sequence>
                <element name="domain" type="xsd:string"/>
            </sequence>
        </complexType>


            <simpleType name="ShareAccessLevel">
                <restriction base="xsd:string">
                    <enumeration value="Read"/>
                    <enumeration value="Edit"/>
                    <enumeration value="All"/>
                </restriction>
            </simpleType>




            <complexType name="ProcessResult">
                <sequence>
                    <element name="actorIds" type="tns:ID" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="entityId" type="tns:ID" nillable="true"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="instanceId" type="tns:ID" nillable="true"/>
                    <element name="instanceStatus" type="xsd:string" nillable="true"/>
                    <element name="newWorkitemIds" type="tns:ID" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>





            <complexType name="DeleteResult">
                <sequence>
                    <element name="errors" type="tns:Error" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="UndeleteResult">
                <sequence>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="EmptyRecycleBinResult">
                <sequence>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="LeadConvert">
                <sequence>
                    <element name="accountId" type="tns:ID" nillable="true"/>
                    <element name="contactId" type="tns:ID" nillable="true"/>
                    <element name="convertedStatus" type="xsd:string"/>
                    <element name="doNotCreateOpportunity" type="xsd:boolean"/>
                    <element name="leadId" type="tns:ID"/>
                    <element name="opportunityId" type="tns:ID" nillable="true"/>
                    <element name="opportunityName" type="xsd:string" nillable="true"/>
                    <element name="overwriteLeadSource" type="xsd:boolean"/>
                    <element name="ownerId" type="tns:ID" nillable="true"/>
                    <element name="sendNotificationEmail" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="LeadConvertResult">
                <sequence>
                    <element name="accountId" type="tns:ID" nillable="true"/>
                    <element name="contactId" type="tns:ID" nillable="true"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="leadId" type="tns:ID" nillable="true"/>
                    <element name="opportunityId" type="tns:ID" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>



            <complexType name="DescribeSObjectResult">
                <sequence>
                    <element name="actionOverrides" type="tns:ActionOverride" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="activateable" type="xsd:boolean"/>
                    <element name="childRelationships" type="tns:ChildRelationship" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="compactLayoutable" type="xsd:boolean"/>
                    <element name="createable" type="xsd:boolean"/>
                    <element name="custom" type="xsd:boolean"/>
                    <element name="customSetting" type="xsd:boolean"/>
                    <element name="deletable" type="xsd:boolean"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="feedEnabled" type="xsd:boolean"/>
                    <element name="fields" type="tns:Field" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="hasSubtypes" type="xsd:boolean"/>
                    <element name="idEnabled" type="xsd:boolean"/>
                    <element name="isSubtype" type="xsd:boolean"/>
                    <element name="keyPrefix" type="xsd:string" nillable="true"/>
                    <element name="label" type="xsd:string"/>
                    <element name="labelPlural" type="xsd:string"/>
                    <element name="layoutable" type="xsd:boolean"/>
                    <element name="mergeable" type="xsd:boolean"/>
                    <element name="mruEnabled" type="xsd:boolean"/>
                    <element name="name" type="xsd:string"/>
                    <element name="namedLayoutInfos" type="tns:NamedLayoutInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="networkScopeFieldName" type="xsd:string" nillable="true"/>
                    <element name="queryable" type="xsd:boolean"/>
                    <element name="recordTypeInfos" type="tns:RecordTypeInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="replicateable" type="xsd:boolean"/>
                    <element name="retrieveable" type="xsd:boolean"/>
                    <element name="searchLayoutable" type="xsd:boolean" minOccurs="0"/>
                    <element name="searchable" type="xsd:boolean"/>
                    <element name="supportedScopes" type="tns:ScopeInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="triggerable" type="xsd:boolean" minOccurs="0"/>
                    <element name="undeletable" type="xsd:boolean"/>
                    <element name="updateable" type="xsd:boolean"/>
                    <element name="urlDetail" type="xsd:string" nillable="true"/>
                    <element name="urlEdit" type="xsd:string" nillable="true"/>
                    <element name="urlNew" type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>



            <!-- this is a subset of properties for each SObject that is returned by the describeGlobal call -->
            <complexType name="DescribeGlobalSObjectResult">
                <sequence>
                    <element name="activateable" type="xsd:boolean"/>
                    <element name="createable" type="xsd:boolean"/>
                    <element name="custom" type="xsd:boolean"/>
                    <element name="customSetting" type="xsd:boolean"/>
                    <element name="deletable" type="xsd:boolean"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="feedEnabled" type="xsd:boolean"/>
                    <element name="hasSubtypes" type="xsd:boolean"/>
                    <element name="idEnabled" type="xsd:boolean"/>
                    <element name="isSubtype" type="xsd:boolean"/>
                    <element name="keyPrefix" type="xsd:string" nillable="true"/>
                    <element name="label" type="xsd:string"/>
                    <element name="labelPlural" type="xsd:string"/>
                    <element name="layoutable" type="xsd:boolean"/>
                    <element name="mergeable" type="xsd:boolean"/>
                    <element name="mruEnabled" type="xsd:boolean"/>
                    <element name="name" type="xsd:string"/>
                    <element name="queryable" type="xsd:boolean"/>
                    <element name="replicateable" type="xsd:boolean"/>
                    <element name="retrieveable" type="xsd:boolean"/>
                    <element name="searchable" type="xsd:boolean"/>
                    <element name="triggerable" type="xsd:boolean"/>
                    <element name="undeletable" type="xsd:boolean"/>
                    <element name="updateable" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="ChildRelationship">
                <sequence>
                    <element name="cascadeDelete" type="xsd:boolean"/>
                    <element name="childSObject" type="xsd:string"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="field" type="xsd:string"/>
                    <element name="junctionIdListNames" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="junctionReferenceTo" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="relationshipName" type="xsd:string" minOccurs="0"/>
                    <element name="restrictedDelete" type="xsd:boolean" minOccurs="0"/>
                </sequence>
            </complexType>

            <complexType name="DescribeGlobalResult">
                <sequence>
                    <element name="encoding" type="xsd:string" nillable="true"/>
                    <element name="maxBatchSize" type="xsd:int"/>
                    <element name="sobjects" type="tns:DescribeGlobalSObjectResult" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>


            <complexType name="DescribeGlobalTheme">
                <sequence>
                    <element name="global" type="tns:DescribeGlobalResult"/>
                    <element name="theme" type="tns:DescribeThemeResult"/>
                </sequence>
            </complexType>



            <complexType name="ScopeInfo">
                <sequence>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>



           


        <simpleType name="fieldType">
                <restriction base="xsd:string">
                    <enumeration value="string"/>
                    <enumeration value="picklist"/>
                    <enumeration value="multipicklist"/>
                    <enumeration value="combobox"/>
                    <enumeration value="reference"/>
                    <enumeration value="base64"/>
                    <enumeration value="boolean"/>
                    <enumeration value="currency"/>
                    <enumeration value="textarea"/>
                    <enumeration value="int"/>
                    <enumeration value="double"/>
                    <enumeration value="percent"/>
                    <enumeration value="phone"/>
                    <enumeration value="id"/>
                    <enumeration value="date"/>
                    <enumeration value="datetime"/>
                    <enumeration value="time"/>
                    <enumeration value="url"/>
                    <enumeration value="email"/>
                    <enumeration value="encryptedstring"/>
                    <enumeration value="datacategorygroupreference"/>
                    <enumeration value="location"/>
                    <enumeration value="address"/>
                    <enumeration value="anyType"/> <!-- can be string, picklist, reference, boolean, currency, int, double, percent, id, date, datetime, url, email -->


                    <enumeration value="complexvalue"/>

                </restriction>
            </simpleType>

            <simpleType name="soapType">
                <restriction base="xsd:string">
                    <enumeration value="tns:ID"/>
                    <enumeration value="xsd:base64Binary"/>
                    <enumeration value="xsd:boolean"/>
                    <enumeration value="xsd:double"/>
                    <enumeration value="xsd:int"/>
                    <enumeration value="xsd:string"/>
                    <enumeration value="xsd:date"/>
                    <enumeration value="xsd:dateTime"/>
                    <enumeration value="xsd:time"/>

                    <enumeration value="tns:location"/>
                    <enumeration value="tns:address"/>

                    <enumeration value="xsd:anyType"/> <!-- can be id, booolean, double, int, string, date, dateTime -->


                    <enumeration value="urn:RelationshipReferenceTo"/>


                    <enumeration value="urn:JunctionIdListNames"/>


                    <enumeration value="urn:SearchLayoutFieldsDisplayed"/>
                    <enumeration value="urn:SearchLayoutField"/>
                    <enumeration value="urn:SearchLayoutButtonsDisplayed"/>
                    <enumeration value="urn:SearchLayoutButton"/>


                    <enumeration value="urn:RecordTypesSupported"/>






                </restriction>
            </simpleType>

            <complexType name="FilteredLookupInfo">
                        <sequence>
                            <element name="controllingFields" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            <element name="dependent" type="xsd:boolean"/>
                            <element name="optionalFilter" type="xsd:boolean"/>

                        </sequence>
            </complexType>

            <complexType name="Field">
                <sequence>
                    <element name="aggregatable" type="xsd:boolean"/>
                    <element name="autoNumber" type="xsd:boolean"/>
                    <element name="byteLength" type="xsd:int"/>
                    <element name="calculated" type="xsd:boolean"/>
                    <element name="calculatedFormula" type="xsd:string" minOccurs="0"/>
                    <element name="cascadeDelete" type="xsd:boolean" minOccurs="0"/>
                    <element name="caseSensitive" type="xsd:boolean"/>
                    <element name="compoundFieldName" type="xsd:string" minOccurs="0"/>
                    <element name="controllerName" type="xsd:string" minOccurs="0"/>
                    <element name="createable" type="xsd:boolean"/>
                    <element name="custom" type="xsd:boolean"/>
                    <element name="defaultValue" type="xsd:anyType" minOccurs="0"/>
                    <element name="defaultValueFormula" type="xsd:string" minOccurs="0"/>
                    <element name="defaultedOnCreate" type="xsd:boolean"/>
                    <element name="dependentPicklist" type="xsd:boolean" minOccurs="0"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="digits" type="xsd:int"/>
                    <element name="displayLocationInDecimal" type="xsd:boolean" minOccurs="0"/>
                    <element name="encrypted" type="xsd:boolean" minOccurs="0"/>
                    <element name="externalId" type="xsd:boolean" minOccurs="0"/>
                    <element name="extraTypeInfo" type="xsd:string" minOccurs="0"/>
                    <element name="filterable" type="xsd:boolean"/>

                    <element name="filteredLookupInfo" type="tns:FilteredLookupInfo" nillable="true" minOccurs="0"/>

                    <element name="groupable" type="xsd:boolean"/>
                    <element name="highScaleNumber" type="xsd:boolean" minOccurs="0"/>
                    <element name="htmlFormatted" type="xsd:boolean" minOccurs="0"/>
                    <element name="idLookup" type="xsd:boolean"/>
                    <element name="inlineHelpText" type="xsd:string" minOccurs="0"/>
                    <element name="label" type="xsd:string"/>
                    <element name="length" type="xsd:int"/>
                    <element name="mask" type="xsd:string" minOccurs="0"/>
                    <element name="maskType" type="xsd:string" minOccurs="0"/>
                    <element name="name" type="xsd:string"/>
                    <element name="nameField" type="xsd:boolean"/>
                    <element name="namePointing" type="xsd:boolean" minOccurs="0"/>
                    <element name="nillable" type="xsd:boolean"/>
                    <element name="permissionable" type="xsd:boolean"/>
                    <element name="picklistValues" type="tns:PicklistEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                 <element name="polymorphicForeignKey" type="xsd:boolean"/>
                    <element name="precision" type="xsd:int"/>
                    <element name="queryByDistance" type="xsd:boolean"/>
                    <element name="referenceTargetField" type="xsd:string" minOccurs="0"/>
                    <element name="referenceTo" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="relationshipName" type="xsd:string" minOccurs="0"/>
                    <element name="relationshipOrder" type="xsd:int" minOccurs="0"/>
                    <element name="restrictedDelete" type="xsd:boolean" minOccurs="0"/>
                    <element name="restrictedPicklist" type="xsd:boolean"/>
                    <element name="scale" type="xsd:int"/>
                    <element name="searchPrefilterable" type="xsd:boolean"/>
                    <element name="soapType" type="tns:soapType"/>
                    <element name="sortable" type="xsd:boolean" minOccurs="0"/>
                    <element name="type" type="tns:fieldType"/>
                    <element name="unique" type="xsd:boolean"/>
                    <element name="updateable" type="xsd:boolean"/>
                    <element name="writeRequiresMasterRead" type="xsd:boolean" minOccurs="0"/>
                </sequence>
            </complexType>

            <complexType name="PicklistEntry">
                <sequence>
                    <element name="active" type="xsd:boolean"/>
                    <element name="defaultValue" type="xsd:boolean"/>
                    <element name="label" type="xsd:string" nillable="true"/>
                    <element name="validFor" type="xsd:base64Binary" minOccurs="0"/>
                    <element name="value" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeDataCategoryGroupResult">
                <sequence>
                    <element name="categoryCount" type="xsd:int"/>
                    <element name="description" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="sobject" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeDataCategoryGroupStructureResult">
                <sequence>
                    <element name="description" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="sobject" type="xsd:string"/>
                    <element name="topCategories" type="tns:DataCategory" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DataCategoryGroupSobjectTypePair">
                <sequence>
                    <element name="dataCategoryGroupName" type="xsd:string"/>
                    <element name="sobject" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DataCategory">
                <sequence>
                    <element name="childCategories" type="tns:DataCategory" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="KnowledgeSettings">
                   <sequence>
                       <element name="defaultLanguage" type="xsd:string" minOccurs="0"/>
                       <element name="knowledgeEnabled" type="xsd:boolean"/>
                       <element name="languages" type="tns:KnowledgeLanguageItem" minOccurs="0" maxOccurs="unbounded"/>
                   </sequence>
            </complexType>

            <complexType name="KnowledgeLanguageItem">
                   <sequence>
                       <element name="active" type="xsd:boolean"/>
                       <element name="name" type="xsd:string"/>
                   </sequence>
            </complexType>


            <simpleType name="differenceType">
                   <restriction base="xsd:string">
                       <enumeration value="DIFFERENT"/>
                       <enumeration value="NULL"/>
                       <enumeration value="SAME"/>
                       <enumeration value="SIMILAR"/>
                   </restriction>
            </simpleType>

            <complexType name="FieldDiff">
                   <sequence>
                       <element name="difference" type="tns:differenceType" nillable="false" minOccurs="1" maxOccurs="1"/>
                       <element name="name" type="xsd:string"/>
                   </sequence>
            </complexType>

            <complexType name="AdditionalInformationMap">
                   <sequence>
                       <element name="name" type="xsd:string"/>
                       <element name="value" type="xsd:string"/>
                   </sequence>
            </complexType>

            <complexType name="MatchRecord">
                   <sequence>
                       <element name="additionalInformation" minOccurs="0" maxOccurs="unbounded" type="tns:AdditionalInformationMap"/>
                       <element name="fieldDiffs" minOccurs="0" maxOccurs="unbounded" type="tns:FieldDiff"/>
                       <element name="matchConfidence" type="xsd:double"/>
                       <element name="record" type="ens:sObject"/>
                   </sequence>
            </complexType>

            <complexType name="MatchResult">
                   <sequence>
                       <element name="entityType" type="xsd:string"/>
                       <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                       <element name="matchEngine" type="xsd:string"/>
                       <element name="matchRecords" minOccurs="0" maxOccurs="unbounded" type="tns:MatchRecord"/>
                       <element name="rule" type="xsd:string"/>
                       <element name="size" type="xsd:int"/>
                       <element name="success" type="xsd:boolean"/>
                   </sequence>
            </complexType>

            <complexType name="DuplicateResult">
                   <sequence>
                       <element name="allowSave" type="xsd:boolean"/>
                       <element name="duplicateRule" type="xsd:string"/>
                       <element name="duplicateRuleEntityType" type="xsd:string"/>
                       <element name="errorMessage" type="xsd:string" nillable="true"/>
                       <element name="matchResults" minOccurs="0" maxOccurs="unbounded" type="tns:MatchResult"/>
                   </sequence>
            </complexType>

            <complexType name="DuplicateError">
                <complexContent>
                    <extension base="tns:Error">
                        <sequence>
                          <element name="duplicateResult" type="tns:DuplicateResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <complexType name="DescribeNounResult">
                <sequence>
                     <element name="caseValues" minOccurs="0" maxOccurs="unbounded" type="tns:NameCaseValue"/>
                       <element name="developerName" type="xsd:string"/>
                    <element name="gender" nillable="true" type="tns:Gender"/>
                       <element name="name" type="xsd:string"/>
                       <element name="pluralAlias" type="xsd:string" nillable="true"/>
                    <element name="startsWith" nillable="true" type="tns:StartsWith"/>
                </sequence>
            </complexType>

           <complexType name="NameCaseValue">
                <sequence>
                     <element name="article" nillable="true" type="tns:Article"/>
                     <element name="caseType" nillable="true" type="tns:CaseType"/>
                     <element name="number" nillable="true" type="tns:GrammaticalNumber"/>
                     <element name="possessive" nillable="true" type="tns:Possessive"/>
                     <element name="value" nillable="true" type="xsd:string"/>
                </sequence>
           </complexType>

            <simpleType name="Article">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="Indefinite"/>
                    <enumeration value="Definite"/>
                </restriction>
            </simpleType>
            <simpleType name="CaseType">
                <restriction base="xsd:string">
                    <enumeration value="Nominative"/>
                    <enumeration value="Accusative"/>
                    <enumeration value="Genitive"/>
                    <enumeration value="Dative"/>
                    <enumeration value="Inessive"/>
                    <enumeration value="Elative"/>
                    <enumeration value="Illative"/>
                    <enumeration value="Adessive"/>
                    <enumeration value="Ablative"/>
                    <enumeration value="Allative"/>
                    <enumeration value="Essive"/>
                    <enumeration value="Translative"/>
                    <enumeration value="Partitive"/>
                    <enumeration value="Objective"/>
                    <enumeration value="Subjective"/>
                    <enumeration value="Instrumental"/>
                    <enumeration value="Prepositional"/>
                    <enumeration value="Locative"/>
                    <enumeration value="Vocative"/>
                    <enumeration value="Sublative"/>
                    <enumeration value="Superessive"/>
                    <enumeration value="Delative"/>
                    <enumeration value="Causalfinal"/>
                    <enumeration value="Essiveformal"/>
                    <enumeration value="Termanative"/>
                    <enumeration value="Distributive"/>
                    <enumeration value="Ergative"/>
                    <enumeration value="Adverbial"/>
                    <enumeration value="Abessive"/>
                    <enumeration value="Comitative"/>
                </restriction>
            </simpleType>
            <simpleType name="Gender">
                <restriction base="xsd:string">
                    <enumeration value="Neuter"/>
                    <enumeration value="Masculine"/>
                    <enumeration value="Feminine"/>
                    <enumeration value="AnimateMasculine"/>
                </restriction>
            </simpleType>
            <simpleType name="GrammaticalNumber">
                <restriction base="xsd:string">
                    <enumeration value="Singular"/>
                    <enumeration value="Plural"/>
                </restriction>
            </simpleType>
            <simpleType name="Possessive">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="First"/>
                    <enumeration value="Second"/>
                </restriction>
            </simpleType>
            <simpleType name="StartsWith">
                <restriction base="xsd:string">
                    <enumeration value="Consonant"/>
                    <enumeration value="Vowel"/>
                    <enumeration value="Special"/>
                </restriction>
            </simpleType>





            <element name="findDuplicates">
                <complexType>
                    <sequence>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="findDuplicatesByIds">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="findDuplicatesByIdsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:FindDuplicatesResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="findDuplicatesResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:FindDuplicatesResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <complexType name="FindDuplicatesResult">
                <sequence>
                    <element name="duplicateResults" type="tns:DuplicateResult" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>



            <complexType name="DescribeAppMenuResult">
                <sequence>
                    <element name="appMenuItems" type="tns:DescribeAppMenuItem" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeAppMenuItem">
                <sequence>
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="content" type="xsd:string"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="type" type="xsd:string"/>
                    <element name="url" type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="DescribeThemeResult">
                <sequence>
                    <element name="themeItems" type="tns:DescribeThemeItem" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeThemeItem">
                <sequence>
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutResult">
                <sequence>
                    <element name="callTypes" type="tns:DescribeSoftphoneLayoutCallType" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutCallType">
                <sequence>
                    <element name="infoFields" type="tns:DescribeSoftphoneLayoutInfoField" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="name" type="xsd:string"/>
                    <element name="screenPopOptions" type="tns:DescribeSoftphoneScreenPopOption" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="screenPopsOpenWithin" type="xsd:string" minOccurs="0"/>
                    <element name="sections" type="tns:DescribeSoftphoneLayoutSection" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneScreenPopOption">
                <sequence>
                    <element name="matchType" type="xsd:string"/>
                    <element name="screenPopData" type="xsd:string"/>
                    <element name="screenPopType" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutInfoField">
                <sequence>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutSection">
                <sequence>
                    <element name="entityApiName" type="xsd:string"/>
                    <element name="items" type="tns:DescribeSoftphoneLayoutItem" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutItem">
                <sequence>
                    <element name="itemApiName" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeCompactLayoutsResult">
                <sequence>
                    <element name="compactLayouts" type="tns:DescribeCompactLayout" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="defaultCompactLayoutId" type="tns:ID"/>
                    <element name="recordTypeCompactLayoutMappings" type="tns:RecordTypeCompactLayoutMapping" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeCompactLayout">
                <sequence>
                    <element name="actions" type="tns:DescribeLayoutButton" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="fieldItems" type="tns:DescribeLayoutItem" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID"/>
                    <element name="imageItems" type="tns:DescribeLayoutItem" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="objectType" type="xsd:string"/> 
                </sequence>
            </complexType>

            <complexType name="RecordTypeCompactLayoutMapping">
                <sequence>
                    <element name="available" type="xsd:boolean"/>
                    <element name="compactLayoutId" type="tns:ID" nillable="true"/>
                    <element name="compactLayoutName" type="xsd:string"/>
                    <element name="recordTypeId" type="tns:ID"/>
                    <element name="recordTypeName" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribePathAssistantsResult">
                <sequence>
                    <element name="pathAssistants" type="tns:DescribePathAssistant" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribePathAssistant">
                <sequence>
                    <element name="active" type="xsd:boolean"/>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="pathPicklistField" type="xsd:string"/>
                    <element name="picklistsForRecordType" type="tns:PicklistForRecordType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="recordTypeId" type="tns:ID" nillable="true"/>
                    <element name="steps" type="tns:DescribePathAssistantStep" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribePathAssistantStep">
                <sequence>
                    <element name="closed" type="xsd:boolean"/>
                    <element name="converted" type="xsd:boolean"/>
                    <element name="fields" type="tns:DescribePathAssistantField" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="info" type="xsd:string"/>
                    <element name="layoutSection" type="tns:DescribeLayoutSection"/>
                    <element name="picklistLabel" type="xsd:string"/>
                    <element name="picklistValue" type="xsd:string"/>
                    <element name="won" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="DescribePathAssistantField">
                <sequence>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="readOnly" type="xsd:boolean"/>
                    <element name="required" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="DescribeApprovalLayoutResult">
                <sequence>
                    <element name="approvalLayouts" type="tns:DescribeApprovalLayout" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeApprovalLayout">
                <sequence>
                    <element name="id" type="tns:ID"/>
                    <element name="label" type="xsd:string"/>
                    <element name="layoutItems" type="tns:DescribeLayoutItem" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="DescribeLayoutResult">
                <sequence>
                    <element name="layouts" type="tns:DescribeLayout" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="recordTypeMappings" type="tns:RecordTypeMapping" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="recordTypeSelectorRequired" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="DescribeLayout">
                <sequence>
                    <element name="buttonLayoutSection" type="tns:DescribeLayoutButtonSection" minOccurs="0"/>
                    <element name="detailLayoutSections" type="tns:DescribeLayoutSection" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="editLayoutSections" type="tns:DescribeLayoutSection" minOccurs="0" maxOccurs="unbounded"/>

                    <element name="feedView" type="tns:DescribeLayoutFeedView" minOccurs="0"/>


                    <element name="highlightsPanelLayoutSection" type="tns:DescribeLayoutSection" minOccurs="0"/>

                    <element name="id" type="tns:ID" nillable="true"/>



                    <element name="quickActionList" type="tns:DescribeQuickActionListResult" minOccurs="0"/>


                    <element name="relatedContent" type="tns:RelatedContent" minOccurs="0" maxOccurs="1"/>

                    <element name="relatedLists" type="tns:RelatedList" minOccurs="0" maxOccurs="unbounded"/>

                    <element name="saveOptions" type="tns:DescribeLayoutSaveOption" minOccurs="0" maxOccurs="unbounded"/>

                </sequence>
            </complexType>


            <complexType name="DescribeQuickActionListResult">
                <sequence>
                    <element name="quickActionListItems" type="tns:DescribeQuickActionListItemResult" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeQuickActionListItemResult">
                <sequence>
                    <element name="accessLevelRequired" type="tns:ShareAccessLevel" nillable="true"/> 
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/> 
                    <element name="iconUrl" type="xsd:string" nillable="true"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="miniIconUrl" type="xsd:string"/>
                    <element name="quickActionName" type="xsd:string"/>
                    <element name="targetSobjectType" type="xsd:string" nillable="true"/>
                    <element name="type" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeLayoutFeedView">
                <sequence>
                    <element name="feedFilters" type="tns:DescribeLayoutFeedFilter" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <simpleType name="FeedLayoutFilterType">
                <restriction base="xsd:string">
                    <enumeration value="AllUpdates"/>
                    <enumeration value="FeedItemType"/>
                    <enumeration value="Custom"/>
                </restriction>
            </simpleType>

            <complexType name="DescribeLayoutFeedFilter">
                <sequence>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="type" type="tns:FeedLayoutFilterType"/>
                </sequence>
            </complexType>


            <complexType name="DescribeLayoutSaveOption">
                <sequence>
                    <element name="defaultValue" type="xsd:boolean"/>
                    <element name="isDisplayed" type="xsd:boolean"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="restHeaderName" type="xsd:string"/>
                    <element name="soapHeaderName" type="xsd:string"/>
               </sequence>
            </complexType>

            <simpleType name="TabOrderType">
                 <restriction base="xsd:string">
                    <enumeration value="LeftToRight"/>
                    <enumeration value="TopToBottom"/>
                 </restriction>
            </simpleType>

            <complexType name="DescribeLayoutSection">
                <sequence>
                    <element name="collapsed" type="xsd:boolean"/>
                    <element name="columns" type="xsd:int"/>
                    <element name="heading" type="xsd:string" nillable="true"/>
                    <element name="layoutRows" type="tns:DescribeLayoutRow" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="layoutSectionId" type="tns:ID" nillable="true"/>
                    <element name="parentLayoutId" type="tns:ID"/>
                    <element name="rows" type="xsd:int"/>
                    <element name="tabOrder" type="tns:TabOrderType"/>
                    <element name="useCollapsibleSection" type="xsd:boolean"/>
                    <element name="useHeading" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="DescribeLayoutButtonSection">
                <sequence>
                    <element name="detailButtons" type="tns:DescribeLayoutButton" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>
            <complexType name="DescribeLayoutRow">
                <sequence>
                    <element name="layoutItems" type="tns:DescribeLayoutItem" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="numItems" type="xsd:int"/>
                </sequence>
            </complexType>

            <complexType name="DescribeLayoutItem">
                <sequence>

                    <element name="editableForNew" type="xsd:boolean"/>
                    <element name="editableForUpdate" type="xsd:boolean"/>

                    <element name="label" type="xsd:string" nillable="true"/>
                    <element name="layoutComponents" type="tns:DescribeLayoutComponent" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="placeholder" type="xsd:boolean"/>
                    <element name="required" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <simpleType name="WebLinkWindowType">
                <restriction base="xsd:string">
                    <enumeration value="newWindow"/>
                    <enumeration value="sidebar"/>
                    <enumeration value="noSidebar"/>
                    <enumeration value="replace"/>
                    <enumeration value="onClickJavaScript"/>
                </restriction>
            </simpleType>
            <simpleType name="WebLinkPosition">
                <restriction base="xsd:string">
                    <enumeration value="fullScreen"/>
                    <enumeration value="none"/>
                    <enumeration value="topLeft"/>
                </restriction>
            </simpleType>
            <simpleType name="WebLinkType">
                <restriction base="xsd:string">
                    <enumeration value="url"/>
                    <enumeration value="sControl"/>
                    <enumeration value="javascript"/>
                    <enumeration value="page"/>
                    <enumeration value="flow"/>
                </restriction>
            </simpleType>


            <complexType name="DescribeLayoutButton">
                <sequence>
                 
                    <element name="behavior" type="tns:WebLinkWindowType" nillable="true" minOccurs="0"/>
                    
                    
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    
                 
                    <element name="content" type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="contentSource" type="tns:WebLinkType" nillable="true" minOccurs="0"/>
                  
                    <element name="custom" type="xsd:boolean"/>
                   
                    <element name="encoding" type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="height" type="xsd:int" nillable="true" minOccurs="0"/>
                   
                    
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    
                    <element name="label" type="xsd:string" nillable="true"/>
                    
                    <element name="menubar" type="xsd:boolean" nillable="true"/>
                   
                    <element name="name" type="xsd:string" nillable="true"/>

                    
                    <element name="overridden" type="xsd:boolean"/>
                    <element name="resizeable" type="xsd:boolean" nillable="true"/>
                    <element name="scrollbars" type="xsd:boolean" nillable="true"/>
                    <element name="showsLocation" type="xsd:boolean" nillable="true"/>
                    <element name="showsStatus" type="xsd:boolean" nillable="true"/>
                    <element name="toolbar" type="xsd:boolean" nillable="true"/>
                    <element name="url" type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="width" type="xsd:int" nillable="true" minOccurs="0"/>
                    <element name="windowPosition" type="tns:WebLinkPosition" nillable="true" minOccurs="0"/>
                    
                </sequence>
            </complexType>

            <complexType name="DescribeLayoutComponent">
                <sequence>
                    <element name="displayLines" type="xsd:int"/>
                    <element name="tabOrder" type="xsd:int"/>
                    <element name="type" type="tns:layoutComponentType"/>
                    <element name="value" type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>

            <simpleType name="layoutComponentType">
                <restriction base="xsd:string">
                    <enumeration value="ReportChart"/>
                    <enumeration value="Field"/>
                    <enumeration value="Separator"/>
                    <enumeration value="SControl"/>
                    <enumeration value="EmptySpace"/>


                    <enumeration value="VisualforcePage"/>


                    <enumeration value="ExpandedLookup"/>


                    <enumeration value="AuraComponent"/>


                    <enumeration value="Canvas"/>


                    <enumeration value="CustomLink"/>


                    <enumeration value="AnalyticsCloud"/>

                </restriction>
            </simpleType>


            <complexType name="FieldComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="field" type="tns:Field"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="FieldLayoutComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="components" type="tns:DescribeLayoutComponent" minOccurs="0" maxOccurs="unbounded"/>
                            <element name="fieldType" type="tns:fieldType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="VisualforcePage">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            
                                <element name="showLabel" type="xsd:boolean"/>
                            
                            <element name="showScrollbars" type="xsd:boolean"/>
                            <element name="suggestedHeight" type="xsd:string"/>
                            <element name="suggestedWidth" type="xsd:string"/>
                            <element name="url" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="Canvas">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="displayLocation" type="xsd:string"/>
                            <element name="referenceId" type="xsd:string"/>
                            <element name="showLabel" type="xsd:boolean"/>
                            <element name="showScrollbars" type="xsd:boolean"/>
                            <element name="suggestedHeight" type="xsd:string"/>
                            <element name="suggestedWidth" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <complexType name="ReportChartComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="cacheData" type="xsd:boolean"/>
                            <element name="contextFilterableField" type="xsd:string"/>
                            <element name="error" type="xsd:string"/>
                            <element name="hideOnError" type="xsd:boolean"/>
                            <element name="includeContext" type="xsd:boolean"/>
                            <element name="showTitle" type="xsd:boolean"/>
                            <element name="size" type="tns:ReportChartSize"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AnalyticsCloudComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="error" type="xsd:string"/>
                            <element name="filter" type="xsd:string"/>
                            <element name="height" type="xsd:string"/>
                            <element name="hideOnError" type="xsd:boolean"/>
                            <element name="showSharing" type="xsd:boolean"/>
                            <element name="showTitle" type="xsd:boolean"/>
                            <element name="width" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="CustomLinkComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="customLink" type="tns:DescribeLayoutButton"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <simpleType name="ReportChartSize">
                <restriction base="xsd:string">
                    <enumeration value="SMALL"/>
                    <enumeration value="MEDIUM"/>
                    <enumeration value="LARGE"/>
                </restriction>
            </simpleType>

            <complexType name="NamedLayoutInfo">
                <sequence>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="RecordTypeInfo">
                <sequence>
                    <element name="available" type="xsd:boolean"/>
                    <element name="defaultRecordTypeMapping" type="xsd:boolean"/>

                    <element name="master" type="xsd:boolean"/>

                    <element name="name" type="xsd:string"/>
                    <element name="recordTypeId" type="tns:ID" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="RecordTypeMapping">
                <sequence>
                    <element name="available" type="xsd:boolean"/>
                    <element name="defaultRecordTypeMapping" type="xsd:boolean"/>
                    <element name="layoutId" type="tns:ID"/>

                    <element name="master" type="xsd:boolean"/>

                    <element name="name" type="xsd:string"/>
                    <element name="picklistsForRecordType" type="tns:PicklistForRecordType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="recordTypeId" type="tns:ID" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="PicklistForRecordType">
                <sequence>
                    <element name="picklistName" type="xsd:string"/>
                    <element name="picklistValues" type="tns:PicklistEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>


             <complexType name="RelatedContent">
                <sequence>
                    <element name="relatedContentItems" type="tns:DescribeRelatedContentItem" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeRelatedContentItem">
                <sequence>
                    <element name="describeLayoutItem" type="tns:DescribeLayoutItem" maxOccurs="1"/>
                </sequence>
            </complexType>


            <complexType name="RelatedList">
                <sequence>
                    <element name="accessLevelRequiredForCreate" type="tns:ShareAccessLevel" nillable="true"/> 
 <element name="buttons" type="tns:DescribeLayoutButton" maxOccurs="unbounded" minOccurs="0" nillable="true"/> 
                    <element name="columns" type="tns:RelatedListColumn" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="custom" type="xsd:boolean"/>
                    <element name="field" type="xsd:string" nillable="true"/>
                    <element name="label" type="xsd:string"/>
                    <element name="limitRows" type="xsd:int"/>
                    <element name="name" type="xsd:string"/>
                    <element name="sobject" type="xsd:string" nillable="true"/>
                    <element name="sort" type="tns:RelatedListSort" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="RelatedListColumn">
                <sequence>
                    <element name="field" type="xsd:string" nillable="true"/>
                    <element name="fieldApiName" type="xsd:string"/>
                    <element name="format" type="xsd:string" nillable="true"/>
                    <element name="label" type="xsd:string"/>
                    <element name="lookupId" type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="RelatedListSort">
                <sequence>
                    <element name="ascending" type="xsd:boolean"/>
                    <element name="column" type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="EmailFileAttachment">
                <sequence>
                    <element name="body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                    <element name="contentType" nillable="true" minOccurs="0" type="xsd:string"/>
                    <element name="fileName" type="xsd:string"/>
                    
                    <element name="id" nillable="true" minOccurs="0" type="tns:ID"/>
                    
                    <element name="inline" type="xsd:boolean" minOccurs="0"/>
                </sequence>
            </complexType>
            <simpleType name="EmailPriority">
                <restriction base="xsd:string">
                    <enumeration value="Highest"/>
                    <enumeration value="High"/>
                    <enumeration value="Normal"/>
                    <enumeration value="Low"/>
                    <enumeration value="Lowest"/>
                </restriction>
            </simpleType>

            <simpleType name="SendEmailOptOutPolicy">
                <restriction base="xsd:string">
                    <enumeration value="SEND"/>
                    <enumeration value="FILTER"/>
                    <enumeration value="REJECT"/>
                </restriction>
            </simpleType>

            <simpleType name="AttachmentRetrievalOption">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="MetadataOnly"/>
                    <enumeration value="MetadataWithBody"/>
                </restriction>
            </simpleType>


            <complexType name="Email">
                <sequence>
                    <element name="bccSender" type="xsd:boolean" nillable="true"/>
                    <element name="emailPriority" type="tns:EmailPriority" nillable="true"/>
                    <element name="replyTo" type="xsd:string" nillable="true"/>
                    <element name="saveAsActivity" type="xsd:boolean" nillable="true"/>
                    <element name="senderDisplayName" type="xsd:string" nillable="true"/>
                    <element name="subject" type="xsd:string" nillable="true"/>
                    <element name="useSignature" type="xsd:boolean" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="MassEmailMessage">
                <complexContent>
                    <extension base="tns:Email">
                        <sequence>
                            <element name="description" type="xsd:string" nillable="true"/>
                            <element name="targetObjectIds" minOccurs="0" maxOccurs="250" type="tns:ID"/>
                            <element name="templateId" type="tns:ID"/>
                            <element name="whatIds" minOccurs="0" maxOccurs="250" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SingleEmailMessage">
                <complexContent>
                    <extension base="tns:Email">
                        <sequence>
                            <element name="bccAddresses" minOccurs="0" maxOccurs="25" type="xsd:string" nillable="true"/>
                            <element name="ccAddresses" minOccurs="0" maxOccurs="25" type="xsd:string" nillable="true"/>
                            <element name="charset" type="xsd:string" nillable="true"/>
                            <element name="documentAttachments" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                            <element name="entityAttachments" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                            <element name="fileAttachments" minOccurs="0" maxOccurs="unbounded" type="tns:EmailFileAttachment"/>
                            <element name="htmlBody" type="xsd:string" nillable="true"/>
                            <element name="inReplyTo" minOccurs="0" type="xsd:string" nillable="true"/>
                            <element name="optOutPolicy" type="tns:SendEmailOptOutPolicy" nillable="true"/>
                            <element name="orgWideEmailAddressId" minOccurs="0" maxOccurs="1" type="tns:ID" nillable="true"/>
                            <element name="plainTextBody" type="xsd:string" nillable="true"/>
                            <element name="references" minOccurs="0" type="xsd:string" nillable="true"/>
                            <element name="targetObjectId" type="tns:ID" nillable="true"/>
                            <element name="templateId" type="tns:ID" nillable="true"/>
                            <element name="toAddresses" minOccurs="0" maxOccurs="100" type="xsd:string" nillable="true"/>
                            <element name="treatBodiesAsTemplate" type="xsd:boolean" nillable="true"/>
                            <element name="treatTargetObjectAsRecipient" type="xsd:boolean" nillable="true"/>
                            <element name="whatId" type="tns:ID" nillable="true"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SendEmailResult">
                <sequence>
                    <element name="errors" minOccurs="0" maxOccurs="unbounded" type="tns:SendEmailError"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>



            <complexType name="ListViewColumn">
                <sequence>
                    <element name="ascendingLabel" type="xsd:string" nillable="true"/>
                    <element name="descendingLabel" type="xsd:string" nillable="true"/>
                    <element name="fieldNameOrPath" type="xsd:string"/>
                    <element name="hidden" type="xsd:boolean"/>
                    <element name="label" type="xsd:string"/>
                    <element name="selectListItem" type="xsd:string"/>
                    <element name="sortDirection" type="tns:orderByDirection" nillable="true"/>
                    <element name="sortIndex" type="xsd:int" nillable="true"/>
                    <element name="sortable" type="xsd:boolean"/>
                    <element name="type" type="tns:fieldType"/>
                </sequence>
            </complexType>

            <complexType name="ListViewOrderBy">
                <sequence>
                    <element name="fieldNameOrPath" type="xsd:string"/>
                    <element name="nullsPosition" type="tns:orderByNullsPosition" nillable="true"/>
                    <element name="sortDirection" type="tns:orderByDirection" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListView">
                <sequence>
                    <element name="columns" type="tns:ListViewColumn" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID"/>
                    <element name="orderBy" type="tns:ListViewOrderBy" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="query" type="xsd:string"/>
                    <element name="scope" type="xsd:string" nillable="true"/>
                    <element name="sobjectType" type="xsd:string"/>
                    <element name="whereCondition" type="tns:SoqlWhereCondition" minOccurs="0"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListViewsRequest">
                <sequence>
                    <element name="listViewParams" type="tns:DescribeSoqlListViewParams" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListViewParams">
                <sequence>
                    <element name="developerNameOrId" type="xsd:string"/>
                    <element name="sobjectType" type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListViewResult">
                <sequence>
                    <element name="describeSoqlListViews" type="tns:DescribeSoqlListView" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="ExecuteListViewRequest">
                <sequence>
                    <element name="developerNameOrId" type="xsd:string"/>
                    <element name="limit" type="xsd:int" nillable="true"/>
                    <element name="offset" type="xsd:int" nillable="true"/>
                    <element name="orderBy" type="tns:ListViewOrderBy" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="sobjectType" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="ExecuteListViewResult">
                <sequence>
                    <element name="columns" type="tns:ListViewColumn" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="developerName" type="xsd:string"/>
                    <element name="done" type="xsd:boolean"/>
                    <element name="id" type="tns:ID"/>
                    <element name="label" type="xsd:string"/>
                    <element name="records" type="tns:ListViewRecord" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="size" type="xsd:int"/>
                </sequence>
            </complexType>

            <complexType name="ListViewRecord">
                <sequence>
                    <element name="columns" type="tns:ListViewRecordColumn" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="ListViewRecordColumn">
                <sequence>
                    <element name="fieldNameOrPath" type="xsd:string"/>
                    <element name="value" type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>

            <simpleType name="orderByDirection">
                <restriction base="xsd:string">
                    <enumeration value="ascending"/>
                    <enumeration value="descending"/>
                </restriction>
            </simpleType>

            <simpleType name="orderByNullsPosition">
                <restriction base="xsd:string">
                    <enumeration value="first"/>
                    <enumeration value="last"/>
                </restriction>
            </simpleType>

            <simpleType name="soqlOperator">
                <restriction base="xsd:string">
                    <enumeration value="equals"/>
                    <enumeration value="excludes"/>
                    <enumeration value="greaterThan"/>
                    <enumeration value="greaterThanOrEqualTo"/>
                    <enumeration value="in"/>
                    <enumeration value="includes"/>
                    <enumeration value="lessThan"/>
                    <enumeration value="lessThanOrEqualTo"/>
                    <enumeration value="like"/>
                    <enumeration value="notEquals"/>
                    <enumeration value="notIn"/>
                    <enumeration value="within"/>
                </restriction>
            </simpleType>

            <simpleType name="soqlConjunction">
                <restriction base="xsd:string">
                    <enumeration value="and"/>
                    <enumeration value="or"/>
                </restriction>
            </simpleType>

            <complexType name="SoqlWhereCondition">
                <sequence/>
            </complexType>

            <complexType name="SoqlCondition">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="field" type="xsd:string"/>
                            <element name="operator" type="tns:soqlOperator"/>
                            <element name="values" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SoqlNotCondition">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="condition" type="tns:SoqlWhereCondition"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SoqlConditionGroup">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="conditions" type="tns:SoqlWhereCondition" minOccurs="0" maxOccurs="unbounded"/>
                            <element name="conjunction" type="tns:soqlConjunction"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SoqlSubQueryCondition">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="field" type="xsd:string"/>
                            <element name="operator" type="tns:soqlOperator"/>
                            <element name="subQuery" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


        
            <complexType name="DescribeSearchLayoutResult">
                <sequence>
                    
                    <element name="errorMsg" type="xsd:string" nillable="true"/>
                    <element name="label" type="xsd:string" nillable="true"/>
                    <element name="limitRows" type="xsd:int" nillable="true"/>
                    <element name="objectType" type="xsd:string"/>
                    <element name="searchColumns" type="tns:DescribeColumn" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                </sequence>
            </complexType>
        

                <complexType name="DescribeColumn">
                    <sequence>
                        <element name="field" type="xsd:string"/>
                        <element name="format" type="xsd:string" nillable="true"/>
                        <element name="label" type="xsd:string"/>
                        <element name="name" type="xsd:string"/>
                    </sequence>
                </complexType>




            <complexType name="DescribeSearchScopeOrderResult">
                <sequence>
                    <element name="keyPrefix" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="DescribeSearchableEntityResult">
                <sequence>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="pluralLabel" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeTabSetResult">
                <sequence>
                    <element name="description" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="logoUrl" type="xsd:string"/>
                    <element name="namespace" type="xsd:string" minOccurs="0"/>
                    <element name="selected" type="xsd:boolean"/>
                    <element name="tabSetId" type="xsd:string"/>
                    <element name="tabs" type="tns:DescribeTab" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeTab">
                <sequence>
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="custom" type="xsd:boolean"/>
                    <element name="iconUrl" type="xsd:string"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="miniIconUrl" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="sobjectName" type="xsd:string" nillable="true"/>
                    <element name="url" type="xsd:string"/>
                </sequence>
            </complexType>


        <complexType name="DescribeColor">
            <sequence>
                <element name="color" type="xsd:string"/>
                <element name="context" type="xsd:string"/>
                <element name="theme" type="xsd:string"/>
            </sequence>
        </complexType>



        <complexType name="DescribeIcon">
            <sequence>
                <element name="contentType" type="xsd:string"/>
                <element name="height" type="xsd:int" nillable="true"/>
                <element name="theme" type="xsd:string"/>
                <element name="url" type="xsd:string"/>
                <element name="width" type="xsd:int" nillable="true"/>
            </sequence>
        </complexType>

        <complexType name="ActionOverride">
            <sequence>
                <element name="formFactor" type="xsd:string"/>
                <element name="isAvailableInTouch" type="xsd:boolean"/>
                <element name="name" type="xsd:string"/>
                <element name="pageId" type="tns:ID"/>
                <element name="url" type="xsd:string" nillable="true"/>
            </sequence>
        </complexType>



            <!-- Login Message Types -->
            <element name="login">
                <complexType>
                    <sequence>
                        <element name="username" type="xsd:string"/>
                        <element name="password" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="loginResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:LoginResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Describe Message Types -->
            <element name="describeSObject">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSObjectResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSObjectResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <!-- DescibeSObjects Message Types -->
            <element name="describeSObjects">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string" minOccurs="0" maxOccurs="100"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSObjectsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSObjectResult" nillable="true" minOccurs="0" maxOccurs="100"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Describe Global Message Types -->
            <element name="describeGlobal">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeGlobalResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeGlobalResult"/>
                    </sequence>
                </complexType>
            </element>


        <!-- Describe Global Theme Types -->
        <element name="describeGlobalTheme">
            <complexType>
                <sequence/>
            </complexType>
        </element>
        <element name="describeGlobalThemeResponse">
            <complexType>
                <sequence>
                    <element name="result" type="tns:DescribeGlobalTheme"/>
                </sequence>
            </complexType>
        </element>

        <!-- Describe Theme Types -->
        <element name="describeTheme">
            <complexType>
                <sequence>
                    <element name="sobjectType" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>
        </element>
        <element name="describeThemeResponse">
            <complexType>
                <sequence>
                    <element name="result" type="tns:DescribeThemeResult"/>
                </sequence>
            </complexType>
        </element>


        <!-- Describe Data Category Groups Message Types -->
            <element name="describeDataCategoryGroups">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeDataCategoryGroupsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeDataCategoryGroupResult" minOccurs="0" maxOccurs="100"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeDataCategoryGroupStructures">
                <complexType>
                    <sequence>
                        <element name="pairs" type="tns:DataCategoryGroupSobjectTypePair" minOccurs="0" maxOccurs="100"/>
                        <element name="topCategoriesOnly" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeDataCategoryGroupStructuresResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeDataCategoryGroupStructureResult" minOccurs="0" maxOccurs="100"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Describe Knowledge Settings -->
            <element name="describeKnowledgeSettings">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeKnowledgeSettingsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:KnowledgeSettings"/>
                    </sequence>
                </complexType>
            </element>









            <simpleType name="AppMenuType">
                <restriction base="xsd:string">
                    <enumeration value="AppSwitcher"/>
                    <enumeration value="Salesforce1"/>
                    <enumeration value="NetworkTabs"/>
                </restriction>
            </simpleType>


            <element name="describeAppMenu">
                <complexType>
                    <sequence>
                        <element name="appMenuType" type="tns:AppMenuType"/>

                        <element name="networkId" type="tns:ID" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeAppMenuResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeAppMenuResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeLayout">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="layoutName" type="xsd:string" nillable="true"/>
                        <element name="recordTypeIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            
            
            

            <element name="describeLayoutResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeLayoutResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeCompactLayouts">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="recordTypeIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeCompactLayoutsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeCompactLayoutsResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describePrimaryCompactLayouts">
                <complexType>
                    <sequence>
                        <element name="sObjectTypes" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describePrimaryCompactLayoutsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeCompactLayout" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describePathAssistants">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="picklistValue" type="xsd:string" nillable="true"/>
                        <element name="recordTypeIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describePathAssistantsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribePathAssistantsResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeApprovalLayout">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="approvalProcessNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeApprovalLayoutResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeApprovalLayoutResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>

            <element name="describeSoftphoneLayout">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeSoftphoneLayoutResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSoftphoneLayoutResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeSoqlListViews">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:DescribeSoqlListViewsRequest"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSoqlListViewsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSoqlListViewResult"/>
                    </sequence>
                </complexType>
            </element>
            <element name="executeListView">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:ExecuteListViewRequest"/>
                    </sequence>
                </complexType>
            </element>
            <element name="executeListViewResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ExecuteListViewResult" minOccurs="0" maxOccurs="1"/>
                    </sequence>
                </complexType>
            </element>


            <simpleType name="listViewIsSoqlCompatible">
                <restriction base="xsd:string">
                    <enumeration value="TRUE"/>
                    <enumeration value="FALSE"/>
                    <enumeration value="ALL"/>
                </restriction>
            </simpleType>

            <element name="describeSObjectListViews">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="recentsOnly" type="xsd:boolean"/>
                        <element name="isSoqlCompatible" type="tns:listViewIsSoqlCompatible"/>
                        <element name="limit" type="xsd:int"/>
                        <element name="offset" type="xsd:int"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSObjectListViewsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSoqlListViewResult"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeSearchLayouts">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSearchLayoutsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSearchLayoutResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeSearchScopeOrder">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeSearchScopeOrderResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSearchScopeOrderResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeSearchableEntities">
                <complexType>
                    <sequence>
                        <element name="includeOnlyEntitiesWithTabs" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSearchableEntitiesResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSearchableEntityResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeTabs">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeTabsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeTabSetResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeAllTabs">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeAllTabsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeTab" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeNouns">
                <complexType>
                    <sequence>
                        <element name="nouns" type="xsd:string" minOccurs="0" maxOccurs="100"/>
                        <element name="onlyRenamed" type="xsd:boolean"/>
                        <element name="includeFields" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeNounsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeNounResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Create Message Types -->
            <element name="create">
                <complexType>
                    <sequence>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="createResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SaveResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Send Email Types -->
            <element name="sendEmail">
                <complexType>
                    <sequence>
                        <element name="messages" type="tns:Email" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="sendEmailResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="0" maxOccurs="10" type="tns:SendEmailResult"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Template Merge -->
            <complexType name="RenderEmailTemplateRequest">
                    <sequence>
                        <element name="templateBodies" type="xsd:string" minOccurs="1" maxOccurs="10" nillable="false"/>
                        <element name="whatId" type="tns:ID" minOccurs="0" maxOccurs="1"/>
                        <element name="whoId" type="tns:ID" minOccurs="0" maxOccurs="1"/>
                    </sequence>
            </complexType>

            <complexType name="RenderEmailTemplateBodyResult">
                <sequence>
                    <element name="errors" type="tns:RenderEmailTemplateError" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="mergedBody" type="xsd:string" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="RenderEmailTemplateResult">
                <sequence>
                    <element name="bodyResults" type="tns:RenderEmailTemplateBodyResult" minOccurs="0" maxOccurs="10"/>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <element name="renderEmailTemplate">
                <complexType>
                    <sequence>
                        <element name="renderRequests" type="tns:RenderEmailTemplateRequest" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="renderEmailTemplateResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="0" maxOccurs="10" type="tns:RenderEmailTemplateResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- RenderStoredEmailTemplate -->
            <complexType name="RenderStoredEmailTemplateRequest">
                    <sequence>
                        <element name="attachmentRetrievalOption" type="tns:AttachmentRetrievalOption" nillable="true"/>
                        <element name="templateId" type="tns:ID" minOccurs="1" maxOccurs="1" nillable="false"/>
                        <element name="whatId" type="tns:ID" minOccurs="0" maxOccurs="1"/>
                        <element name="whoId" type="tns:ID" minOccurs="0" maxOccurs="1"/>
                    </sequence>
            </complexType>

            <complexType name="RenderStoredEmailTemplateResult">
                <sequence>
                    <element name="errors" type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="renderedEmail" type="tns:SingleEmailMessage" nillable="true"/>
                    <element name="success" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <element name="renderStoredEmailTemplate">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:RenderStoredEmailTemplateRequest" minOccurs="1" maxOccurs="1"/>
                    </sequence>
                </complexType>
            </element>
            <element name="renderStoredEmailTemplateResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="1" maxOccurs="1" type="tns:RenderStoredEmailTemplateResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Send Email Message Types -->
            <element name="sendEmailMessage">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="sendEmailMessageResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="0" maxOccurs="10" type="tns:SendEmailResult"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Update Message Types -->
            <element name="update">
                <complexType>
                    <sequence>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="updateResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SaveResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Upsert Message Types -->
            <element name="upsert">
                <complexType>
                    <sequence>
                        <element name="externalIDFieldName" type="xsd:string"/>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="upsertResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:UpsertResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Merge Message Types -->
            <element name="merge">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:MergeRequest" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="mergeResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:MergeResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Delete Message Types -->
            <element name="delete">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="deleteResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DeleteResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Undelete Message Types -->
            <element name="undelete">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="undeleteResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:UndeleteResult" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- EmptyRecycleBin Message Types -->
            <element name="emptyRecycleBin">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="emptyRecycleBinResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:EmptyRecycleBinResult" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Process Message Types -->
            <element name="process">
                <complexType>
                    <sequence>
                        <element name="actions" type="tns:ProcessRequest" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="processResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ProcessResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Perform Action Message Types -->
            <element name="performQuickActions">
                <complexType>
                    <sequence>
                        <element name="quickActions" type="tns:PerformQuickActionRequest" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="performQuickActionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:PerformQuickActionResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="retrieveQuickActionTemplates">
                <complexType>
                    <sequence>
                        <element name="quickActionNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                        <element name="contextId" type="tns:ID" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="retrieveQuickActionTemplatesResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QuickActionTemplateResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="describeQuickActions">
                <complexType>
                    <sequence>
                        <element name="quickActions" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeQuickActionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeQuickActionResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="describeAvailableQuickActions">
                <complexType>
                    <sequence>
                        <element name="contextType" type="xsd:string" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeAvailableQuickActionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeAvailableQuickActionResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeVisualForce">
                <complexType>
                    <sequence>
                        <element name="includeAllDetails" type="xsd:boolean"/>
                        <element name="namespacePrefix" type="xsd:string" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeVisualForceResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeVisualForceResult"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Retrieve (ID List) Message Types -->
            <element name="retrieve">
                <complexType>
                    <sequence>
                        <element name="fieldList" type="xsd:string"/>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="ids" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="retrieveResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="ens:sObject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

      

            <!-- Convert Lead Message Types -->
            <element name="convertLead">
                <complexType>
                    <sequence>
                        <element name="leadConverts" type="tns:LeadConvert" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="convertLeadResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:LeadConvertResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Get Updated Message Types -->
            <element name="getUpdated">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="startDate" type="xsd:dateTime"/>
                        <element name="endDate" type="xsd:dateTime"/>
                    </sequence>
                </complexType>
            </element>
            <element name="getUpdatedResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetUpdatedResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Get Deleted Message Types -->
            <element name="getDeleted">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="startDate" type="xsd:dateTime"/>
                        <element name="endDate" type="xsd:dateTime"/>
                    </sequence>
                </complexType>
            </element>
            <element name="getDeletedResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetDeletedResult"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Logout current session -->
            <element name="logout">
                <complexType>
                </complexType>
            </element>

            <element name="logoutResponse">
                <complexType>
                </complexType>
            </element>

            <!-- Invalidate a list of session ids -->
            <element name="invalidateSessions">
                <complexType>
                    <sequence>
                        <element name="sessionIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="invalidateSessionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:InvalidateSessionsResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Create Query -->
            <element name="query">
                <complexType>
                    <sequence>
                        <element name="queryString" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="queryResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QueryResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Create Query All -->
            <element name="queryAll">
                <complexType>
                    <sequence>
                        <element name="queryString" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="queryAllResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QueryResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Next Batch of sObjects from a query -->
            <element name="queryMore">
                <complexType>
                    <sequence>
                        <element name="queryLocator" type="tns:QueryLocator"/>
                    </sequence>
                </complexType>
            </element>
            <element name="queryMoreResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QueryResult"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Create Search -->
            <element name="search">
                <complexType>
                    <sequence>
                        <element name="searchString" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="searchResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SearchResult"/>
                    </sequence>
                </complexType>
            </element>



            <element name="getServerTimestamp">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="getServerTimestampResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetServerTimestampResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="setPassword">
                <complexType>
                    <sequence>
                        <element name="userId" type="tns:ID"/>
                        <element name="password" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="setPasswordResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SetPasswordResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="changeOwnPassword">
                <complexType>
                    <sequence>
                        <element name="oldPassword" type="xsd:string"/>
                        <element name="newPassword" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="changeOwnPasswordResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ChangeOwnPasswordResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="resetPassword">
                <complexType>
                    <sequence>
                        <element name="userId" type="tns:ID"/>
                    </sequence>
                </complexType>
            </element>
            <element name="resetPasswordResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ResetPasswordResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="getUserInfo">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="getUserInfoResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetUserInfoResult"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Header Elements -->
            <element name="SessionHeader">
                <complexType>
                    <sequence>
                        <element name="sessionId" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>

            <element name="LoginScopeHeader">
                <complexType>
                    <sequence>
                        <element name="organizationId" type="tns:ID"/>
                        <element name="portalId" type="tns:ID" minOccurs="0"/>
                    </sequence>
                </complexType>
            </element>



            <element name="QueryOptions">
                <complexType>
                    <sequence>
                        <element name="batchSize" type="xsd:int" minOccurs="0"/>

                    </sequence>
                </complexType>
            </element>


            <simpleType name="DebugLevel">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="DebugOnly"/>
                    <enumeration value="Db"/>

                    <enumeration value="Profiling"/>
                    <enumeration value="Callout"/>
                    <enumeration value="Detail"/>

                </restriction>
            </simpleType>




            <element name="DebuggingHeader">
                <complexType>
                    <sequence>

                        <xsd:element name="categories" minOccurs="0" maxOccurs="unbounded" type="tns:LogInfo"/>

                        <element name="debugLevel" type="tns:DebugLevel"/>
                    </sequence>
                </complexType>
           </element>

           <xsd:complexType name="LogInfo">
               <xsd:sequence>
                   <xsd:element name="category" type="tns:LogCategory"/>
                   <xsd:element name="level" type="tns:LogCategoryLevel"/>
               </xsd:sequence>
           </xsd:complexType>
           <xsd:simpleType name="LogCategory">
              <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="Db"/>
                  <xsd:enumeration value="Workflow"/>
                  <xsd:enumeration value="Validation"/>
                  <xsd:enumeration value="Callout"/>
                  <xsd:enumeration value="Apex_code"/>
                  <xsd:enumeration value="Apex_profiling"/>
                  <xsd:enumeration value="Visualforce"/>
                  <xsd:enumeration value="System"/>
                  <xsd:enumeration value="All"/>
              </xsd:restriction>
           </xsd:simpleType>
           <xsd:simpleType name="LogCategoryLevel">
                   <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="None"/>
                    <xsd:enumeration value="Finest"/>
                    <xsd:enumeration value="Finer"/>
                    <xsd:enumeration value="Fine"/>
                    <xsd:enumeration value="Debug"/>
                    <xsd:enumeration value="Info"/>
                    <xsd:enumeration value="Warn"/>
                     <xsd:enumeration value="Error"/>
                </xsd:restriction>
            </xsd:simpleType>


            <element name="DebuggingInfo">
                <complexType>
                    <sequence>
                        <element name="debugLog" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>

   <xsd:complexType name="PackageVersion">
    <xsd:sequence>
     <xsd:element name="majorNumber" type="xsd:int"/>
     <xsd:element name="minorNumber" type="xsd:int"/>
     <xsd:element name="namespace" type="xsd:string"/>
    </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="PackageVersionHeader">
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element name="packageVersions" minOccurs="0" maxOccurs="unbounded" type="tns:PackageVersion"/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>

            <element name="AllowFieldTruncationHeader">
                <complexType>
                    <sequence>
                        <element name="allowFieldTruncation" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>

   <element name="DisableFeedTrackingHeader">
       <complexType>
           <sequence>
               <element name="disableFeedTracking" type="xsd:boolean"/>
           </sequence>
       </complexType>
   </element>

   <element name="StreamingEnabledHeader">
       <complexType>
           <sequence>
               <element name="streamingEnabled" type="xsd:boolean"/>
           </sequence>
       </complexType>
   </element>


        <element name="AllOrNoneHeader">
            <complexType>
                <sequence>
                    <element name="allOrNone" type="xsd:boolean"/>
                </sequence>
            </complexType>
        </element>



        <element name="DuplicateRuleHeader">
            <complexType>
                <sequence>
                    <element name="allowSave" type="xsd:boolean"/>
                    <element name="includeRecordDetails" type="xsd:boolean"/>
                    <element name="runAsCurrentUser" type="xsd:boolean"/>
                </sequence>
            </complexType>
        </element>



        <complexType name="LimitInfo">
            <sequence>
                <element name="current" type="xsd:int"/>
                <element name="limit" type="xsd:int"/>
                <element name="type" type="xsd:string"/>
            </sequence>
        </complexType>

        <element name="LimitInfoHeader">
            <complexType>
                <sequence>
                    <element name="limitInfo" minOccurs="0" maxOccurs="unbounded" type="tns:LimitInfo"/>
                </sequence>
            </complexType>
        </element>







            <!-- ideally this could of just been elem name="..." type="xsd:boolean"
                 but is required to be nested within a complexType for .NET 1.1 compatibility -->
    <element name="MruHeader">
                <complexType>
                    <sequence>
                        <element name="updateMru" type="xsd:boolean"/>
                    </sequence>
                </complexType>
    </element>

    <element name="EmailHeader">
                <complexType>
                    <sequence>
                        <element name="triggerAutoResponseEmail" type="xsd:boolean"/>
                        <element name="triggerOtherEmail" type="xsd:boolean"/>
                        <element name="triggerUserEmail" type="xsd:boolean"/>
                    </sequence>
                </complexType>
    </element>

    <element name="AssignmentRuleHeader">
                <complexType>
                    <sequence>
                        <element name="assignmentRuleId" type="tns:ID" nillable="true"/>
                        <element name="useDefaultRule" type="xsd:boolean" nillable="true"/>
                    </sequence>
                </complexType>
    </element>

            <element name="UserTerritoryDeleteHeader">
                <complexType>
                    <sequence>
                        <element name="transferToUserId" type="tns:ID" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <element name="LocaleOptions">
                <complexType>
                    <sequence>
                        <element name="language" type="xsd:string" minOccurs="0"/>

                        <element name="localizeErrors" type="xsd:boolean" minOccurs="0"/>

                    </sequence>
                </complexType>
            </element>

            <simpleType name="OwnerChangeOptionType">
                <restriction base="xsd:string">
                    <enumeration value="EnforceNewOwnerHasReadAccess"/>
                    <enumeration value="TransferOpenActivities"/>
                    <enumeration value="TransferNotesAndAttachments"/>
                    <enumeration value="TransferOthersOpenOpportunities"/>
                    <enumeration value="TransferOwnedOpenOpportunities"/>
                    <enumeration value="TransferContracts"/>
                    <enumeration value="TransferOrders"/>
                    <enumeration value="TransferContacts"/>
                </restriction>
            </simpleType>

            <complexType name="OwnerChangeOption">
                <sequence>
                      <element name="type" type="tns:OwnerChangeOptionType"/>
                      <element name="execute" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <element name="OwnerChangeOptions">
                <complexType>
                     <sequence>

                         <element name="options" type="tns:OwnerChangeOption" nillable="true" minOccurs="0" maxOccurs="unbounded"/>

                   </sequence>
                </complexType>
            </element>

        </schema>

        <schema elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:fault.enterprise.soap.sforce.com" xmlns:fns="urn:fault.enterprise.soap.sforce.com">

            <import namespace="urn:enterprise.soap.sforce.com"/>
            <simpleType name="ExceptionCode">
                <restriction base="xsd:string">
                    <enumeration value="APEX_TRIGGER_COUPLING_LIMIT"/>
                    <enumeration value="API_CURRENTLY_DISABLED"/>
                    <enumeration value="API_DISABLED_FOR_ORG"/>
                    <enumeration value="ARGUMENT_OBJECT_PARSE_ERROR"/>
                    <enumeration value="ASYNC_OPERATION_LOCATOR"/>
                    <enumeration value="ASYNC_QUERY_UNSUPPORTED_QUERY"/>
                    <enumeration value="BATCH_PROCESSING_HALTED"/>
                    <enumeration value="BIG_OBJECT_UNSUPPORTED_OPERATION"/>
                    <enumeration value="CANNOT_DELETE_ENTITY"/>
                    <enumeration value="CANNOT_DELETE_OWNER"/>
                    <enumeration value="CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="CIRCULAR_OBJECT_GRAPH"/>
                    <enumeration value="CLIENT_NOT_ACCESSIBLE_FOR_USER"/>
                    <enumeration value="CLIENT_REQUIRE_UPDATE_FOR_USER"/>
                    <enumeration value="CONTENT_CUSTOM_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_INVALID_PAYLOAD"/>
                    <enumeration value="CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_SECURITY_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_TIMEOUT_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_UNEXPECTED_EXCEPTION"/>
                    <enumeration value="CUSTOM_METADATA_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_SETTINGS_LIMIT_EXCEEDED"/>
                    <enumeration value="DATACLOUD_API_CLIENT_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_DISABLED_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_INVALID_QUERY_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_SERVER_BUSY_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_SERVER_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_TIMEOUT_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_UNAVAILABLE"/>
                    <enumeration value="DATA_INTEGRATION_BAD_REQUEST"/>
                    <enumeration value="DATA_INTEGRATION_DATA_NOT_FOUND"/>
                    <enumeration value="DATA_INTEGRATION_INVALID_QUERY"/>
                    <enumeration value="DATA_INTEGRATION_SEARCH_ERROR"/>
                    <enumeration value="DATA_INTEGRATION_SEARCH_INPUT_ERROR"/>
                    <enumeration value="DISCOVERY_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="DISCOVERY_ORG_LICENSE_REQUIRED"/>
                    <enumeration value="DISCOVERY_USER_LICENSE_REQUIRED"/>
                    <enumeration value="DUPLICATE_ARGUMENT_VALUE"/>
                    <enumeration value="DUPLICATE_VALUE"/>
                    <enumeration value="EMAIL_BATCH_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="EMAIL_TO_CASE_INVALID_ROUTING"/>
                    <enumeration value="EMAIL_TO_CASE_LIMIT_EXCEEDED"/>
                    <enumeration value="EMAIL_TO_CASE_NOT_ENABLED"/>
                    <enumeration value="ENTITY_NOT_QUERYABLE"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"/>
                    <enumeration value="EXCEEDED_ID_LIMIT"/>
                    <enumeration value="EXCEEDED_LEAD_CONVERT_LIMIT"/>
                    <enumeration value="EXCEEDED_MAX_SIZE_REQUEST"/>
                    <enumeration value="EXCEEDED_MAX_SOBJECTS"/>
                    <enumeration value="EXCEEDED_MAX_TYPES_LIMIT"/>
                    <enumeration value="EXCEEDED_QUOTA"/>
                    <enumeration value="EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="EXTERNAL_OBJECT_CONNECTION_EXCEPTION"/>
                    <enumeration value="EXTERNAL_OBJECT_EXCEPTION"/>
                    <enumeration value="EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION"/>
                    <enumeration value="FEDERATED_SEARCH_ERROR"/>
                    <enumeration value="FEED_NOT_ENABLED_FOR_OBJECT"/>
                    <enumeration value="FUNCTIONALITY_NOT_ENABLED"/>
                    <enumeration value="FUNCTIONALITY_TEMPORARILY_UNAVAILABLE"/>
                    <enumeration value="ILLEGAL_QUERY_PARAMETER_VALUE"/>
                    <enumeration value="INACTIVE_OWNER_OR_USER"/>
                    <enumeration value="INACTIVE_PORTAL"/>
                    <enumeration value="INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"/>
                    <enumeration value="INSUFFICIENT_ACCESS"/>
                    <enumeration value="INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY"/>
                    <enumeration value="INTERNAL_CANVAS_ERROR"/>
                    <enumeration value="INVALID_ASSIGNMENT_RULE"/>
                    <enumeration value="INVALID_BATCH_REQUEST"/>
                    <enumeration value="INVALID_BATCH_SIZE"/>
                    <enumeration value="INVALID_CLIENT"/>
                    <enumeration value="INVALID_CROSS_REFERENCE_KEY"/>
                    <enumeration value="INVALID_DATE_FORMAT"/>
                    <enumeration value="INVALID_FIELD"/>
                    <enumeration value="INVALID_FILTER_LANGUAGE"/>
                    <enumeration value="INVALID_FILTER_VALUE"/>
                    <enumeration value="INVALID_ID_FIELD"/>
                    <enumeration value="INVALID_INPUT_COMBINATION"/>
                    <enumeration value="INVALID_LOCALE_LANGUAGE"/>
                    <enumeration value="INVALID_LOCATOR"/>
                    <enumeration value="INVALID_LOGIN"/>
                    <enumeration value="INVALID_MULTIPART_REQUEST"/>
                    <enumeration value="INVALID_NEW_PASSWORD"/>
                    <enumeration value="INVALID_OLD_PASSWORD"/>
                    <enumeration value="INVALID_OPERATION"/>
                    <enumeration value="INVALID_OPERATION_WITH_EXPIRED_PASSWORD"/>
                    <enumeration value="INVALID_PACKAGE_VERSION"/>
                    <enumeration value="INVALID_PAGING_OPTION"/>
                    <enumeration value="INVALID_QUERY_FILTER_OPERATOR"/>
                    <enumeration value="INVALID_QUERY_LOCATOR"/>
                    <enumeration value="INVALID_QUERY_SCOPE"/>
                    <enumeration value="INVALID_REPLICATION_DATE"/>
                    <enumeration value="INVALID_SEARCH"/>
                    <enumeration value="INVALID_SEARCH_SCOPE"/>
                    <enumeration value="INVALID_SESSION_ID"/>
                    <enumeration value="INVALID_SOAP_HEADER"/>
                    <enumeration value="INVALID_SORT_OPTION"/>
                    <enumeration value="INVALID_SSO_GATEWAY_URL"/>
                    <enumeration value="INVALID_TYPE"/>
                    <enumeration value="INVALID_TYPE_FOR_OPERATION"/>
                    <enumeration value="JIGSAW_ACTION_DISABLED"/>
                    <enumeration value="JIGSAW_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="JIGSAW_REQUEST_NOT_SUPPORTED"/>
                    <enumeration value="JSON_PARSER_ERROR"/>
                    <enumeration value="KEY_HAS_BEEN_DESTROYED"/>
                    <enumeration value="LICENSING_DATA_ERROR"/>
                    <enumeration value="LICENSING_UNKNOWN_ERROR"/>
                    <enumeration value="LIMIT_EXCEEDED"/>
                    <enumeration value="LOGIN_CHALLENGE_ISSUED"/>
                    <enumeration value="LOGIN_CHALLENGE_PENDING"/>
                    <enumeration value="LOGIN_DURING_RESTRICTED_DOMAIN"/>
                    <enumeration value="LOGIN_DURING_RESTRICTED_TIME"/>
                    <enumeration value="LOGIN_MUST_USE_SECURITY_TOKEN"/>
                    <enumeration value="MALFORMED_ID"/>
                    <enumeration value="MALFORMED_QUERY"/>
                    <enumeration value="MALFORMED_SEARCH"/>
                    <enumeration value="MISSING_ARGUMENT"/>
                    <enumeration value="MISSING_RECORD"/>
                    <enumeration value="MODIFIED"/>
                    <enumeration value="MUTUAL_AUTHENTICATION_FAILED"/>
                    <enumeration value="NOT_ACCEPTABLE"/>
                    <enumeration value="NOT_MODIFIED"/>
                    <enumeration value="NO_ACTIVE_DUPLICATE_RULE"/>
                    <enumeration value="NO_RECIPIENTS"/>
                    <enumeration value="NO_SOFTPHONE_LAYOUT"/>
                    <enumeration value="NUMBER_OUTSIDE_VALID_RANGE"/>
                    <enumeration value="OPERATION_TOO_LARGE"/>
                    <enumeration value="ORG_IN_MAINTENANCE"/>
                    <enumeration value="ORG_IS_DOT_ORG"/>
                    <enumeration value="ORG_IS_SIGNING_UP"/>
                    <enumeration value="ORG_LOCKED"/>
                    <enumeration value="ORG_NOT_OWNED_BY_INSTANCE"/>
                    <enumeration value="PASSWORD_LOCKOUT"/>
                    <enumeration value="PORTAL_NO_ACCESS"/>
                    <enumeration value="POST_BODY_PARSE_ERROR"/>
                    <enumeration value="QUERY_TIMEOUT"/>
                    <enumeration value="QUERY_TOO_COMPLICATED"/>
                    <enumeration value="REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT"/>
                    <enumeration value="REQUEST_LIMIT_EXCEEDED"/>
                    <enumeration value="REQUEST_RUNNING_TOO_LONG"/>
                    <enumeration value="SERVER_UNAVAILABLE"/>
                    <enumeration value="SERVICE_DESK_NOT_ENABLED"/>
                    <enumeration value="SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION"/>
                    <enumeration value="SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION"/>
                    <enumeration value="SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE"/>
                    <enumeration value="SSO_SERVICE_DOWN"/>
                    <enumeration value="SST_ADMIN_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="TOO_MANY_APEX_REQUESTS"/>
                    <enumeration value="TOO_MANY_RECIPIENTS"/>
                    <enumeration value="TOO_MANY_RECORDS"/>
                    <enumeration value="TRIAL_EXPIRED"/>
                    <enumeration value="TXN_SECURITY_END_A_SESSION"/>
                    <enumeration value="TXN_SECURITY_NO_ACCESS"/>
                    <enumeration value="TXN_SECURITY_TWO_FA_REQUIRED"/>
                    <enumeration value="UNABLE_TO_LOCK_ROW"/>
                    <enumeration value="UNKNOWN_ATTACHMENT_EXCEPTION"/>
                    <enumeration value="UNKNOWN_EXCEPTION"/>
                    <enumeration value="UNKNOWN_ORG_SETTING"/>
                    <enumeration value="UNSUPPORTED_API_VERSION"/>
                    <enumeration value="UNSUPPORTED_ATTACHMENT_ENCODING"/>
                    <enumeration value="UNSUPPORTED_CLIENT"/>
                    <enumeration value="UNSUPPORTED_MEDIA_TYPE"/>
                    <enumeration value="XML_PARSER_ERROR"/>
                </restriction>
            </simpleType>
            <!-- For convenience these QNames are returned in the standard soap faultcode element -->
            <simpleType name="FaultCode">
                <restriction base="xsd:QName">
                    <enumeration value="fns:APEX_TRIGGER_COUPLING_LIMIT"/>
                    <enumeration value="fns:API_CURRENTLY_DISABLED"/>
                    <enumeration value="fns:API_DISABLED_FOR_ORG"/>
                    <enumeration value="fns:ARGUMENT_OBJECT_PARSE_ERROR"/>
                    <enumeration value="fns:ASYNC_OPERATION_LOCATOR"/>
                    <enumeration value="fns:ASYNC_QUERY_UNSUPPORTED_QUERY"/>
                    <enumeration value="fns:BATCH_PROCESSING_HALTED"/>
                    <enumeration value="fns:BIG_OBJECT_UNSUPPORTED_OPERATION"/>
                    <enumeration value="fns:CANNOT_DELETE_ENTITY"/>
                    <enumeration value="fns:CANNOT_DELETE_OWNER"/>
                    <enumeration value="fns:CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="fns:CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="fns:CIRCULAR_OBJECT_GRAPH"/>
                    <enumeration value="fns:CLIENT_NOT_ACCESSIBLE_FOR_USER"/>
                    <enumeration value="fns:CLIENT_REQUIRE_UPDATE_FOR_USER"/>
                    <enumeration value="fns:CONTENT_CUSTOM_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_PAYLOAD"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_SECURITY_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_TIMEOUT_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_UNEXPECTED_EXCEPTION"/>
                    <enumeration value="fns:CUSTOM_METADATA_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:CUSTOM_SETTINGS_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:DATACLOUD_API_CLIENT_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_DISABLED_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_INVALID_QUERY_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_SERVER_BUSY_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_SERVER_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_TIMEOUT_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_UNAVAILABLE"/>
                    <enumeration value="fns:DATA_INTEGRATION_BAD_REQUEST"/>
                    <enumeration value="fns:DATA_INTEGRATION_DATA_NOT_FOUND"/>
                    <enumeration value="fns:DATA_INTEGRATION_INVALID_QUERY"/>
                    <enumeration value="fns:DATA_INTEGRATION_SEARCH_ERROR"/>
                    <enumeration value="fns:DATA_INTEGRATION_SEARCH_INPUT_ERROR"/>
                    <enumeration value="fns:DISCOVERY_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:DISCOVERY_ORG_LICENSE_REQUIRED"/>
                    <enumeration value="fns:DISCOVERY_USER_LICENSE_REQUIRED"/>
                    <enumeration value="fns:DUPLICATE_ARGUMENT_VALUE"/>
                    <enumeration value="fns:DUPLICATE_VALUE"/>
                    <enumeration value="fns:EMAIL_BATCH_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:EMAIL_TO_CASE_INVALID_ROUTING"/>
                    <enumeration value="fns:EMAIL_TO_CASE_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:EMAIL_TO_CASE_NOT_ENABLED"/>
                    <enumeration value="fns:ENTITY_NOT_QUERYABLE"/>
                    <enumeration value="fns:ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"/>
                    <enumeration value="fns:EXCEEDED_ID_LIMIT"/>
                    <enumeration value="fns:EXCEEDED_LEAD_CONVERT_LIMIT"/>
                    <enumeration value="fns:EXCEEDED_MAX_SIZE_REQUEST"/>
                    <enumeration value="fns:EXCEEDED_MAX_SOBJECTS"/>
                    <enumeration value="fns:EXCEEDED_MAX_TYPES_LIMIT"/>
                    <enumeration value="fns:EXCEEDED_QUOTA"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_CONNECTION_EXCEPTION"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_EXCEPTION"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION"/>
                    <enumeration value="fns:FEDERATED_SEARCH_ERROR"/>
                    <enumeration value="fns:FEED_NOT_ENABLED_FOR_OBJECT"/>
                    <enumeration value="fns:FUNCTIONALITY_NOT_ENABLED"/>
                    <enumeration value="fns:FUNCTIONALITY_TEMPORARILY_UNAVAILABLE"/>
                    <enumeration value="fns:ILLEGAL_QUERY_PARAMETER_VALUE"/>
                    <enumeration value="fns:INACTIVE_OWNER_OR_USER"/>
                    <enumeration value="fns:INACTIVE_PORTAL"/>
                    <enumeration value="fns:INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"/>
                    <enumeration value="fns:INSUFFICIENT_ACCESS"/>
                    <enumeration value="fns:INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY"/>
                    <enumeration value="fns:INTERNAL_CANVAS_ERROR"/>
                    <enumeration value="fns:INVALID_ASSIGNMENT_RULE"/>
                    <enumeration value="fns:INVALID_BATCH_REQUEST"/>
                    <enumeration value="fns:INVALID_BATCH_SIZE"/>
                    <enumeration value="fns:INVALID_CLIENT"/>
                    <enumeration value="fns:INVALID_CROSS_REFERENCE_KEY"/>
                    <enumeration value="fns:INVALID_DATE_FORMAT"/>
                    <enumeration value="fns:INVALID_FIELD"/>
                    <enumeration value="fns:INVALID_FILTER_LANGUAGE"/>
                    <enumeration value="fns:INVALID_FILTER_VALUE"/>
                    <enumeration value="fns:INVALID_ID_FIELD"/>
                    <enumeration value="fns:INVALID_INPUT_COMBINATION"/>
                    <enumeration value="fns:INVALID_LOCALE_LANGUAGE"/>
                    <enumeration value="fns:INVALID_LOCATOR"/>
                    <enumeration value="fns:INVALID_LOGIN"/>
                    <enumeration value="fns:INVALID_MULTIPART_REQUEST"/>
                    <enumeration value="fns:INVALID_NEW_PASSWORD"/>
                    <enumeration value="fns:INVALID_OLD_PASSWORD"/>
                    <enumeration value="fns:INVALID_OPERATION"/>
                    <enumeration value="fns:INVALID_OPERATION_WITH_EXPIRED_PASSWORD"/>
                    <enumeration value="fns:INVALID_PACKAGE_VERSION"/>
                    <enumeration value="fns:INVALID_PAGING_OPTION"/>
                    <enumeration value="fns:INVALID_QUERY_FILTER_OPERATOR"/>
                    <enumeration value="fns:INVALID_QUERY_LOCATOR"/>
                    <enumeration value="fns:INVALID_QUERY_SCOPE"/>
                    <enumeration value="fns:INVALID_REPLICATION_DATE"/>
                    <enumeration value="fns:INVALID_SEARCH"/>
                    <enumeration value="fns:INVALID_SEARCH_SCOPE"/>
                    <enumeration value="fns:INVALID_SESSION_ID"/>
                    <enumeration value="fns:INVALID_SOAP_HEADER"/>
                    <enumeration value="fns:INVALID_SORT_OPTION"/>
                    <enumeration value="fns:INVALID_SSO_GATEWAY_URL"/>
                    <enumeration value="fns:INVALID_TYPE"/>
                    <enumeration value="fns:INVALID_TYPE_FOR_OPERATION"/>
                    <enumeration value="fns:JIGSAW_ACTION_DISABLED"/>
                    <enumeration value="fns:JIGSAW_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:JIGSAW_REQUEST_NOT_SUPPORTED"/>
                    <enumeration value="fns:JSON_PARSER_ERROR"/>
                    <enumeration value="fns:KEY_HAS_BEEN_DESTROYED"/>
                    <enumeration value="fns:LICENSING_DATA_ERROR"/>
                    <enumeration value="fns:LICENSING_UNKNOWN_ERROR"/>
                    <enumeration value="fns:LIMIT_EXCEEDED"/>
                    <enumeration value="fns:LOGIN_CHALLENGE_ISSUED"/>
                    <enumeration value="fns:LOGIN_CHALLENGE_PENDING"/>
                    <enumeration value="fns:LOGIN_DURING_RESTRICTED_DOMAIN"/>
                    <enumeration value="fns:LOGIN_DURING_RESTRICTED_TIME"/>
                    <enumeration value="fns:LOGIN_MUST_USE_SECURITY_TOKEN"/>
                    <enumeration value="fns:MALFORMED_ID"/>
                    <enumeration value="fns:MALFORMED_QUERY"/>
                    <enumeration value="fns:MALFORMED_SEARCH"/>
                    <enumeration value="fns:MISSING_ARGUMENT"/>
                    <enumeration value="fns:MISSING_RECORD"/>
                    <enumeration value="fns:MODIFIED"/>
                    <enumeration value="fns:MUTUAL_AUTHENTICATION_FAILED"/>
                    <enumeration value="fns:NOT_ACCEPTABLE"/>
                    <enumeration value="fns:NOT_MODIFIED"/>
                    <enumeration value="fns:NO_ACTIVE_DUPLICATE_RULE"/>
                    <enumeration value="fns:NO_RECIPIENTS"/>
                    <enumeration value="fns:NO_SOFTPHONE_LAYOUT"/>
                    <enumeration value="fns:NUMBER_OUTSIDE_VALID_RANGE"/>
                    <enumeration value="fns:OPERATION_TOO_LARGE"/>
                    <enumeration value="fns:ORG_IN_MAINTENANCE"/>
                    <enumeration value="fns:ORG_IS_DOT_ORG"/>
                    <enumeration value="fns:ORG_IS_SIGNING_UP"/>
                    <enumeration value="fns:ORG_LOCKED"/>
                    <enumeration value="fns:ORG_NOT_OWNED_BY_INSTANCE"/>
                    <enumeration value="fns:PASSWORD_LOCKOUT"/>
                    <enumeration value="fns:PORTAL_NO_ACCESS"/>
                    <enumeration value="fns:POST_BODY_PARSE_ERROR"/>
                    <enumeration value="fns:QUERY_TIMEOUT"/>
                    <enumeration value="fns:QUERY_TOO_COMPLICATED"/>
                    <enumeration value="fns:REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT"/>
                    <enumeration value="fns:REQUEST_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:REQUEST_RUNNING_TOO_LONG"/>
                    <enumeration value="fns:SERVER_UNAVAILABLE"/>
                    <enumeration value="fns:SERVICE_DESK_NOT_ENABLED"/>
                    <enumeration value="fns:SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION"/>
                    <enumeration value="fns:SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION"/>
                    <enumeration value="fns:SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE"/>
                    <enumeration value="fns:SSO_SERVICE_DOWN"/>
                    <enumeration value="fns:SST_ADMIN_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="fns:TOO_MANY_APEX_REQUESTS"/>
                    <enumeration value="fns:TOO_MANY_RECIPIENTS"/>
                    <enumeration value="fns:TOO_MANY_RECORDS"/>
                    <enumeration value="fns:TRIAL_EXPIRED"/>
                    <enumeration value="fns:TXN_SECURITY_END_A_SESSION"/>
                    <enumeration value="fns:TXN_SECURITY_NO_ACCESS"/>
                    <enumeration value="fns:TXN_SECURITY_TWO_FA_REQUIRED"/>
                    <enumeration value="fns:UNABLE_TO_LOCK_ROW"/>
                    <enumeration value="fns:UNKNOWN_ATTACHMENT_EXCEPTION"/>
                    <enumeration value="fns:UNKNOWN_EXCEPTION"/>
                    <enumeration value="fns:UNKNOWN_ORG_SETTING"/>
                    <enumeration value="fns:UNSUPPORTED_API_VERSION"/>
                    <enumeration value="fns:UNSUPPORTED_ATTACHMENT_ENCODING"/>
                    <enumeration value="fns:UNSUPPORTED_CLIENT"/>
                    <enumeration value="fns:UNSUPPORTED_MEDIA_TYPE"/>
                    <enumeration value="fns:XML_PARSER_ERROR"/>
                </restriction>
            </simpleType>


            <!-- Fault -->
            <complexType name="ApiFault">
                <sequence>
                    <element name="exceptionCode" type="fns:ExceptionCode"/>
                    <element name="exceptionMessage" type="xsd:string"/>

                    <element name="extendedErrorDetails" type="tns:ExtendedErrorDetails" nillable="true" minOccurs="0" maxOccurs="unbounded"/>


                </sequence>
            </complexType>

            <element name="fault" type="fns:ApiFault"/>

            <complexType name="ApiQueryFault">
                <complexContent>
                    <extension base="fns:ApiFault">
                        <sequence>
                        <element name="row" type="xsd:int"/>
                        <element name="column" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="LoginFault" type="fns:LoginFault"/>

            <complexType name="InvalidQueryLocatorFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidQueryLocatorFault" type="fns:InvalidQueryLocatorFault"/>

            <complexType name="InvalidNewPasswordFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidNewPasswordFault" type="fns:InvalidNewPasswordFault"/>

            <complexType name="InvalidOldPasswordFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidOldPasswordFault" type="fns:InvalidOldPasswordFault"/>

            <complexType name="InvalidIdFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidIdFault" type="fns:InvalidIdFault"/>

            <complexType name="UnexpectedErrorFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="UnexpectedErrorFault" type="fns:UnexpectedErrorFault"/>

            <complexType name="InvalidFieldFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidFieldFault" type="fns:InvalidFieldFault"/>

            <complexType name="InvalidSObjectFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidSObjectFault" type="fns:InvalidSObjectFault"/>

            <complexType name="MalformedQueryFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="MalformedQueryFault" type="fns:MalformedQueryFault"/>

            <complexType name="MalformedSearchFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="MalformedSearchFault" type="fns:MalformedSearchFault"/>


        </schema>
    </types>

    <!-- Header Message -->
    <message name="Header">
        <part element="tns:LoginScopeHeader" name="LoginScopeHeader"/>
        <part element="tns:SessionHeader" name="SessionHeader"/>


        <part element="tns:QueryOptions" name="QueryOptions"/>
        <part element="tns:AssignmentRuleHeader" name="AssignmentRuleHeader"/>
        <part element="tns:AllowFieldTruncationHeader" name="AllowFieldTruncationHeader"/>

        <part element="tns:AllOrNoneHeader" name="AllOrNoneHeader"/>




        <part element="tns:DuplicateRuleHeader" name="DuplicateRuleHeader"/>


        <part element="tns:DisableFeedTrackingHeader" name="DisableFeedTrackingHeader"/>
        <part element="tns:StreamingEnabledHeader" name="StreamingEnabledHeader"/>
        <part element="tns:MruHeader" name="MruHeader"/>
        <part element="tns:EmailHeader" name="EmailHeader"/>

        <part element="tns:UserTerritoryDeleteHeader" name="UserTerritoryDeleteHeader"/>

        <part element="tns:DebuggingHeader" name="DebuggingHeader"/>
        <part element="tns:PackageVersionHeader" name="PackageVersionHeader"/>


        <part element="tns:DebuggingInfo" name="DebuggingInfo"/>

        <part element="tns:LimitInfoHeader" name="LimitInfoHeader"/>

        <part element="tns:LocaleOptions" name="LocaleOptions"/>

        <part element="tns:OwnerChangeOptions" name="OwnerChangeOptions"/>

    </message>

    <!-- Fault Messages -->

    <message name="ApiFault">
        <part name="fault" element="fns:fault"/>
    </message>

    <message name="LoginFault">
        <part name="fault" element="fns:LoginFault"/>
    </message>
    <message name="InvalidQueryLocatorFault">
        <part name="fault" element="fns:InvalidQueryLocatorFault"/>
    </message>
    <message name="InvalidNewPasswordFault">
        <part name="fault" element="fns:InvalidNewPasswordFault"/>
    </message>
    <message name="InvalidOldPasswordFault">
        <part name="fault" element="fns:InvalidOldPasswordFault"/>
    </message>
    <message name="InvalidIdFault">
        <part name="fault" element="fns:InvalidIdFault"/>
    </message>
    <message name="UnexpectedErrorFault">
        <part name="fault" element="fns:UnexpectedErrorFault"/>
    </message>
    <message name="InvalidFieldFault">
        <part name="fault" element="fns:InvalidFieldFault"/>
    </message>
    <message name="InvalidSObjectFault">
        <part name="fault" element="fns:InvalidSObjectFault"/>
    </message>
    <message name="MalformedQueryFault">
        <part name="fault" element="fns:MalformedQueryFault"/>
    </message>
    <message name="MalformedSearchFault">
        <part name="fault" element="fns:MalformedSearchFault"/>
    </message>


    <!-- Method Messages -->
    <message name="loginRequest">
        <part element="tns:login" name="parameters"/>
    </message>
    <message name="loginResponse">
        <part element="tns:loginResponse" name="parameters"/>
    </message>

    <message name="describeSObjectRequest">
        <part element="tns:describeSObject" name="parameters"/>
    </message>
    <message name="describeSObjectResponse">
        <part element="tns:describeSObjectResponse" name="parameters"/>
    </message>

    <message name="describeSObjectsRequest">
        <part element="tns:describeSObjects" name="parameters"/>
    </message>
    <message name="describeSObjectsResponse">
        <part element="tns:describeSObjectsResponse" name="parameters"/>
    </message>

    <message name="describeGlobalRequest">
        <part element="tns:describeGlobal" name="parameters"/>
    </message>
    <message name="describeGlobalResponse">
        <part element="tns:describeGlobalResponse" name="parameters"/>
    </message>

    <message name="describeDataCategoryGroupsRequest">
        <part element="tns:describeDataCategoryGroups" name="parameters"/>
    </message>
    <message name="describeDataCategoryGroupsResponse">
        <part element="tns:describeDataCategoryGroupsResponse" name="parameters"/>
    </message>

    <message name="describeDataCategoryGroupStructuresRequest">
        <part element="tns:describeDataCategoryGroupStructures" name="parameters"/>
    </message>
    <message name="describeDataCategoryGroupStructuresResponse">
        <part element="tns:describeDataCategoryGroupStructuresResponse" name="parameters"/>
    </message>

    <message name="describeKnowledgeSettingsRequest">
        <part element="tns:describeKnowledgeSettings" name="parameters"/>
    </message>
    <message name="describeKnowledgeSettingsResponse">
        <part element="tns:describeKnowledgeSettingsResponse" name="parameters"/>
    </message>

    <message name="describeAppMenuRequest">
        <part element="tns:describeAppMenu" name="parameters"/>
    </message>
    <message name="describeAppMenuResponse">
        <part element="tns:describeAppMenuResponse" name="parameters"/>
    </message>

    <message name="describeGlobalThemeRequest">
        <part element="tns:describeGlobalTheme" name="parameters"/>
    </message>
    <message name="describeGlobalThemeResponse">
        <part element="tns:describeGlobalThemeResponse" name="parameters"/>
    </message>

    <message name="describeThemeRequest">
        <part element="tns:describeTheme" name="parameters"/>
    </message>
    <message name="describeThemeResponse">
        <part element="tns:describeThemeResponse" name="parameters"/>
    </message>

    <message name="describeLayoutRequest">
        <part element="tns:describeLayout" name="parameters"/>
    </message>
    <message name="describeLayoutResponse">
        <part element="tns:describeLayoutResponse" name="parameters"/>
    </message>

    <message name="describeSoftphoneLayoutRequest">
        <part element="tns:describeSoftphoneLayout" name="parameters"/>
    </message>
    <message name="describeSoftphoneLayoutResponse">
        <part element="tns:describeSoftphoneLayoutResponse" name="parameters"/>
    </message>

    <message name="describeSearchLayoutsRequest">
        <part element="tns:describeSearchLayouts" name="parameters"/>
    </message>
    <message name="describeSearchLayoutsResponse">
        <part element="tns:describeSearchLayoutsResponse" name="parameters"/>
    </message>

    <message name="describeSearchableEntitiesRequest">
        <part element="tns:describeSearchableEntities" name="parameters"/>
    </message>
    <message name="describeSearchableEntitiesResponse">
        <part element="tns:describeSearchableEntitiesResponse" name="parameters"/>
    </message>

    <message name="describeSearchScopeOrderRequest">
        <part element="tns:describeSearchScopeOrder" name="parameters"/>
    </message>
    <message name="describeSearchScopeOrderResponse">
        <part element="tns:describeSearchScopeOrderResponse" name="parameters"/>
    </message>

    <message name="describeCompactLayoutsRequest">
        <part element="tns:describeCompactLayouts" name="parameters"/>
    </message>
    <message name="describeCompactLayoutsResponse">
        <part element="tns:describeCompactLayoutsResponse" name="parameters"/>
    </message>

    <message name="describePathAssistantsRequest">
        <part element="tns:describePathAssistants" name="parameters"/>
    </message>
    <message name="describePathAssistantsResponse">
        <part element="tns:describePathAssistantsResponse" name="parameters"/>
    </message>

    <message name="describeApprovalLayoutRequest">
        <part element="tns:describeApprovalLayout" name="parameters"/>
    </message>
    <message name="describeApprovalLayoutResponse">
        <part element="tns:describeApprovalLayoutResponse" name="parameters"/>
    </message>

    <message name="describeSoqlListViewsRequest">
        <part element="tns:describeSoqlListViews" name="parameters"/>
    </message>
    <message name="describeSoqlListViewsResponse">
        <part element="tns:describeSoqlListViewsResponse" name="parameters"/>
    </message>

    <message name="executeListViewRequest">
        <part element="tns:executeListView" name="parameters"/>
    </message>
    <message name="executeListViewResponse">
        <part element="tns:executeListViewResponse" name="parameters"/>
    </message>

    <message name="describeSObjectListViewsRequest">
        <part element="tns:describeSObjectListViews" name="parameters"/>
    </message>
    <message name="describeSObjectListViewsResponse">
        <part element="tns:describeSObjectListViewsResponse" name="parameters"/>
    </message>

    <message name="describeTabsRequest">
        <part element="tns:describeTabs" name="parameters"/>
    </message>
    <message name="describeTabsResponse">
        <part element="tns:describeTabsResponse" name="parameters"/>
    </message>

    <message name="describeAllTabsRequest">
        <part element="tns:describeAllTabs" name="parameters"/>
    </message>
    <message name="describeAllTabsResponse">
        <part element="tns:describeAllTabsResponse" name="parameters"/>
    </message>

    <message name="describePrimaryCompactLayoutsRequest">
        <part element="tns:describePrimaryCompactLayouts" name="parameters"/>
    </message>
    <message name="describePrimaryCompactLayoutsResponse">
        <part element="tns:describePrimaryCompactLayoutsResponse" name="parameters"/>
    </message>

    <message name="createRequest">
        <part element="tns:create" name="parameters"/>
    </message>
    <message name="createResponse">
        <part element="tns:createResponse" name="parameters"/>
    </message>

    <message name="updateRequest">
        <part element="tns:update" name="parameters"/>
    </message>
    <message name="updateResponse">
        <part element="tns:updateResponse" name="parameters"/>
    </message>

    <message name="upsertRequest">
        <part element="tns:upsert" name="parameters"/>
    </message>
    <message name="upsertResponse">
        <part element="tns:upsertResponse" name="parameters"/>
    </message>

    <message name="mergeRequest">
        <part element="tns:merge" name="parameters"/>
    </message>
    <message name="mergeResponse">
        <part element="tns:mergeResponse" name="parameters"/>
    </message>

    <message name="deleteRequest">
        <part element="tns:delete" name="parameters"/>
    </message>
    <message name="deleteResponse">
        <part element="tns:deleteResponse" name="parameters"/>
    </message>

    <message name="undeleteRequest">
        <part element="tns:undelete" name="parameters"/>
    </message>
    <message name="undeleteResponse">
        <part element="tns:undeleteResponse" name="parameters"/>
    </message>

    <message name="emptyRecycleBinRequest">
        <part element="tns:emptyRecycleBin" name="parameters"/>
    </message>
    <message name="emptyRecycleBinResponse">
        <part element="tns:emptyRecycleBinResponse" name="parameters"/>
    </message>

    <message name="retrieveRequest">
        <part element="tns:retrieve" name="parameters"/>
    </message>
    <message name="retrieveResponse">
        <part element="tns:retrieveResponse" name="parameters"/>
    </message>

    <message name="processRequest">
        <part element="tns:process" name="parameters"/>
    </message>
    <message name="processResponse">
        <part element="tns:processResponse" name="parameters"/>
    </message>

    <message name="convertLeadRequest">
        <part element="tns:convertLead" name="parameters"/>
    </message>
    <message name="convertLeadResponse">
        <part element="tns:convertLeadResponse" name="parameters"/>
    </message>

    <message name="logoutRequest">
        <part element="tns:logout" name="parameters"/>
    </message>
    <message name="logoutResponse">
        <part element="tns:logoutResponse" name="parameters"/>
    </message>

    <message name="invalidateSessionsRequest">
        <part element="tns:invalidateSessions" name="parameters"/>
    </message>
    <message name="invalidateSessionsResponse">
        <part element="tns:invalidateSessionsResponse" name="parameters"/>
    </message>

    <message name="getDeletedRequest">
        <part element="tns:getDeleted" name="parameters"/>
    </message>
    <message name="getDeletedResponse">
        <part element="tns:getDeletedResponse" name="parameters"/>
    </message>

    <message name="getUpdatedRequest">
        <part element="tns:getUpdated" name="parameters"/>
    </message>
    <message name="getUpdatedResponse">
        <part element="tns:getUpdatedResponse" name="parameters"/>
    </message>

    <message name="queryRequest">
        <part element="tns:query" name="parameters"/>
    </message>
    <message name="queryResponse">
        <part element="tns:queryResponse" name="parameters"/>
    </message>

    <message name="queryAllRequest">
        <part element="tns:queryAll" name="parameters"/>
    </message>
    <message name="queryAllResponse">
        <part element="tns:queryAllResponse" name="parameters"/>
    </message>

    <message name="queryMoreRequest">
        <part element="tns:queryMore" name="parameters"/>
    </message>
    <message name="queryMoreResponse">
        <part element="tns:queryMoreResponse" name="parameters"/>
    </message>

    <message name="searchRequest">
        <part element="tns:search" name="parameters"/>
    </message>
    <message name="searchResponse">
        <part element="tns:searchResponse" name="parameters"/>
    </message>

    <message name="getServerTimestampRequest">
        <part element="tns:getServerTimestamp" name="parameters"/>
    </message>
    <message name="getServerTimestampResponse">
        <part element="tns:getServerTimestampResponse" name="parameters"/>
    </message>

    <message name="setPasswordRequest">
        <part element="tns:setPassword" name="parameters"/>
    </message>
    <message name="setPasswordResponse">
        <part element="tns:setPasswordResponse" name="parameters"/>
    </message>

    <message name="changeOwnPasswordRequest">
        <part element="tns:changeOwnPassword" name="parameters"/>
    </message>
    <message name="changeOwnPasswordResponse">
        <part element="tns:changeOwnPasswordResponse" name="parameters"/>
    </message>

    <message name="resetPasswordRequest">
        <part element="tns:resetPassword" name="parameters"/>
    </message>
    <message name="resetPasswordResponse">
        <part element="tns:resetPasswordResponse" name="parameters"/>
    </message>

    <message name="getUserInfoRequest">
        <part element="tns:getUserInfo" name="parameters"/>
    </message>
    <message name="getUserInfoResponse">
        <part element="tns:getUserInfoResponse" name="parameters"/>
    </message>

    <message name="sendEmailMessageRequest">
        <part element="tns:sendEmailMessage" name="parameters"/>
    </message>
    <message name="sendEmailMessageResponse">
        <part element="tns:sendEmailMessageResponse" name="parameters"/>
    </message>

    <message name="sendEmailRequest">
        <part element="tns:sendEmail" name="parameters"/>
    </message>
    <message name="sendEmailResponse">
        <part element="tns:sendEmailResponse" name="parameters"/>
    </message>

    <message name="renderEmailTemplateRequest">
        <part element="tns:renderEmailTemplate" name="parameters"/>
    </message>
    <message name="renderEmailTemplateResponse">
        <part element="tns:renderEmailTemplateResponse" name="parameters"/>
    </message>

    <message name="renderStoredEmailTemplateRequest">
        <part element="tns:renderStoredEmailTemplate" name="parameters"/>
    </message>
    <message name="renderStoredEmailTemplateResponse">
        <part element="tns:renderStoredEmailTemplateResponse" name="parameters"/>
    </message>

    <message name="performQuickActionsRequest">
        <part element="tns:performQuickActions" name="parameters"/>
    </message>
    <message name="performQuickActionsResponse">
        <part element="tns:performQuickActionsResponse" name="parameters"/>
    </message>

    <message name="describeQuickActionsRequest">
        <part element="tns:describeQuickActions" name="parameters"/>
    </message>
    <message name="describeQuickActionsResponse">
        <part element="tns:describeQuickActionsResponse" name="parameters"/>
    </message>

    <message name="describeAvailableQuickActionsRequest">
        <part element="tns:describeAvailableQuickActions" name="parameters"/>
    </message>
    <message name="describeAvailableQuickActionsResponse">
        <part element="tns:describeAvailableQuickActionsResponse" name="parameters"/>
    </message>

    <message name="retrieveQuickActionTemplatesRequest">
        <part element="tns:retrieveQuickActionTemplates" name="parameters"/>
    </message>
    <message name="retrieveQuickActionTemplatesResponse">
        <part element="tns:retrieveQuickActionTemplatesResponse" name="parameters"/>
    </message>

    <message name="describeVisualForceRequest">
        <part element="tns:describeVisualForce" name="parameters"/>
    </message>
    <message name="describeVisualForceResponse">
        <part element="tns:describeVisualForceResponse" name="parameters"/>
    </message>

    <message name="findDuplicatesRequest">
        <part element="tns:findDuplicates" name="parameters"/>
    </message>
    <message name="findDuplicatesResponse">
        <part element="tns:findDuplicatesResponse" name="parameters"/>
    </message>

    <message name="findDuplicatesByIdsRequest">
        <part element="tns:findDuplicatesByIds" name="parameters"/>
    </message>
    <message name="findDuplicatesByIdsResponse">
        <part element="tns:findDuplicatesByIdsResponse" name="parameters"/>
    </message>

    <message name="describeNounsRequest">
        <part element="tns:describeNouns" name="parameters"/>
    </message>
    <message name="describeNounsResponse">
        <part element="tns:describeNounsResponse" name="parameters"/>
    </message>



    <!-- Soap PortType -->
    <portType name="Soap">
        <operation name="login">
            <documentation>Login to the Salesforce.com SOAP Api</documentation>
            <input message="tns:loginRequest"/>
            <output message="tns:loginResponse"/>
            <fault message="tns:LoginFault" name="LoginFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="describeSObject">
            <documentation>Describe an sObject</documentation>
            <input message="tns:describeSObjectRequest"/>
            <output message="tns:describeSObjectResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeSObjects">
            <documentation>Describe multiple sObjects (upto 100)</documentation>
            <input message="tns:describeSObjectsRequest"/>
            <output message="tns:describeSObjectsResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeGlobal">
            <documentation>Describe the Global state</documentation>
            <input message="tns:describeGlobalRequest"/>
            <output message="tns:describeGlobalResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeDataCategoryGroups">
            <documentation>Describe all the data category groups available for a given set of types</documentation>
            <input message="tns:describeDataCategoryGroupsRequest"/>
            <output message="tns:describeDataCategoryGroupsResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeDataCategoryGroupStructures">
            <documentation>Describe the data category group structures for a given set of pair of types and data category group name</documentation>
            <input message="tns:describeDataCategoryGroupStructuresRequest"/>
            <output message="tns:describeDataCategoryGroupStructuresResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeKnowledgeSettings">
            <documentation>Describes your Knowledge settings, such as if knowledgeEnabled is on or off, its default language and supported languages</documentation>
            <input message="tns:describeKnowledgeSettingsRequest"/>
            <output message="tns:describeKnowledgeSettingsResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeAppMenu">
            <documentation>Describe the items in an AppMenu</documentation>
            <input message="tns:describeAppMenuRequest"/>
            <output message="tns:describeAppMenuResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeGlobalTheme">
            <documentation>Describe Gloal and Themes</documentation>
            <input message="tns:describeGlobalThemeRequest"/>
            <output message="tns:describeGlobalThemeResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeTheme">
            <documentation>Describe Themes</documentation>
            <input message="tns:describeThemeRequest"/>
            <output message="tns:describeThemeResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeLayout">
            <documentation>Describe the layout of the given sObject or the given actionable global page.</documentation>
            <input message="tns:describeLayoutRequest"/>
            <output message="tns:describeLayoutResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="describeSoftphoneLayout">
            <documentation>Describe the layout of the SoftPhone</documentation>
            <input message="tns:describeSoftphoneLayoutRequest"/>
            <output message="tns:describeSoftphoneLayoutResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeSearchLayouts">
            <documentation>Describe the search view of an sObject</documentation>
            <input message="tns:describeSearchLayoutsRequest"/>
            <output message="tns:describeSearchLayoutsResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeSearchableEntities">
            <documentation>Describe a list of entity names that reflects the current user's searchable entities</documentation>
            <input message="tns:describeSearchableEntitiesRequest"/>
            <output message="tns:describeSearchableEntitiesResponse"/>
        </operation>

        <operation name="describeSearchScopeOrder">
            <documentation>Describe a list of objects representing the order and scope of objects on a users search result page</documentation>
            <input message="tns:describeSearchScopeOrderRequest"/>
            <output message="tns:describeSearchScopeOrderResponse"/>
        </operation>

        <operation name="describeCompactLayouts">
            <documentation>Describe the compact layouts of the given sObject</documentation>
            <input message="tns:describeCompactLayoutsRequest"/>
            <output message="tns:describeCompactLayoutsResponse"/>
        </operation>

        <operation name="describePathAssistants">
            <documentation>Describe the Path Assistants for the given sObject and optionally RecordTypes</documentation>
            <input message="tns:describePathAssistantsRequest"/>
            <output message="tns:describePathAssistantsResponse"/>
        </operation>

        <operation name="describeApprovalLayout">
            <documentation>Describe the approval layouts of the given sObject</documentation>
            <input message="tns:describeApprovalLayoutRequest"/>
            <output message="tns:describeApprovalLayoutResponse"/>
        </operation>

        <operation name="describeSoqlListViews">
            <documentation>Describe the ListViews as SOQL metadata for the generation of SOQL.</documentation>
            <input message="tns:describeSoqlListViewsRequest"/>
            <output message="tns:describeSoqlListViewsResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="executeListView">
            <documentation>Execute the specified list view and return the presentation-ready results.</documentation>
            <input message="tns:executeListViewRequest"/>
            <output message="tns:executeListViewResponse"/>
        </operation>

        <operation name="describeSObjectListViews">
            <documentation>Describe the ListViews of a SObject as SOQL metadata for the generation of SOQL.</documentation>
            <input message="tns:describeSObjectListViewsRequest"/>
            <output message="tns:describeSObjectListViewsResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeTabs">
            <documentation>Describe the tabs that appear on a users page</documentation>
            <input message="tns:describeTabsRequest"/>
            <output message="tns:describeTabsResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeAllTabs">
            <documentation>Describe all tabs available to a user</documentation>
            <input message="tns:describeAllTabsRequest"/>
            <output message="tns:describeAllTabsResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describePrimaryCompactLayouts">
            <documentation>Describe the primary compact layouts for the sObjects requested</documentation>
            <input message="tns:describePrimaryCompactLayoutsRequest"/>
            <output message="tns:describePrimaryCompactLayoutsResponse"/>
        </operation>

        <operation name="create">
            <documentation>Create a set of new sObjects</documentation>
            <input message="tns:createRequest"/>
            <output message="tns:createResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="update">
            <documentation>Update a set of sObjects</documentation>
            <input message="tns:updateRequest"/>
            <output message="tns:updateResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="upsert">
            <documentation>Update or insert a set of sObjects based on object id</documentation>
            <input message="tns:upsertRequest"/>
            <output message="tns:upsertResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="merge">
            <documentation>Merge and update a set of sObjects based on object id</documentation>
            <input message="tns:mergeRequest"/>
            <output message="tns:mergeResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="delete">
            <documentation>Delete a set of sObjects</documentation>
            <input message="tns:deleteRequest"/>
            <output message="tns:deleteResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="undelete">
            <documentation>Undelete a set of sObjects</documentation>
            <input message="tns:undeleteRequest"/>
            <output message="tns:undeleteResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="emptyRecycleBin">
            <documentation>Empty a set of sObjects from the recycle bin</documentation>
            <input message="tns:emptyRecycleBinRequest"/>
            <output message="tns:emptyRecycleBinResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="retrieve">
            <documentation>Get a set of sObjects</documentation>
            <input message="tns:retrieveRequest"/>
            <output message="tns:retrieveResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="process">
            <documentation>Submit an entity to a workflow process or process a workitem</documentation>
            <input message="tns:processRequest"/>
            <output message="tns:processResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="convertLead">
            <documentation>convert a set of leads</documentation>
            <input message="tns:convertLeadRequest"/>
            <output message="tns:convertLeadResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="logout">
            <documentation>Logout the current user, invalidating the current session.</documentation>
            <input message="tns:logoutRequest"/>
            <output message="tns:logoutResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="invalidateSessions">
            <documentation>Logs out and invalidates session ids</documentation>
            <input message="tns:invalidateSessionsRequest"/>
            <output message="tns:invalidateSessionsResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getDeleted">
            <documentation>Get the IDs for deleted sObjects</documentation>
            <input message="tns:getDeletedRequest"/>
            <output message="tns:getDeletedResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getUpdated">
            <documentation>Get the IDs for updated sObjects</documentation>
            <input message="tns:getUpdatedRequest"/>
            <output message="tns:getUpdatedResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="query">
            <documentation>Create a Query Cursor</documentation>
            <input message="tns:queryRequest"/>
            <output message="tns:queryResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidQueryLocatorFault" name="InvalidQueryLocatorFault"/>
        </operation>

        <operation name="queryAll">
            <documentation>Create a Query Cursor, including deleted sObjects</documentation>
            <input message="tns:queryAllRequest"/>
            <output message="tns:queryAllResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidQueryLocatorFault" name="InvalidQueryLocatorFault"/>
        </operation>

        <operation name="queryMore">
            <documentation>Gets the next batch of sObjects from a query</documentation>
            <input message="tns:queryMoreRequest"/>
            <output message="tns:queryMoreResponse"/>
            <fault message="tns:InvalidQueryLocatorFault" name="InvalidQueryLocatorFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
        </operation>

        <operation name="search">
            <documentation>Search for sObjects</documentation>
            <input message="tns:searchRequest"/>
            <output message="tns:searchResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault message="tns:MalformedSearchFault" name="MalformedSearchFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getServerTimestamp">
            <documentation>Gets server timestamp</documentation>
            <input message="tns:getServerTimestampRequest"/>
            <output message="tns:getServerTimestampResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="setPassword">
            <documentation>Set a user's password</documentation>
            <input message="tns:setPasswordRequest"/>
            <output message="tns:setPasswordResponse"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:InvalidNewPasswordFault" name="InvalidNewPasswordFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="changeOwnPassword">
            <documentation>Change the current user's password</documentation>
            <input message="tns:changeOwnPasswordRequest"/>
            <output message="tns:changeOwnPasswordResponse"/>
            <fault message="tns:InvalidNewPasswordFault" name="InvalidNewPasswordFault"/>
            <fault message="tns:InvalidOldPasswordFault" name="InvalidOldPasswordFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="resetPassword">
            <documentation>Reset a user's password</documentation>
            <input message="tns:resetPasswordRequest"/>
            <output message="tns:resetPasswordResponse"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getUserInfo">
            <documentation>Returns standard information relevant to the current user</documentation>
            <input message="tns:getUserInfoRequest"/>
            <output message="tns:getUserInfoResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="sendEmailMessage">
            <documentation>Send existing draft EmailMessage</documentation>
            <input message="tns:sendEmailMessageRequest"/>
            <output message="tns:sendEmailMessageResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="sendEmail">
            <documentation>Send outbound email</documentation>
            <input message="tns:sendEmailRequest"/>
            <output message="tns:sendEmailResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="renderEmailTemplate">
            <documentation>Perform a template merge on one or more blocks of text.</documentation>
            <input message="tns:renderEmailTemplateRequest"/>
            <output message="tns:renderEmailTemplateResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="renderStoredEmailTemplate">
            <documentation>Perform a template merge using an email template stored in the database.</documentation>
            <input message="tns:renderStoredEmailTemplateRequest"/>
            <output message="tns:renderStoredEmailTemplateResponse"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="performQuickActions">
            <documentation>Perform a series of predefined actions such as quick create or log a task</documentation>
            <input message="tns:performQuickActionsRequest"/>
            <output message="tns:performQuickActionsResponse"/>
        </operation>

        <operation name="describeQuickActions">
            <documentation>Describe the details of a series of quick actions</documentation>
            <input message="tns:describeQuickActionsRequest"/>
            <output message="tns:describeQuickActionsResponse"/>
        </operation>

        <operation name="describeAvailableQuickActions">
            <documentation>Describe the details of a series of quick actions available for the given contextType</documentation>
            <input message="tns:describeAvailableQuickActionsRequest"/>
            <output message="tns:describeAvailableQuickActionsResponse"/>
        </operation>

        <operation name="retrieveQuickActionTemplates">
            <documentation>Retreive the template sobjects, if appropriate, for the given quick action names in a given context</documentation>
            <input message="tns:retrieveQuickActionTemplatesRequest"/>
            <output message="tns:retrieveQuickActionTemplatesResponse"/>
        </operation>

        <operation name="describeVisualForce">
            <documentation>Describe visualforce for an org</documentation>
            <input message="tns:describeVisualForceRequest"/>
            <output message="tns:describeVisualForceResponse"/>
        </operation>

        <operation name="findDuplicates">
            <documentation>Find duplicates for a set of sObjects</documentation>
            <input message="tns:findDuplicatesRequest"/>
            <output message="tns:findDuplicatesResponse"/>
            <fault message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="findDuplicatesByIds">
            <documentation>Find duplicates for a set of ids</documentation>
            <input message="tns:findDuplicatesByIdsRequest"/>
            <output message="tns:findDuplicatesByIdsResponse"/>
            <fault message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeNouns">
            <documentation>Return the renameable nouns from the server for use in presentation using the salesforce grammar engine</documentation>
            <input message="tns:describeNounsRequest"/>
            <output message="tns:describeNounsResponse"/>
        </operation>

    </portType>

    <!-- Soap Binding -->
    <binding name="SoapBinding" type="tns:Soap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="login">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="LoginScopeHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="LoginFault">
                <soap:fault name="LoginFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSObject">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSObjects">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeGlobal">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeDataCategoryGroups">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeDataCategoryGroupStructures">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeKnowledgeSettings">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeAppMenu">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeGlobalTheme">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeTheme">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeLayout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSoftphoneLayout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSearchLayouts">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSearchableEntities">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeSearchScopeOrder">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeCompactLayouts">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describePathAssistants">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeApprovalLayout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeSoqlListViews">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="executeListView">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeSObjectListViews">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeTabs">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeAllTabs">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describePrimaryCompactLayouts">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="create">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="update">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="OwnerChangeOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="upsert">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="OwnerChangeOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="merge">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="delete">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="UserTerritoryDeleteHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="undelete">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="emptyRecycleBin">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="retrieve">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="process">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="convertLead">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="logout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="invalidateSessions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getDeleted">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getUpdated">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="query">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidQueryLocatorFault">
                <soap:fault name="InvalidQueryLocatorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="queryAll">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidQueryLocatorFault">
                <soap:fault name="InvalidQueryLocatorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="queryMore">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidQueryLocatorFault">
                <soap:fault name="InvalidQueryLocatorFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
        </operation>
        <operation name="search">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedSearchFault">
                <soap:fault name="MalformedSearchFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getServerTimestamp">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="setPassword">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidNewPasswordFault">
                <soap:fault name="InvalidNewPasswordFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="changeOwnPassword">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidNewPasswordFault">
                <soap:fault name="InvalidNewPasswordFault" use="literal"/>
            </fault>
            <fault name="InvalidOldPasswordFault">
                <soap:fault name="InvalidOldPasswordFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="resetPassword">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getUserInfo">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="sendEmailMessage">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="sendEmail">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="renderEmailTemplate">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="renderStoredEmailTemplate">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="performQuickActions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="OwnerChangeOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeQuickActions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeAvailableQuickActions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="retrieveQuickActionTemplates">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeVisualForce">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="findDuplicates">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="findDuplicatesByIds">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeNouns">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>

    </binding>

    <!-- Soap Service Endpoint -->
    <service name="SforceService">
        <documentation>Sforce SOAP API</documentation>
        <port binding="tns:SoapBinding" name="Soap">
            <soap:address location="https://test.salesforce.com/services/Soap/c/40.0/0DFg000000001pP"/>
        </port>
    </service>
</definitions>","last-modified":"2017-07-27T17:32:10.000Z","x-amz-meta-file_id":"597a239917f60c3b788eb2f0","x-amz-meta-ttl":"0","content-disposition":"attachment; filename=\"enterprise.wsdl\"","x-amz-meta-owner":"sdelano%40bu.edu","x-amz-meta-expire_time":"2017-07-27 17:32:09.155469","content-location":"sldb:///BUDev/projects/SeanDelano/enterprise.wsdl","content-type":"binary/octet-stream","etag":"\"6c052e3c0f0511c5ddb41dd0eddb5733-1\"","x-amz-request-id":"4EE80D060889B0C7","x-amz-meta-mimetype":"application/wsdl+xml","x-amz-id-2":"TD0QLC/9a4SQU4TmZSPMmA6XufFL2JR6Lou4qrNq0ztLD3MxDWo4Jq9XtK8FtnuhSqoVjnuTzok=","accept-ranges":"bytes","original":{"partition_snode_id":"58c70e0fa87b6d76b3470f45","updated_by":"sdelano@bu.edu","perms":["A","R","W","X"],"time_created":"2017-07-27T17:32:10.847000+00:00","snode_id":"597a239a17f60c3b788eb2f2","owner":"sdelano@bu.edu","path":"/BUDev/projects/SeanDelano/enterprise.wsdl","asset_type":"File","asset_id":"597a239917f60c3b788eb2f0","time_updated":"2017-07-27T17:32:10.847000+00:00","name":"enterprise.wsdl","parent_snode_id":"58c7fc7880b28239d98a5dab","acl":[],"metadata":{"length":2271766},"original":{"partition_snode_id":"58c70e0fa87b6d76b3470f45","updated_by":"sdelano@bu.edu","perms":["A","R","W","X"],"time_created":"2017-03-14T14:21:44.799000+00:00","snode_id":"58c7fc7880b28239d98a5dab","owner":"sdelano@bu.edu","path":"/BUDev/projects/SeanDelano","asset_type":"Dir","asset_id":null,"time_updated":"2017-11-02T11:59:15.670000+00:00","name":"SeanDelano","parent_snode_id":"58c70e0fa87b6d76b3470f45","acl":[{"perms":["R","X","W"],"subject_type":"USER","inherit":true,"subject":"msager@snaplogic.com"},{"perms":["R","W","X"],"subject_type":"USER","inherit":true,"subject":"msangar@snaplogic.com"},{"perms":["R","X"],"subject_type":"USER","inherit":true,"subject":"mvyravan@bu.edu"},{"perms":["R","X"],"subject_type":"USER","inherit":true,"subject":"nbride@bu.edu"},{"perms":["R","X"],"subject_type":"USER","inherit":true,"subject":"sdelano1@comcast.net"},{"perms":["R","W","X"],"subject_type":"USER","inherit":true,"subject":"sdelano@bu.edu"},{"perms":["R","X"],"subject_type":"USER","inherit":true,"subject":"wlobao@bu.edu"},{"perms":["R","X"],"subject_type":"USER","inherit":true,"subject":"tsemd@bu.edu"}],"metadata":{"pattern":false},"original":{"partition_snode_id":"5a1eba684503bf001e5a19c6","updated_by":"sdelano@bu.edu","perms":["A","R","W","X"],"time_created":"2017-03-13T21:24:31.092000+00:00","snode_id":"58c70e0fa87b6d76b3470f45","owner":"sdelano1@comcast.net","path":"/BUDev/projects","asset_type":"Dir","asset_id":null,"time_updated":"2017-11-03T14:40:52.927000+00:00","name":"projects","parent_snode_id":"58c70e0ea87b6d76b3470f3e","acl":[{"perms":["R","W","X"],"subject_type":"USER","inherit":true,"subject":"admin@snaplogic.com"},{"perms":["R"],"subject_type":"GROUP","inherit":false,"subject":"members"},{"perms":["R"],"subject_type":"USER","inherit":false,"subject":"mvyravan@bu.edu"},{"perms":["R","W","X"],"subject_type":"USER","inherit":true,"subject":"sdelano1@comcast.net"},{"perms":["R","X","W"],"subject_type":"GROUP","inherit":false,"subject":"Developers"}],"metadata":{}}}}}